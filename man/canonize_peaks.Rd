% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peak_calling.R
\name{canonize_peaks}
\alias{canonize_peaks}
\title{Generate a set of non-overlapping peaks from a set of intervals}
\usage{
canonize_peaks(
  intervals,
  size,
  marginal_track = NULL,
  iterator = NULL,
  keep_marginal = TRUE
)
}
\arguments{
\item{intervals}{A data frame with columns \code{chrom}, \code{start}, and \code{end}.}

\item{size}{The desired size of the peaks.}

\item{marginal_track}{A marginal track to use for generating peaks (or any other misha track expression).}

\item{iterator}{An iterator to use for extracting the marginal track.}

\item{keep_marginal}{Whether to keep the marginal track in the output. If TRUE, a column named \code{marginal} will be added to the output.}
}
\value{
A data frame with columns \code{chrom}, \code{start}, \code{end}, and optionally \code{marginal}.
}
\description{
Given a set of intervals, usually generated from a threshold on the marginal ATAC signal, the function generates a set of non-overlapping peaks of a given size. The function can also take a marginal track and use it to generate peaks with the highest marginal signal. \cr
The function is iterative, where in each step the intervals are centered on the highest marginal signal, expanded to the desired size, and then merged to remove overlaps. The process is repeated until no more overlaps are present. \cr
}
\examples{
\dontrun{
intervals <- gscreen("atac_marginal >= 300")
peaks <- canonize_peaks(intervals, 300, marginal_track = "atac_marginal")
head(peaks)
}

}
