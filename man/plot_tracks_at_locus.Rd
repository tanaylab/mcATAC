% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_tracks_at_locus}
\alias{plot_tracks_at_locus}
\title{Plot metacell tracks around locus}
\usage{
plot_tracks_at_locus(
  tracks = NULL,
  gene = NULL,
  intervals = NULL,
  iterator = 100,
  extend = 0,
  gene_feature = "exon",
  track_regex = NULL,
  chromosomes = gintervals.all() \%>\% filter(!grepl("_", chrom)) \%>\% pull(chrom),
  atac = NULL,
  order_rows = FALSE,
  row_order = NULL,
  gene_annot = TRUE,
  name = NULL,
  annotation_row = NULL,
  annotation_col = NULL,
  annotation_colors = NULL,
  silent = FALSE,
  scale_bar_length = NULL,
  rna_legc_eps = 0.00001,
  colors = colorRampPalette(c("white", "darkblue", "red"))(100),
  ...
)
}
\arguments{
\item{tracks}{(optional) all tracks to plot}

\item{gene}{(optional) which gene to plot around; if no gene is found as a whole, partial matches are searched for}

\item{intervals}{(optional) what genomic interval to plot}

\item{iterator}{(optional; default - 10) misha iterator, determines the resolution at which the data is extracted and plotted}

\item{extend}{(optional; default - 0) how much to extend \code{intervals} by on each side}

\item{gene_feature}{(optional; default - "exon") whether to use the exon or tss as features of the gene on which to center the plot}

\item{track_regex}{(optional) regular expression for matching tracks to plot}

\item{chromosomes}{(optional) which set of chromosomes to use; mainly used to filter out contigs by default}

\item{atac}{(optional) McATAC object from which to extract peaks in locus, and possibly \cr
RNA expression values (if an RNA metacell object is attached)}

\item{order_rows}{whether to order the rows by \code{cell_type} annotation}

\item{row_order}{an explicit ordering of rows/tracks to use}

\item{gene_annot}{(optional) whether to add gene annotations; these annotations rely on the existence of an \code{annots/refGene.txt} file in the genome's misha directory}

\item{name}{(optional; default - 'ATAC signal') name to give the legend of the heatmap}

\item{annotation_row}{pheatmap-format annotation}

\item{annotation_col}{pheatmap-format annotation}

\item{annotation_colors}{pheatmap-format annotation}

\item{silent}{(optional) whether to print generated plot}

\item{rna_legc_eps}{(optional) what regularization value to add to mc_rna@e_gc when calculating log}

\item{colors}{(optional) colorRampPalette vector of colors for scaling colors in heatmap}
}
\value{
a ComplexHeatmap figure
}
\description{
This function plots a set of tracks in a certain locus. Tracks can be given as a vector (\code{tracks}),
or retreived using \code{track_regex}. The intervals to be plotted can be chosen explicitly using the parameter
\code{intervals}. Alternatively, one can specify the parameter \code{gene}; by default, the gene body (all exons)
will be plotted, this can be modified using the parameters \code{extend} (how many bp to extend from each side of
the gene features) and \code{gene_feature}, where the intervals can be centered around TSSs of
the gene (gene_feature = 'tss'). \cr
Metacell annotations can be added using \code{annotation_row} and \code{annotation_colors} (phetamap-style annotations),
which can/should be generated automatically by \code{generate_pheatmap_annotation}.
RNA expression values of the \code{gene} of interest can be added by specifying an McATAC object, \code{atac}, to
which an RNA metacell object is attached (see the function \code{add_mc_rna})
}
\examples{
\dontrun{
atac_sc <- import_from_10x("pbmc_data", genome = "hg38", id = "PBMC", description = "PBMC from a healthy donor - granulocytes removed through cell sorting (10k)")
data(cell_to_metacell_pbmc_example)
atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example)
data(mcmd)
atac_mc <- add_mc_metadata(atac_mc, mcmd)
data(rna_mc_mat)
atac_mc <- add_mc_rna(atac_mc, rna_mc_mat)
pbmc_tracks <- grep("unnorm", gtrack.ls("PBMC_10X.mc"), inv = TRUE, v = TRUE)
# plot gene-centered intervals
plot_tracks_at_locus(
    tracks = pbmc_tracks, extend = 5e+4,
    gene = "ATF3",
    atac = atac_mc,
    gene_annot = TRUE,
    order_rows = TRUE
)

# plot arbitrary intervals
plot_tracks_at_locus(
    tracks = pbmc_tracks,
    intervals = gintervals(2, 1e+7, 1.15e+7),
    atac = atac_mc,
    gene_annot = TRUE,
    order_rows = TRUE
)
}
}
