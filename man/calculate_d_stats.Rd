% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motifs.R
\name{calculate_d_stats}
\alias{calculate_d_stats}
\title{Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies}
\usage{
calculate_d_stats(
  pssm_fg,
  pssm_bg,
  fg_clustering = NULL,
  parallel = getOption("mcatac.parallel"),
  alternative = "less",
  nc = getOption("mcatac.parallel.nc")
)
}
\arguments{
\item{pssm_fg}{motif energies calculated for a certain set of motifs on a PeakIntervals/ScATACPeaks/McATACPeaks object}

\item{pssm_bg}{a background set of intervals (e.g. random genome, all ENCODE enhancers etc.) that include all/subset of the motifs (columns) in pssm_fg}

\item{fg_clustering}{a vector of cluster assignments for the foreground peaks (e.g. from \code{gen_atac_peak_clust})}

\item{parallel}{(optional) - whether to use parallelize computations}

\item{alternative}{indicates the alternative hypothesis and must be
    one of \code{"two.sided"} (default), \code{"less"}, or
    \code{"greater"}.  You can specify just the initial letter of the
    value, but the argument name must be given in full.
    See \sQuote{Details} for the meanings of the possible values.}

\item{nc}{(optional) - number of cores for parallel computations}
}
\value{
if \code{fg_clustering == TRUE}, returns a matrix of clusters x motifs (rows x columns) with the D-statistic for each combination
}
\description{
This function does a one-sided KS test between a foreground set of peaks (\code{pssm_fg}) and a background set \code{pssm_bg}.
The option \code{alternative == "less"}, checks the null hypothesis that the foreground distribution is not less than the
background distribution (applicable when looking for motif enrichment; for anti-enrichment, \code{alternative == 'greater'},
see ks.test documentation for further details)
}
\examples{
\dontrun{
pssm_fg <- generate_motif_pssm_matrix(my_atac_mc, datasets_of_interest = "jaspar")
pssm_bg <- gen_random_genome_peak_motif_matrix(num_peaks = nrow(my_atac_mc@peaks), datasets_of_interest = "jaspar")
d_vs_rg <- calculate_d_stats(pssm_fg, pssm_bg)
peak_clust <- gen_atac_peak_clust(my_atac_mc, k = 12)
d_vs_rg_cl <- calculate_d_stats(pssm_fg, pssm_bg, fg_clustering = peak_clust)
}
}
