[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/analysis.html","id":"download-fragments-data","dir":"Articles","previous_headings":"","what":"Download fragments data","title":"peaks","text":"start downloading fragments data (’s index) 10x: download fragments file index : PBMC healthy donor - granulocytes removed cell sorting (10k) Note ‘fragments’ file large - ~2GB, step might take time.","code":"if (!dir.exists(\"pbmc_data\") || !file.exists(\"pbmc_data/fragments.tsv.gz\") || !file.exists(\"pbmc_data/fragments.tsv.gz.tbi\")){   download_pbmc_example_data(fragments = TRUE) }"},{"path":"/articles/analysis.html","id":"import-raw-reads-into-a-sccounts-format","dir":"Articles","previous_headings":"","what":"Import raw reads into a ScCounts format","title":"peaks","text":"mcATAC allows load raw counts data ScCounts object. ScCounts holds raw reads set sparse matrices rows genomic coordinates columns cell barcodes. number sparse matrices (“genomic bins”) controlled bin_size parameter. matrices stored ‘gzip’ compressed form directory called ‘data’, together ‘yaml’ file containing metadata genomic bins coordinates cell barcodes. can now import raw reads ScCounts object going store “pbmc_data/reads”. Note might take ~4 minutes machine 96 cores.","code":"barcodes <- tgutil::fread(\"pbmc_data/barcodes.tsv\", header = FALSE)[, 1] write_sc_counts_from_fragments(\"pbmc_data/fragments.tsv.gz\", \"pbmc_data/reads\", cell_names = barcodes, genome = \"hg38\", overwrite = TRUE)"},{"path":"/articles/analysis.html","id":"load-sccounts-object","dir":"Articles","previous_headings":"","what":"Load ScCounts object","title":"peaks","text":"","code":"sc_counts <- scc_read(\"pbmc_data/reads\") sc_counts"},{"path":"/articles/analysis.html","id":"project-rna-metacells","dir":"Articles","previous_headings":"","what":"Project RNA metacells","title":"peaks","text":"can now project metacells derived RNA data (way) McCounts object hold counts per metacell:","code":"data(cell_to_metacell_pbmc_example) mc_counts <- scc_project_on_mc(sc_counts, cell_to_metacell_pbmc_example) mc_counts"},{"path":"/articles/analysis.html","id":"save-mccounts-object","dir":"Articles","previous_headings":"","what":"Save McCounts object","title":"peaks","text":"","code":"mcc_write(mc_counts, \"pbmc_data/mc_counts\", overwrite = TRUE)"},{"path":"/articles/analysis.html","id":"create-misha-tracks-for-each-metacell","dir":"Articles","previous_headings":"","what":"Create ‘misha’ tracks for each metacell","title":"peaks","text":"can now create ‘misha’ track metacell: window size paramter controls smoothing tracks. set NULL, tracks smoothed, except resolution. can now use tracks created identify peaks (‘trans’ analysis), analyse genomic regions ‘cis’.","code":"mct <- mcc_to_tracks(mc_counts, \"pbmc_mc\", overwrite = TRUE, create_marginal_track = TRUE, window_size = NULL, resolution = 20) mct"},{"path":"/articles/analysis.html","id":"identify-peaks","dir":"Articles","previous_headings":"","what":"Identify peaks","title":"peaks","text":"can now use marginal track created order identify peaks: can diagnose peak calling plotting marginal track:","code":"peaks <- call_peaks(\"pbmc_mc.marginal\", quantile_thresh = 0.9, min_umis = 8, target_size = 500, genome = \"hg38\") plot_marginal_coverage(\"pbmc_mc.marginal\", interval = peaks[967, ], window_size = 500, peaks = peaks, expand = 1e4, show_thresh = TRUE, quantile_thresh = 0.9, min_umis = 8, genome = \"hg38\", log_scale = FALSE)"},{"path":"/articles/analysis.html","id":"create-a-mcpeaks-object-from-mccounts-object","dir":"Articles","previous_headings":"","what":"Create a McPeaks object from McCounts object","title":"peaks","text":"indentified peaks, can create McPeaks object McCounts object created.","code":"atac_mc <- mcc_to_mcatac(mc_counts, peaks) atac_mc"},{"path":"/articles/analysis.html","id":"create-a-mctracks-object","dir":"Articles","previous_headings":"","what":"Create a McTracks object","title":"peaks","text":"already created ‘McTracks’ object created tracks counts object, can also create without re-generating tracks:","code":"mct <- mct_create(genome = \"hg38\", track_prefix = \"pbmc_mc\", id = mc_counts@id, description = mc_counts@description)"},{"path":"/articles/analysis.html","id":"add-rna-and-metadata-to-the-mctracks-object","dir":"Articles","previous_headings":"","what":"Add RNA and metadata to the McTracks object","title":"peaks","text":"can now add RNA metadata McTracks object: important metadata field ‘cell_type’ field. addition, field named ‘color’ can added color cell type.","code":"data(rna_mc_mat) mct <- add_mc_rna(mct, rna_mc_mat) data(mcmd) head(mcmd) mct <- add_mc_metadata(mct, mcmd)"},{"path":"/articles/analysis.html","id":"plot-a-genomic-region","dir":"Articles","previous_headings":"","what":"Plot a genomic region","title":"peaks","text":"","code":"mct_plot_region(mct, gintervals(5, 54513252, 55535253), detect_dca = TRUE, gene_annot = TRUE)"},{"path":"/articles/analysis.html","id":"create-a-shiny-app","dir":"Articles","previous_headings":"","what":"Create a shiny app","title":"peaks","text":"","code":"run_app(mct)"},{"path":"/articles/analysis.html","id":"deploy-the-shiny-app","dir":"Articles","previous_headings":"","what":"Deploy the shiny app","title":"peaks","text":"","code":"create_bundle(mct, path = \"/path/to/the/server/pbmc_app\", overwrite = TRUE, restart = TRUE)"},{"path":"/articles/mcATAC.html","id":"download-dataset","dir":"Articles","previous_headings":"","what":"Download dataset","title":"mcATAC","text":"Download following dataset 10x: PBMC healthy donor - granulocytes removed cell sorting (10k) (Filtered feature barcode matrix MEX (DIR)) extract ’s contents directory called pbmc_data:","code":"if (!dir.exists(\"pbmc_data\")){   download_pbmc_example_data() }"},{"path":"/articles/mcATAC.html","id":"import-atac-dataset","dir":"Articles","previous_headings":"","what":"Import ATAC dataset","title":"mcATAC","text":"","code":"atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\", id = \"pbmc\", description = \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\") #> • Importing matrix #> ℹ Imported a matrix of 11909 cells and 144978 features #> • Importing features #> ℹ Removed 107861 ATAC peaks which were all zero #> ℹ 107861 ATAC peaks #> ! removed 32 peaks from the following chromosome(s) which are missing from hg38: KI270727.1, GL000194.1, GL000205.2, GL000195.1, GL000219.1, KI270734.1, KI270721.1, KI270726.1, KI270713.1 #> ✔ successfully imported to an ScPeaks object with 11909 cells and 107829 ATAC peaks atac_sc #> <ScPeaks> object with 11909 cells and 107829 ATAC peaks from hg38. #> id: \"pbmc\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Loaded from: #> /net/mraid14/export/tgdata/users/aviezerl/src/mcATAC/vignettes/pbmc_data/matrix.mtx.gz #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are cells. Can be #>   a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks"},{"path":[]},{"path":"/articles/mcATAC.html","id":"by-coverage-andor-length","dir":"Articles","previous_headings":"Filter peaks","what":"by coverage and/or length","title":"mcATAC","text":"Plot length distribution:  Plot coverage distribution:  Plot distribution maximal number peaks per cell peak:  Filter peaks length coverage: Identify outliers using coverage density:","code":"plot_peak_length_distribution(atac_sc) plot_peak_coverage_distribution(atac_sc) plot_peak_max_cov_distribution(atac_sc) atac_sc <- filter_features(atac_sc, minimal_max_umi = 3, min_peak_length = 200, max_peak_length = 1000) #> • 8544 features were shorter than 200bp #> • 37160 features were longer than 1000bp #> • 676 features had a maximal UMI count less than 3 #> ✔ Removed 46380 peaks out of 107829 (43%). The object is left with 61449 peaks. plot_peak_coverage_density(atac_sc) + geom_hline(yintercept = 250, linetype = \"dashed\", color = \"red\") atac_sc <- filter_features(atac_sc, max_peak_density = 250) #> • 107 features had a peak density of more than 250 UMIs per 100bp #> ! Adding to previous ignore policy (46380 peaks). #> ✔ Removed 107 peaks out of 107829 (0%). The object is left with 61342 peaks (43%)."},{"path":"/articles/mcATAC.html","id":"by-overlap-with-known-blacklist-regions","dir":"Articles","previous_headings":"Filter peaks","what":"by overlap with known blacklist regions","title":"mcATAC","text":"See [https://doi.org/10.1038/s41598-019-45839-z]","code":"blacklist_overlaps <- find_blacklist_overlaps(atac_sc) atac_sc <- atac_ignore_peaks(atac_sc, blacklist_overlaps, reset = FALSE) #> ! Adding to previous ignore policy (46487 peaks). #> ✔ Removed 322 peaks out of 107829 (0%). The object is left with 61020 peaks (43%)."},{"path":"/articles/mcATAC.html","id":"project-rna-metacells","dir":"Articles","previous_headings":"","what":"Project RNA metacells","title":"mcATAC","text":"using metacell1 object:","code":"data(cell_to_metacell_pbmc_example) head(cell_to_metacell_pbmc_example) #> # A tibble: 6 × 2 #>   cell_id            metacell #>   <chr>                 <int> #> 1 AAACAGCCAATCCCTT-1       44 #> 2 AAACAGCCAATGCGCT-1       22 #> 3 AAACAGCCACCAACCG-1        7 #> 4 AAACAGCCAGGATAAC-1       24 #> 5 AAACAGCCAGTTTACG-1       32 #> 6 AAACATGCAAGGTCCT-1       30 atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) #> ℹ 3198 cells (out of 11909) do not have a metacell and have been removed. #> • Setting egc cell size to 67248.6 (the 0.1 quantile of metacell sizes) #> ✔ Created a new McPeaks object with 97 metacells and 61020 ATAC peaks. atac_mc #> <McPeaks> object with 97 metacells and 61020 ATAC peaks from hg38. #> id: \"pbmc\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are metacells. #>   Can be a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks #>   • `@egc`: a numeric matrix which contains normalized metacell accessibility. #>   • `@fp`: a matrix showing for each peak (row) the relative enrichment of umis #>   in log2 scale. atac_mc <- project_atac_on_mc_from_metacell1(atac_sc, \"pbmc_data/scdb\", \"rna\")"},{"path":"/articles/mcATAC.html","id":"import-annotations","dir":"Articles","previous_headings":"","what":"Import annotations","title":"mcATAC","text":"","code":"data(mcmd) atac_mc <- add_mc_metadata(atac_mc, mcmd)"},{"path":"/articles/mcATAC.html","id":"identify-dynamic-peaks","dir":"Articles","previous_headings":"","what":"Identify dynamic peaks","title":"mcATAC","text":"","code":"dyn_peaks <- identify_dynamic_peaks(atac_mc, mean_thresh_q = 0.05) #> • Plotting log10(mean) vs log10(sd/mean) #> ✔ Identified 14576 dynamic peaks (out of 61020) using the 'bmq' method."},{"path":"/articles/mcATAC.html","id":"cluster-a-peak-set","dir":"Articles","previous_headings":"","what":"Cluster a peak set","title":"mcATAC","text":"","code":"peak_clust <- gen_atac_peak_clust(atac_mc, k = 30) #> • Clustering using \"kmeans++\". k = 30 table(peak_clust) #> peak_clust #>    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16  #> 3100 4148 1881 8129 6013 2858 1277 2012  923  646  799 3447  672 2526 1172  930  #>   17   18   19   20   21   22   23   24   25   26   27   28   29   30  #> 1970 2647  967 3264  617 1593  765  982 2045 1425  942 1006 1530  734"},{"path":"/articles/mcATAC.html","id":"plot-peaks-clustering","dir":"Articles","previous_headings":"","what":"Plot peaks clustering","title":"mcATAC","text":"","code":"plot_atac_peak_map(atac_mc, atac_mc@metadata$cell_type, peak_clust) #> ℹ Expected time to plot is roughly 71s"},{"path":"/articles/mcATAC.html","id":"export-dynamic-peaks-to-ucsc-tracks","dir":"Articles","previous_headings":"","what":"Export dynamic peaks to UCSC tracks","title":"mcATAC","text":"UCSC track example","code":"outdir <- tempdir() export_atac_clust_ucsc(atac_mc, track_prefix = 'hum_pbmc_10x', normalization = 'lfcom', output_dir = outdir) #> ℹ Using eps_q=0.05 and eps = 0.731958762886598 for regularization #> ✔ Successfully exported to ucsc. Files generated: #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_B.ucsc #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_DC.ucsc #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_Monocyte.ucsc #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_NK.ucsc #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_T.ucsc #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_T_CD8.ucsc #> • /tmp/RtmpQeHHYj/hum_pbmc_10x_Undetermined.ucsc"},{"path":"/articles/mcATAC.html","id":"add-expression-data","dir":"Articles","previous_headings":"","what":"Add expression data","title":"mcATAC","text":"","code":"data(rna_mc_mat) atac_mc <- add_mc_rna(atac_mc, rna_mc_mat)"},{"path":"/articles/mcATAC.html","id":"plot-accesability-vs-expression","dir":"Articles","previous_headings":"","what":"Plot accesability vs expression","title":"mcATAC","text":"gene promoter:  gene promoter different gene:  gene arbitrary peak:","code":"plot_atac_rna(atac_mc, \"CD4\") #> → The gene \"CD4\" has 9 alternative promoters. plot_atac_rna(atac_mc, \"CD4\", \"GZMK\") #> → The gene \"GZMK\" has 2 alternative promoters. plot_atac_rna(atac_mc, \"CD4\", peak = atac_mc@peaks$peak_name[1])"},{"path":"/articles/mcATAC.html","id":"plot-rna-markers","dir":"Articles","previous_headings":"","what":"Plot RNA markers","title":"mcATAC","text":"","code":"plot_atac_rna_markers(atac_mc) #> → removing 7543 genes with no RNA expression in any metacell. #> → removing 23451 genes with no RNA expression (log2) of above -13 in any metacell. #> → removing 3534 genes with no fold change (log2) of above 2 in any metacell. #> ℹ 5191 genes left for consideration. #> ✔ 100 marker genes selected. #> ℹ Ordering metacells based on CA6 vs LYN #> ℹ Maintaining metacell order within cell types #> ✔ marker matrix of 100 genes x 97 metacells created. #> → Creating ATAC matrix by finding for each marker gene the ATAC peak that is most correlated to it."},{"path":"/articles/mcATAC.html","id":"export-to-an-h5ad-file","dir":"Articles","previous_headings":"","what":"Export to an h5ad file","title":"mcATAC","text":"","code":"export_to_h5ad(atac_mc, \"pbmc_data/atac_mc.h5ad\", compression = \"gzip\") # Load using: atac_mc <- import_from_h5ad(\"pbmc_data/atac_mc.h5ad\")"},{"path":"/articles/mcATAC.html","id":"plot-per-metacell-tracks-around-some-geneinterval","dir":"Articles","previous_headings":"","what":"Plot per-metacell tracks around some gene/interval","title":"mcATAC","text":"","code":"library(metacell) scdb_init(\"scdb\") mc_rna = scdb_mc('rna_w_color_key') mcmd = readr::read_csv('./data/mcmd.csv') color_key = unique(mcmd[,c('st', 'color')]) colnames(color_key) = c('cell_type', 'color') col_annot = data.frame(cell_type = mcmd$st) rownames(col_annot) = mcmd$mc ann_colors = list(cell_type = setNames(color_key$color, color_key$cell_type)) plot_tracks_at_locus(tracks = pbmc_tracks, extend = 5e+4,                 gene = \"ATF3\",                  mc_rna = mc_rna,                  gene_annot = T,                  order_rows = T,                 annotation_row = col_annot,                  annotation_colors = ann_colors)   ## Make per-metacell BAMs, WIGs and tracks bam_path <- \"path/to/possorted_bam.bam\" bam_output_folder <- \"./my_mc_bams/\" c2mc_folder <- \"./c2mc/\" wig_folder <- \"./wig_output\" track_name_prefix = \"My_scATAC_project\" generate_per_metacell_bams(bam_path = bam_path, mcatac = atac_mc, out_dir = bam_output_folder, c2mc_path = c2mc_folder) generate_wigs_from_bams(bam_folder_path = bam_output_folder, track_name_prefix = track_name_prefix, output_path = wig_folder, parallel = TRUE) convert_wigs_to_tracks(wig_folder, track_name_prefix = track_name_prefix, description = NULL, parallel = TRUE, force = FALSE)"},{"path":"/articles/mcATAC.html","id":"make-pseudo-bulk-atac-tracks-from-per-metacell-tracks","dir":"Articles","previous_headings":"","what":"Make pseudo-bulk ATAC tracks from per-metacell tracks","title":"mcATAC","text":"","code":"bam_output_folder <- \"./my_mc_bams/\" track_name_prefix = \"My_scATAC_project\" cell_type = \"Neuron\" mcmd = tgutil::fread(\"./data/mcmd.csv\") ## metacell metadata merge_metacell_bams(bam_path = bam_output_folder, output_filename=\"./pseudo_bulk.bam\", mcs = which(mcmd$cell_type == cell_type), parallel = T) bam_to_wig(bam_path = \"./pseudo_bulk.bam\", output_filename = \"./pseudo_bulk.wig\", track_name_prefix = track_name_prefix) make_misha_track_from_wig(fp = \"./pseudo_bulk.wig\", track_name_prefix = track_name_prefix, description = glue::glue(\"Pseudo-bulk track of ATAC signal from {cell_type} cells\"))"},{"path":"/articles/mcATAC.html","id":"get-available-motif-pssm-datasets-and-extract-motif-energies","dir":"Articles","previous_headings":"","what":"Get available motif PSSM datasets and extract motif energies","title":"mcATAC","text":"","code":"misha.ext::gset_genome(\"hg38\") available_datasets <- get_available_pssms(return_datasets_only = TRUE) available_datasets sample_peaks <- dplyr::sample_n(atac_mc@peaks, 1e+4) motif_mat = generate_motif_pssm_matrix(atac = sample_peaks, motif_regex = c(\"Bcl\", \"Atf\"), datasets_of_interest = \"jaspar\") head(motif_mat)"},{"path":"/articles/mcATAC.html","id":"extract-motif-energies-from-random-genomic-background","dir":"Articles","previous_headings":"","what":"Extract motif energies from random genomic background","title":"mcATAC","text":"","code":"misha.ext::gset_genome(\"hg38\") rg = gen_random_genome_peak_motif_matrix(num_peaks = 1e+4,                                           bp_from_chrom_edge_to_avoid = 1e+6,                                            motif_regex = c(\"Bcl\", \"Atf\"),                                           datasets_of_interest = \"jaspar\") head(rg)"},{"path":"/articles/mcATAC.html","id":"compare-kolmogorov-smirnov-statistics-on-distribution-of-motif-energies-between-peaks-of-interest-and-genomic-background","dir":"Articles","previous_headings":"","what":"Compare Kolmogorov-Smirnov statistics on distribution of motif energies between peaks of interest and genomic background","title":"mcATAC","text":"","code":"misha.ext::gset_genome(\"hg38\") ## all peaks ks_all <- calculate_d_stats(motif_mat, rg, parallel = TRUE, alternative = \"less\")    ## by peak cluster sample_mc <- subset_peaks(atac_mc = atac_mc, sample_peaks)   sample_peak_clustering <- gen_atac_peak_clust(atac_mc = sample_mc, k = 10)   ks_mat <- calculate_d_stats(motif_mat, rg, parallel = TRUE, fg_clustering = sample_peak_clustering, alternative = \"less\")   head(ks_mat)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Yonatan Shapira. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Shapira Y (2022). mcATAC: Metacell analysis scATAC data. R package version 0.0.0.9000, https://github.com/tanaylab/mcATAC.","code":"@Manual{,   title = {mcATAC: Metacell analysis for scATAC data},   author = {Aviezer Lifshitz and Yonatan Shapira},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/tanaylab/mcATAC}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metacell analysis for scATAC data","text":"Install development version mcATAC:","code":"remotes::install_github(\"tanaylab/mcATAC\")"},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"Metacell analysis for scATAC data","text":"can make sure dependencies installed running: pacakge assumes standard unix tools installed available PATH: grep, awk, zcat, sed, sort, head, tail, wc, uniq. addition, samtools also installed. tabix available functions operate faster. Note samtools tabix bundled cellranger package, can make available PATH running:","code":"mcATAC::check_dependencies() Sys.setenv(PATH = paste0(Sys.getenv(\"PATH\"), \":\", file.path(cell_ranger_path, \"external/anaconda/bin\")))"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Metacell analysis for scATAC data","text":"","code":"if (!dir.exists(\"pbmc_data\")){   download_pbmc_example_data() }"},{"path":"/index.html","id":"import-atac-dataset","dir":"","previous_headings":"Example","what":"Import ATAC dataset","title":"Metacell analysis for scATAC data","text":"","code":"atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\", id = \"PBMC\", description = \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\") #> • Importing matrix #> ℹ Imported a matrix of 11909 cells and 144978 features #> • Importing features #> ℹ Removed 107861 ATAC peaks which were all zero #> ℹ 107861 ATAC peaks #> ! removed 32 peaks from the following chromosome(s) which are missing from hg38: 'KI270727.1, GL000194.1, GL000205.2, GL000195.1, GL000219.1, KI270734.1, KI270721.1, KI270726.1, KI270713.1' #> ✔ successfully imported to an ScPeaks object with 11909 cells and 107829 ATAC peaks atac_sc #> <ScPeaks> object with 11909 cells and 107829 ATAC peaks from hg38. #> id: \"PBMC\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Loaded from: #> '/net/mraid14/export/tgdata/users/yonshap/proj/matching/data/filtered_feature_bc_matrix/matrix.mtx' #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are cells. Can be #>   a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks"},{"path":"/index.html","id":"filter-peaks-by-coverage-andor-length","dir":"","previous_headings":"Example","what":"Filter peaks by coverage and/or length","title":"Metacell analysis for scATAC data","text":"Plot length distribution:  Plot coverage distribution:  Filter: Identify outliers using coverage density:","code":"plot_peak_length_distribution(atac_sc) plot_peak_coverage_distribution(atac_sc) atac_sc <- filter_features(atac_sc = atac_sc, minimal_max_umi = 3, min_peak_length = 200, max_peak_length = 1000) #> • 8544 features were shorter than 200bp #> • 37160 features were longer than 1000bp #> • 676 features had a maximal UMI count less than 3 #> ✔ Removed 46380 peaks out of 107829 (43%). The object is left with 61449 peaks. plot_peak_coverage_density(atac_sc) + geom_hline(yintercept = 250, linetype = \"dashed\", color = \"red\") atac_sc <- filter_features(atac_sc, max_peak_density = 250) #> • 107 features had a peak density of more than 250 UMIs per 100bp #> ! Adding to previous ignore policy (46380 peaks). #> ✔ Removed 107 peaks out of 107829 (0%). The object is left with 61342 peaks (43%)."},{"path":"/index.html","id":"project-rna-metacells","dir":"","previous_headings":"Example","what":"Project RNA metacells","title":"Metacell analysis for scATAC data","text":"","code":"data(cell_to_metacell_pbmc_example) head(cell_to_metacell_pbmc_example) #> # A tibble: 6 × 2 #>   cell_id            metacell #>   <chr>                 <int> #> 1 AAACAGCCAATCCCTT-1       44 #> 2 AAACAGCCAATGCGCT-1       22 #> 3 AAACAGCCACCAACCG-1        7 #> 4 AAACAGCCAGGATAAC-1       24 #> 5 AAACAGCCAGTTTACG-1       32 #> 6 AAACATGCAAGGTCCT-1       30 atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) #> ℹ 3198 cells (out of 11909) do not have a metacell and have been removed. #> • Setting egc cell size to 67733 (the 0.1 quantile of metacell sizes) #> ✔ Created a new McPeaks object with 97 metacells and 61342 ATAC peaks. atac_mc #> <McPeaks> object with 97 metacells and 61342 ATAC peaks from hg38. #> id: \"PBMC\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are metacells. #>   Can be a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks #>   • `@egc`: a numeric matrix which contains normalized metacell accessibility. #>   • `@fp`: a matrix showing for each peak (row) the relative enrichment of umis #>   in log2 scale. atac_mc #> <McPeaks> object with 97 metacells and 61342 ATAC peaks from hg38. #> id: \"PBMC\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are metacells. #>   Can be a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks #>   • `@egc`: a numeric matrix which contains normalized metacell accessibility. #>   • `@fp`: a matrix showing for each peak (row) the relative enrichment of umis #>   in log2 scale."},{"path":"/index.html","id":"add-metadata","dir":"","previous_headings":"Example","what":"Add metadata","title":"Metacell analysis for scATAC data","text":"","code":"data(mcmd) atac_mc <- add_mc_metadata(atac_mc, mcmd)"},{"path":"/index.html","id":"import-rna-expression-data","dir":"","previous_headings":"","what":"Import RNA expression data","title":"Metacell analysis for scATAC data","text":"See vignette","code":"data(rna_mc_mat) atac_mc <- add_mc_rna(atac_mc, rna_mc_mat) plot_atac_rna(atac_mc, \"GZMK\") #> → The gene \"GZMK\" has 2 alternative promoters. plot_atac_rna_markers(atac_mc) #> → removing 7543 genes with no RNA expression in any metacell. #> → removing 23451 genes with no RNA expression (log2) of above -13 in any metacell. #> → removing 3534 genes with no fold change (log2) of above 2 in any metacell. #> ℹ 5191 genes left for consideration. #> ✔ 100 marker genes selected. #> ℹ Ordering metacells based on 'CA6' vs 'LYN' #> ℹ Maintaining metacell order within cell types #> ✔ marker matrix of 100 genes x 97 metacells created. #> → Creating ATAC matrix by finding for each marker gene the ATAC peak that is most correlated to it."},{"path":"/reference/ATAC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ATAC objects — ATAC-class","title":"ATAC objects — ATAC-class","text":"ATAC shallow object holding ATAC data cells/metacells. Minimally needs id, description genome id.  ATACPeaks classes hold data format peaks used mostly \"trans\" analysis.  ATACCounts classes hold raw data format sparse matrices - can transformed misha tracks.  ATACTracks classes hold pointers tracks hold data higher resolution (e.g. 20 bp), can used \"cis\" analysis.","code":""},{"path":"/reference/ATAC-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ATAC objects — ATAC-class","text":"id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations McATAC, 'cell_id' per-cell annotations ScATAC. constructor can also include name delimited file contains annotations. path original path object loaded (optional) rna_egc normalized gene expression per gene per metacell (optional). Can created using add_mc_rna order order cells/metacells data (optional).","code":""},{"path":"/reference/ATACPeaks-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ATACPeaks objects — ATACPeaks-class","title":"ATACPeaks objects — ATACPeaks-class","text":"ATACPeaks shallow object holding ATAC data cells/metacells. Minimally include count matrix peaks cells/metacells, PeakIntervals hold coordinates peaks id genome assembly peaks. ScPeaks McPeaks extend ATACPeaks object adding metadata additional slots.","code":""},{"path":"/reference/ATACPeaks-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ATACPeaks objects — ATACPeaks-class","text":"id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" mat numeric matrix rows peaks columns cells/metacells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations McPeaks, 'cell_id' per-cell annotations ScPeaks. constructor can also include name delimited file contains annotations. path original path object loaded (optional) promoters peaks promoters (optional). peaks promoters peak name gene name instead coordinates. tad_based peaks named based TADs.","code":""},{"path":"/reference/ATACPeaks.html","id":null,"dir":"Reference","previous_headings":"","what":"McPeaks — McPeaks-class","title":"McPeaks — McPeaks-class","text":"ATACPeaks object data metacells ATACPeaks object data cells","code":""},{"path":"/reference/ATACPeaks.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"McPeaks — McPeaks-class","text":"egc normalized metacell accessibility: fraction accessibility per metacell scaled mc_size_eps_q quantile metacell size. Accessibility normalized peak length. fp matrix showing peak (row) relative enrichment umis log2 scale, .e. \\(log2((1 + egc) / median(1 + egc))\\) mc_size_eps_q quantile MC size (UMIs) scale number UMIs per metacell. See project_atac_on_mc cell_to_metacell data frame column called 'metacell' column called 'cell_id' metacells vector metacells IDs.","code":""},{"path":"/reference/ATACTracks-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ATACTracks objects — ATACTracks-class","title":"ATACTracks objects — ATACTracks-class","text":"ATACTracks shallow object holding ATAC data cells/metacells. Minimally include vector track names hold names tracks ATAC data. McTracks extend ATACTracks object adding metadata additional slots.","code":""},{"path":"/reference/ATACTracks-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ATACTracks objects — ATACTracks-class","text":"tracks vector track names ATAC data. total_cov vector total coverage tracks. marginal_track name track marginal coverage. id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations. constructor can also include name delimited file contains annotations. resolution resolution tracks. window_size size window used smooth counts track. smoothing done - equal resolution/2","code":""},{"path":"/reference/ATACTracks.html","id":null,"dir":"Reference","previous_headings":"","what":"McTracks — McTracks-class","title":"McTracks — McTracks-class","text":"McTracks","code":""},{"path":"/reference/PeakIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a PeakIntervals object from misha intervals — PeakIntervals","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"PeakIntervals object simply misha intervals set can , optionally, field called 'peak_name' holds name peaks. Note informative rownames make explicit column due fact package might change occasionally (e.g. creating h5ad files)","code":""},{"path":"/reference/PeakIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"","code":"PeakIntervals(intervals, genome = NULL)"},{"path":"/reference/PeakIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"intervals misha intervals (data frame following columns: 'chrom', 'start' 'end') genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\".","code":""},{"path":"/reference/PeakIntervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"PeakIntervals object","code":""},{"path":"/reference/ScCounts-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ScCounts object — ScCounts-class","title":"ScCounts object — ScCounts-class","text":"ScCounts data structure contains counts reads set cells set genomic bins.","code":""},{"path":"/reference/ScCounts-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ScCounts object — ScCounts-class","text":"id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" data named list sparse matrices chromosome. sparse matrix position ,j contains number reads map cell j genomic coordinate (1 based format). path original path object loaded (optional) genomic_bins intervals set genomic bins. columns named \"chrom\", \"start\", \"end\" \"name\" chromosome, start end positions name bin. names data matrices \"name\" field. Note even though data stored 1-based format, genomic bins 0-based format (misha format), hence filenames 0-based format.","code":""},{"path":"/reference/ScCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"McCounts object — McCounts-class","title":"McCounts object — McCounts-class","text":"McCounts object collection sparse matrices rows genomic coordinates columns metacells. derived ScCounts using scc_project_on_mc. metacell names store cell_names slot, additional slot cell_to_metacell contains mapping single cell names metacell names.","code":""},{"path":"/reference/ScCounts.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"McCounts object — McCounts-class","text":"cell_to_metacell","code":""},{"path":"/reference/add_mc_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add per-metacell metadata to an McPeaks object — add_mc_metadata","title":"Add per-metacell metadata to an McPeaks object — add_mc_metadata","text":"Add per-metacell metadata McPeaks object","code":""},{"path":"/reference/add_mc_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add per-metacell metadata to an McPeaks object — add_mc_metadata","text":"","code":"add_mc_metadata(atac_mc, metadata)"},{"path":"/reference/add_mc_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add per-metacell metadata to an McPeaks object — add_mc_metadata","text":"atac_mc McPeaks object metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations.","code":""},{"path":"/reference/add_mc_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add per-metacell metadata to an McPeaks object — add_mc_metadata","text":"","code":"if (FALSE) { data(mcmd) atac_mc <- add_metadata(atac_mc, mcmd) }"},{"path":"/reference/add_mc_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Add per-metacell gene expression data to an McPeaks object — add_mc_rna","title":"Add per-metacell gene expression data to an McPeaks object — add_mc_rna","text":"Add per-metacell gene expression data McPeaks object","code":""},{"path":"/reference/add_mc_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add per-metacell gene expression data to an McPeaks object — add_mc_rna","text":"","code":"add_mc_rna(atac_mc, mc_rna)"},{"path":"/reference/add_mc_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add per-metacell gene expression data to an McPeaks object — add_mc_rna","text":"atac_mc McPeaks/McTracks object mc_rna metacell1 'mc' object metacells metacell UMI matrix (matrix row gene column metacell)","code":""},{"path":"/reference/add_mc_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add per-metacell gene expression data to an McPeaks object — add_mc_rna","text":"","code":"if (FALSE) { data(mcmd) metacell::scdb_init(\"pbmc_data/scdb\", force_reinit = TRUE) mc_rna <- metacell::scdb_mc(\"rna\") atac_mc <- add_mc_rna(atac_mc, mc_rna) }"},{"path":"/reference/annotate_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate an intervals set — annotate_intervals","title":"Annotate an intervals set — annotate_intervals","text":"ATAC peaks classified either 'promoter', 'intronic', 'exonic', 'ig_proximal' (intergenic-proximal), 'ig_distal' (intergenic-distal) 'desert'.  Promoter peaks less min_proximal away TSS.  Intronic peaks within gene bodies, exon.  Exonic peaks overlap exons.  Intergenic-proximal peaks less max_proximal away TSS, within gene body.  Intergenic-distal peaks min_distal away TSS, less max-distal TSS, within gene body.  Desert peaks least max_distal known TSS (defined tss interval set).","code":""},{"path":"/reference/annotate_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate an intervals set — annotate_intervals","text":"","code":"annotate_intervals(   intervals,   genome,   min_proximal = 1000,   max_proximal = 20000,   min_distal = max_proximal,   max_distal = 1000000,   exonic_peak_dist = 0,   tss = \"intervs.global.tss\",   exons = \"intervs.global.exon\" )"},{"path":"/reference/annotate_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate an intervals set — annotate_intervals","text":"intervals intervals set annotate genome genome/genomic database use (e.g. 'mm10', 'hg19') min_proximal minimum distance TSS, peak considered promoter peak, beyond () proximal enhancer. max_proximal minimum distance TSS, peak considered proximal enhancer peak, beyond () . min_distal minimum distance TSS, peak considered distal enhancer. Usually equal max_proximal, unless good reason max_distal maximum distance TSS, peak considered distal enhancer, 'desert' peak. exonic_peak_dist parameter allows proximity (without overlap) peaks exons still classifies exonic peaks, active transcription usually confers accessibility vicinity exons, might confound possible assignment regulatory activity exon. tss TSS interval set name TSS interval set use. exons exons interval set name exons interval set use.","code":""},{"path":"/reference/annotate_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate an intervals set — annotate_intervals","text":"intervals - input intervals set added fields .code peak_type, .code closest_tss, .code closest_exon_gene .code gene_body_gene.","code":""},{"path":"/reference/annotate_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate an intervals set — annotate_intervals","text":"","code":"if (FALSE) { my_intervals <- annotate_intervals(my_intervals, \"mm10\", min_proximal = 1e+03, max_proximal = 2e+04, max_distal = 1e+06, exonic_peak_dist = 5e+2) table(my_intervals$peak_type) my_intervals[which(toupper(my_intervals$closest_tss) == \"PCNA\"), ] }"},{"path":"/reference/annotate_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate ATAC peaks — annotate_peaks","title":"Annotate ATAC peaks — annotate_peaks","text":"Annotate ATAC peaks","code":""},{"path":"/reference/annotate_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate ATAC peaks — annotate_peaks","text":"","code":"annotate_peaks(atac)"},{"path":"/reference/annotate_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate ATAC peaks — annotate_peaks","text":"atac McPeaks ScPeaks object","code":""},{"path":"/reference/annotate_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate ATAC peaks — annotate_peaks","text":"original atac object, peaks annotated using annotate_intervals","code":""},{"path":"/reference/annotate_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate ATAC peaks — annotate_peaks","text":"","code":"if (FALSE) { pbmc_atac_mc <- annotate_peaks(pbmc_atac_mc) }"},{"path":"/reference/atac_ignore_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cells — atac_ignore_cells","title":"Remove cells — atac_ignore_cells","text":"function removes given list cells .code mat slot.","code":""},{"path":"/reference/atac_ignore_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cells — atac_ignore_cells","text":"","code":"atac_ignore_cells(atac, ig_cells)"},{"path":"/reference/atac_ignore_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cells — atac_ignore_cells","text":"atac ScPeaks object ig_cells vector cell names (10X barcodes) removes","code":""},{"path":"/reference/atac_ignore_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove cells — atac_ignore_cells","text":"scATAC object given cells removed.","code":""},{"path":"/reference/atac_ignore_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove cells — atac_ignore_cells","text":"","code":"if (FALSE) { cs <- Matrix::colSums(atac_sc@mat) big_cells <- names(cs)[which(cs >= quantile(cs, 0.98))] atac_sc_filtered <- atac_ignore_cells(atac_sc, big_cells) }"},{"path":"/reference/atac_ignore_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"Given list peaks ignore, remove given peaks .code ignore_peaks .code ignore_pmat slots. Note matrix peaks reordered.","code":""},{"path":"/reference/atac_ignore_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"","code":"atac_ignore_peaks(atac, ig_peaks, reset = FALSE)"},{"path":"/reference/atac_ignore_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"atac ScPeaks McPeaks object ig_peaks PeakIntervals object, vector peak names ignore reset rest current ignore policy exists. set TRUE, current ignore policy removed, otherwise new ignore policy appended current one.","code":""},{"path":"/reference/atac_ignore_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"ScPeaks McPeaks object new ignore policy.","code":""},{"path":"/reference/atac_ignore_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"","code":"if (FALSE) { max_peak_length <= 1000 peak_stats <- get_peak_coverage_stats(atac_sc, scale = 100) too_long_peaks <- peak_stats$peak_name[peak_stats$len > max_peak_length] atac_sc_filtered <- atac_ignore_peaks(atac_sc, too_long_peaks) }"},{"path":"/reference/bam_file_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get chromosomes from a bam file — bam_file_chromosomes","title":"Get chromosomes from a bam file — bam_file_chromosomes","text":"Get chromosomes bam file","code":""},{"path":"/reference/bam_file_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get chromosomes from a bam file — bam_file_chromosomes","text":"","code":"bam_file_chromosomes(bam_file, samtools_bin = \"samtools\")"},{"path":"/reference/bam_file_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get chromosomes from a bam file — bam_file_chromosomes","text":"bam_file name bam file samtools_bin path samtools executable","code":""},{"path":"/reference/bam_file_chromosomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get chromosomes from a bam file — bam_file_chromosomes","text":"vector strings chromosome names","code":""},{"path":"/reference/bam_file_chromosomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get chromosomes from a bam file — bam_file_chromosomes","text":"","code":"if (FALSE) { bam_file_chromosomes(\"pbmc_data/possorted_bam.bam\") }"},{"path":"/reference/calc_prom_rna_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"Calculate cross-correlation promoter accessibility RNA expression","code":""},{"path":"/reference/calc_prom_rna_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"","code":"calc_prom_rna_cor(   atac_mc,   genes = NULL,   rm_zeros = TRUE,   match_genes = FALSE,   spearman = FALSE,   pairwise.complete.obs = TRUE )"},{"path":"/reference/calc_prom_rna_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"atac_mc McPeaks object promoters (using gen_promoter_features) RNA expression (using add_mc_rna) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE match_genes calculate correlation genes promoters accesability RNA expression. Matching done based name. Default: FALSE spearman 'TRUE' Spearman correlation computed, otherwise Pearson pairwise.complete.obs see ","code":""},{"path":"/reference/calc_prom_rna_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"correlation matrix rows promoters columns genes","code":""},{"path":"/reference/calculate_d_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"function one-sided KS test foreground set peaks (pssm_fg) background set pssm_bg. option alternative == \"less\", checks null hypothesis foreground distribution less background distribution (applicable looking motif enrichment; anti-enrichment, alternative == 'greater', see ks.test documentation details)","code":""},{"path":"/reference/calculate_d_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"","code":"calculate_d_stats(   pssm_fg,   pssm_bg,   fg_clustering = NULL,   parallel = getOption(\"mcatac.parallel\"),   alternative = \"less\",   nc = getOption(\"mcatac.parallel.nc\") )"},{"path":"/reference/calculate_d_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"pssm_fg motif energies calculated certain set motifs PeakIntervals/ScPeaks/McPeaks object pssm_bg background set intervals (e.g. random genome, ENCODE enhancers etc.) include /subset motifs (columns) pssm_fg fg_clustering vector cluster assignments foreground peaks (e.g. gen_atac_peak_clust) parallel (optional) - whether use parallelize computations alternative indicates alternative hypothesis must     one \"two.sided\" (default), \"less\",     \"greater\".  can specify just initial letter     value, argument name must given full.     See ‘Details’ meanings possible values. nc (optional) - number cores parallel computations","code":""},{"path":"/reference/calculate_d_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"fg_clustering == TRUE, returns matrix clusters x motifs (rows x columns) D-statistic combination","code":""},{"path":"/reference/calculate_d_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"","code":"if (FALSE) { pssm_fg <- generate_motif_pssm_matrix(my_atac_mc, datasets_of_interest = \"jaspar\") pssm_bg <- gen_random_genome_peak_motif_matrix(num_peaks = nrow(my_atac_mc@peaks), datasets_of_interest = \"jaspar\") d_vs_rg <- calculate_d_stats(pssm_fg, pssm_bg) peak_clust <- gen_atac_peak_clust(my_atac_mc, k = 12) d_vs_rg_cl <- calculate_d_stats(pssm_fg, pssm_bg, fg_clustering = peak_clust) }"},{"path":"/reference/call_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Call peaks from ATAC marginals track — call_peaks","title":"Call peaks from ATAC marginals track — call_peaks","text":"Peaks called screening genomic regions number UMIs quantile marginal ATAC counts, min_umis. Peaks longer max_peak_size splitted equally smaller peaks.","code":""},{"path":"/reference/call_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call peaks from ATAC marginals track — call_peaks","text":"","code":"call_peaks(   marginal_track,   quantile_thresh = 0.9,   min_umis = 8,   split_peaks = TRUE,   target_size = 500,   max_peak_size = 1000,   very_long = 5000,   min_peak_size = 200,   window_size = target_size,   genome = NULL,   seed = 60427 )"},{"path":"/reference/call_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call peaks from ATAC marginals track — call_peaks","text":"marginal_track Name 'misha' track call peaks . can create using import_atac_marginal. quantile_thresh Quantile marginal track peaks called. min_umis Minimal number UMIs call peak. split_peaks Split peaks longer max_peak_size smaller peaks using split_long_peaks. target_size target size peaks. max_peak_size Peaks size splitted smaller peaks. very_long Peaks size splitted arbitrarily smaller peaks fitting best offset. min_peak_size Peaks size discarded. window_size Smoothing window size (side iterator) use marginal track. Default: traget_size. genome Genome name, 'hg19' 'mm10'. NULL - current misha database used. seed random seed reproducibility (misha::gquantiles sometimes samples data)","code":""},{"path":"/reference/call_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call peaks from ATAC marginals track — call_peaks","text":"intervals set called peaks","code":""},{"path":"/reference/call_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call peaks from ATAC marginals track — call_peaks","text":"","code":"if (FALSE) { peaks <- call_peaks(\"pbmc_atac.marginal\", quantile_thresh = 0.9, min_umis = 8, max_peak_size = 600, genome = \"hg38\") }"},{"path":"/reference/check_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if mcATAC has the required dependencies — check_dependencies","title":"Test if mcATAC has the required dependencies — check_dependencies","text":"Tests mcATAC following dependencies: \"grep\", \"awk\", \"zcat\", \"sed\", \"sort\", \"head\", \"tail\", \"wc\" \"uniq\". samtools tabix installed, warning issued.","code":""},{"path":"/reference/check_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if mcATAC has the required dependencies — check_dependencies","text":"","code":"check_dependencies()"},{"path":"/reference/check_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if mcATAC has the required dependencies — check_dependencies","text":"vector dependencies available (invisibly)","code":""},{"path":"/reference/check_dependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if mcATAC has the required dependencies — check_dependencies","text":"","code":"check_dependencies() #> ✔ All dependencies are available."},{"path":"/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear the ATAC track matrix cache — clear_cache","title":"Clear the ATAC track matrix cache — clear_cache","text":"Clear ATAC track matrix cache","code":""},{"path":"/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear the ATAC track matrix cache — clear_cache","text":"","code":"clear_cache()"},{"path":"/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear the ATAC track matrix cache — clear_cache","text":"None.","code":""},{"path":"/reference/clear_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear the ATAC track matrix cache — clear_cache","text":"","code":"clear_cache()"},{"path":"/reference/create_bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bundle for the shiny app in order to run it with shiny server — create_bundle","title":"Create a bundle for the shiny app in order to run it with shiny server — create_bundle","text":"Generate 'deployment ready' bundle shiny app","code":""},{"path":"/reference/create_bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bundle for the shiny app in order to run it with shiny server — create_bundle","text":"","code":"create_bundle(   mct,   path,   hc = NULL,   overwrite = FALSE,   self_contained = FALSE,   branch = \"master\",   restart = overwrite,   permissions = NULL,   ... )"},{"path":"/reference/create_bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bundle for the shiny app in order to run it with shiny server — create_bundle","text":"mct MCTracks object path Path bundle directory hc hclust object clustering metacells (optional, see mct_plot_region) overwrite overwrite bundle already exists self_contained include source code mcATAC bundle use run app. Use order ensure package always run way, regardless mcATAC changes. option FALSE, installed version mcATAC loaded, can occasionally updated mcATAC apps running server. default, code latest mcATAC release used, see branch options. branch name mcATAC branch include self_contained=TRUE. default, master branch used. restart add file named 'restart.txt' bundle. force shiny-server restart app updated. permissions change file permissions bundle creation, e.g. \"777\". NULL - permissions changed. ... Arguments passed gert::git_clone password string callback function get passwords authentication password protected ssh keys. Defaults askpass checks getOption('askpass'). ssh_key path object containing ssh private key. default look keys ssh-agent credentials::ssh_key_info. verbose display progress info downloading mirror use --mirror flag url remote url. Typically starts https://github.com/ public repositories, https://yourname@github.com/ git@github.com/ private repos. prompted password pat needed. bare use --bare flag","code":""},{"path":"/reference/create_bundle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a bundle for the shiny app in order to run it with shiny server — create_bundle","text":"Create minimal shiny app path directory contain: app.R file. mct.rds mct object. bundle can deployed shiny-server, shinyapps.io environment supports serving shiny apps. Note: deploying services - make sure mcATAC package installed 'Suggests' dependencies.","code":""},{"path":"/reference/create_bundle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bundle for the shiny app in order to run it with shiny server — create_bundle","text":"","code":"if (FALSE) { create_bundle(mct, \"/path/to/the/bundle/directory\") }"},{"path":"/reference/download_pbmc_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example data from 10x — download_pbmc_example_data","title":"Download example data from 10x — download_pbmc_example_data","text":"Download following dataset 10x site: PBMC healthy donor - granulocytes removed cell sorting (10k) fragments=TRUE fragment file index downloaded well. Link: https://support.10xgenomics.com/single-cell-multiome-atac-gex/datasets/1.0.0/pbmc_granulocyte_sorted_10k  Processed data: Filtered feature barcode matrix MEX (DIR)  Fragments: ATAC Per fragment information file (TSV.GZ)","code":""},{"path":"/reference/download_pbmc_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example data from 10x — download_pbmc_example_data","text":"","code":"download_pbmc_example_data(dir = \"pbmc_data\", fragments = FALSE)"},{"path":"/reference/download_pbmc_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download example data from 10x — download_pbmc_example_data","text":"dir directory download data fragments download fragments file (index)","code":""},{"path":"/reference/download_pbmc_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download example data from 10x — download_pbmc_example_data","text":"","code":"if (FALSE) { download_pbmc_example_data() download_pbmc_example_data(fragments = TRUE) }"},{"path":"/reference/export_atac_clust_misha.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"generate track metacell cluster, form track_prefix.name, names given clust_names","code":""},{"path":"/reference/export_atac_clust_misha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"","code":"export_atac_clust_misha(   atac_mc,   track_prefix,   description = NULL,   clust_vec = NULL,   normalization = \"none\",   parallel = getOption(\"mcatac.parallel\"),   num_cores = getOption(\"mcatac.parallel\") )"},{"path":"/reference/export_atac_clust_misha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"atac_mc McPeaks object track_prefix prefix generated misha tracks. clusters form: \"track_prefix.clust\" description (optional) description tracks (can glue-formatted expression) clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) parallel (optional) run function parallel processing num_cores (required parallel == TRUE) number cores use parallel processing","code":""},{"path":"/reference/export_atac_clust_misha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"track_names names generated misha tracks","code":""},{"path":"/reference/export_atac_clust_ucsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"Generate ucsc genome browser file metacell cluster","code":""},{"path":"/reference/export_atac_clust_ucsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"","code":"export_atac_clust_ucsc(   atac_mc,   track_prefix,   output_dir = getwd(),   clust_vec = NULL,   normalization = \"none\" )"},{"path":"/reference/export_atac_clust_ucsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"atac_mc McPeaks object track_prefix prefix generated misha tracks. output_dir (optional) name directory write files clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) normalization (optional) normalization method, either 'none', 'lfcom' (log2 fold-change median), 'zs' (Z-scores)","code":""},{"path":"/reference/export_to_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a McPeaks or ScPeaks object to an h5ad file — export_to_h5ad","title":"Write a McPeaks or ScPeaks object to an h5ad file — export_to_h5ad","text":"Write McPeaks ScPeaks object h5ad file","code":""},{"path":"/reference/export_to_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a McPeaks or ScPeaks object to an h5ad file — export_to_h5ad","text":"","code":"export_to_h5ad(object, out_file, ...)"},{"path":"/reference/export_to_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a McPeaks or ScPeaks object to an h5ad file — export_to_h5ad","text":"object McPeaks ScPeaks object out_file name output file ... Arguments passed anndata::write_h5ad anndata AnnData() object filename Filename data file. Defaults backing file. compression See h5py filter pipeline. Options \"gzip\", \"lzf\" NULL. compression_opts See h5py filter pipeline. as_dense Sparse AnnData object write dense. Currently supports \"X\" \"raw/X\".","code":""},{"path":"/reference/export_to_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a McPeaks or ScPeaks object to an h5ad file — export_to_h5ad","text":"None.","code":""},{"path":"/reference/export_to_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a McPeaks or ScPeaks object to an h5ad file — export_to_h5ad","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") export_to_h5ad(atac_sc, \"pbmc_data/atac_sc.h5ad\") }"},{"path":"/reference/filter_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter features by summary statistics — filter_features","title":"Filter features by summary statistics — filter_features","text":"Remove ATAC peaks low coverage, long etc.","code":""},{"path":"/reference/filter_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter features by summary statistics — filter_features","text":"","code":"filter_features(   atac_sc,   minimal_max_umi = NULL,   min_peak_length = NULL,   max_peak_length = NULL,   max_peak_density = NULL )"},{"path":"/reference/filter_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter features by summary statistics — filter_features","text":"atac_sc ScPeaks object analyze minimal_max_umi (optional) threshold minimum maximal coverage - .e. remove peaks cell least abs_cov_thresh UMIs min_peak_length (optional) remove peaks less min_cov_thresh base-pairs long max_peak_length (optional) remove peaks min_cov_thresh base-pairs long max_peak_density (optional) remove peaks max_peak_density UMIs per 100bp","code":""},{"path":"/reference/filter_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter features by summary statistics — filter_features","text":"atac_sc - filtered ScPeaks object","code":""},{"path":"/reference/filter_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter features by summary statistics — filter_features","text":"","code":"if (FALSE) { ## quantiles of peak lengths before filtering quantile(my_atac_sc@peaks$end - my_atac_sc@peaks$start, (0:10) / 10) my_atac_sc <- filter_features(atac_sc = my_atac_sc, minimal_max_umi = 3, min_peak_length = 200, max_peak_length = 1000)  ## quantiles of peak lengths after filtering quantile(my_atac_sc@peaks$end - my_atac_sc@peaks$start, (0:10) / 10) }"},{"path":"/reference/find_blacklist_overlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"Identify peaks data overlap (adjacent ?) regions blacklisted ENCODE universally high DNAse HS ChIP signal (basically mapping artifacts) See https://doi.org/10.1038/s41598-019-45839-z details","code":""},{"path":"/reference/find_blacklist_overlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"","code":"find_blacklist_overlaps(   atac = NULL,   peaks = NULL,   genome = NULL,   max_dist_to_blacklist_region = 0,   blacklist_name = \"ENCODE.blacklist\" )"},{"path":"/reference/find_blacklist_overlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"atac (optional) ScPeaks McPeaks object peaks (optional) intervals set check genome (optional, required checking peaks directly) genome peaks max_dist_to_blacklist_region (optional) distance nearest blacklist region still qualifies blacklisted blacklist_name name blacklist intervals use (default: \"ENCODE.blacklist\")","code":""},{"path":"/reference/find_blacklist_overlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"blacklist_overlaps - PeakIntervals object peaks identified overlapping blacklisted regions","code":""},{"path":"/reference/find_blacklist_overlaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"","code":"if (FALSE) { blacklist_overlaps <- find_blacklist_overlaps(atac = my_atac_mc, max_dist_to_blacklist_region = 100) blacklist_overlaps <- find_blacklist_overlaps(peaks = my_peak_set, genome = \"mm10\") }"},{"path":"/reference/gen_atac_mc_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"Cluster metacells based atac profiles using k-means algorithm","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"","code":"gen_atac_mc_clust(   atac_mc,   use_prior_annot = TRUE,   k = NULL,   annot = \"cell_type\",   ... )"},{"path":"/reference/gen_atac_mc_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"atac_mc McPeaks object use_prior_annot (optional) TRUE - use metacell annotation generate metacell clusters. Clusters generated based categorical field annot metadata slot McPeaks object. k (optional, use_prior_annot == F) number clusters generate annot name field use use_prior_annot == T. ... Arguments passed tglkmeans::TGL_kmeans df data frame. row single observation column dimension. first column can contain id observation (id_column TRUE). metric distance metric kmeans++ seeding. can 'euclid', 'pearson' 'spearman' max_iter maximal number iterations min_delta minimal change assignments (fraction observations) continue iterating verbose display algorithm messages keep_log keep algorithm messages 'log' field id_column df's first column contains observation id reorder_func function reorder clusters. operates center orders result. e.g. reorder_func = mean calculate mean center reorder clusters accordingly. reorder_func = hclust centers ordered hclust euclidean distance correlation matrix, .e. hclust(dist(cor(t(centers)))) NULL, reordering done. hclust_intra_clusters run hierarchical clustering within cluster return ordering observations. seed seed c++ random number generator parallel cluster every cluster parallelly (hclust_intra_clusters true)","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"named numeric vector specifying cluster metacell","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"","code":"if (FALSE) { ## Use \"default clustering\" - the existing annotations mc_clusters <- gen_atac_mc_clust(my_atac_mc, use_prior_annot = T)  ## Identify peaks of interest, namely peaks neighboring a set of feature genes, and use only them for clustering nei_peaks_feat_genes <- gintervals.neighbors(my_atac_mc@peaks, tss[tss$name %in% feature_genes, ], maxdist = 5e+5) peaks_of_interest <- nei_peaks_feat_genes[, c(\"chrom\", \"start\", \"end\")] mc_clusters <- gen_atac_mc_clust(my_atac_mc, k = 16, peak_set = peaks_of_interest, use_prior_annot = F) }"},{"path":"/reference/gen_atac_peak_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"Cluster atac peaks based atac distributions","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"","code":"gen_atac_peak_clust(   atac_mc,   k = NULL,   clustering_algoritm = \"kmeans\",   cluster_on = \"fp\",   peak_set = NULL,   ... )"},{"path":"/reference/gen_atac_peak_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"atac_mc McPeaks object k number clusters; must specified clustering_algoritm = 'kmeans' clustering_algoritm (optional) either \"kmeans\" \"louvain\" cluster_on (optional; default - fp) matrix (mat/fp/egc)cluster ... Arguments passed tglkmeans::TGL_kmeans df data frame. row single observation column dimension. first column can contain id observation (id_column TRUE). metric distance metric kmeans++ seeding. can 'euclid', 'pearson' 'spearman' max_iter maximal number iterations min_delta minimal change assignments (fraction observations) continue iterating verbose display algorithm messages keep_log keep algorithm messages 'log' field id_column df's first column contains observation id reorder_func function reorder clusters. operates center orders result. e.g. reorder_func = mean calculate mean center reorder clusters accordingly. reorder_func = hclust centers ordered hclust euclidean distance correlation matrix, .e. hclust(dist(cor(t(centers)))) NULL, reordering done. hclust_intra_clusters run hierarchical clustering within cluster return ordering observations. seed seed c++ random number generator parallel cluster every cluster parallelly (hclust_intra_clusters true)","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"named numeric vector specifying cluster peak","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"","code":"if (FALSE) { my_atac_mc <- gen_atac_peak_clust(my_atac_mc, k = 16, cluster_on = \"mat\")  dyn_p <- identify_dynamic_peaks(my_atac_mc) my_atac_mc <- gen_atac_peak_clust(my_atac_mc, k = 16, cluster_on = \"fp\", peak_set = dyn_p) }"},{"path":"/reference/gen_promoter_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Select only peaks that are close to a gene promoter — gen_promoter_features","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"Select peaks close gene promoter. case alternative promoters multiple peaks close promoter, reads peaks promoters summed.","code":""},{"path":"/reference/gen_promoter_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"","code":"gen_promoter_features(   atac,   upstream = 500,   downstream = 50,   tss_intervals = \"intervs.global.tss\",   id_field = \"geneSymbol\" )"},{"path":"/reference/gen_promoter_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"atac McPeaks ScPeaks object upstream bp upstream TSS downstream bp downstread tss tss_intervals name intervals set TSS id_field field tss_intervals containing gene names. Default: \"geneSymbol\"","code":""},{"path":"/reference/gen_promoter_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"McPeaks ScPeaks object new peaks sum peaks within defined promoters. rownames atac@mat field 'peak_name' atac@peaks contain name promoter (id_field). Note previous peak metadata previous ignored peaks dropped.","code":""},{"path":"/reference/gen_promoter_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"","code":"if (FALSE) { atac_mc_promoters <- gen_promoter_features(atac_mc) }"},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"Generate random genome motif PSSM matrix","code":""},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"","code":"gen_random_genome_peak_motif_matrix(   num_peaks = 100000,   peak_width = 200,   bp_from_chrom_edge_to_avoid = 3000000,   datasets_of_interest = NULL,   motif_regex = NULL,   motif_tracks = NULL,   parallel = TRUE )"},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"num_peaks total number intervals (divided proportionately chromosomes) use background peak_width (optional) - size region around peak centers extract motif energies bp_from_chrom_edge_to_avoid regions (bp) edges chromosomes avoid sampling (e.g. avoid acrocentric centromeres) datasets_of_interest (optional) - names pssm datasets (name.key-name.data file combinations) calculate PSSM values motif_regex (optional) - vector regular expressions match motif track names extract motif PSSMs motif_tracks (optional) - misha track names extract motif PSSMs parallel (optional) - whether use parallel computations","code":""},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"matrix peaks (rows) vs. aggregated motif energies (columns)","code":""},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"","code":"if (FALSE) { random_genome_motifs <- gen_random_genome_peak_motif_matrix(num_peaks = 5e+4, datasets_of_interest = get_available_pssms(return_datasets_only = TRUE)) }"},{"path":"/reference/generate_motif_pssm_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate peak-motif matrix — generate_motif_pssm_matrix","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"function calculates aggregated log-PSSM energies (derived misha package's create_pssm_energy module) set peaks (default - peaks dataset) set motifs (default - available)","code":""},{"path":"/reference/generate_motif_pssm_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"","code":"generate_motif_pssm_matrix(   atac = NULL,   peak_width = 200,   pssm_path = NULL,   datasets_of_interest = NULL,   motif_tracks = NULL,   motif_regex = NULL,   parallel = getOption(\"mcatac.parallel\"),   nc = getOption(\"mcatac.parallel.nc\") )"},{"path":"/reference/generate_motif_pssm_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"atac ScPeaks/McPeaks PeakIntervals object peak_width (optional) - size region around peak centers extract motif energies pssm_path (optional) - path directory containing misha-formatted pssm files (e.g. motifs.key motifs.data) datasets_of_interest (optional) - names pssm datasets (name.key-name.data file combinations) calculate PSSM values motif_tracks (optional) - misha track names extract motif PSSMs motif_regex (optional) - vector regular expressions match motif track names extract motif PSSMs parallel (optional) - whether use parallel computations nc (optional) - number cores use parallel computations","code":""},{"path":"/reference/generate_motif_pssm_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"matrix peaks (rows) vs. aggregated motif energies (columns)","code":""},{"path":"/reference/generate_motif_pssm_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"","code":"if (FALSE) { peak_motif_mat <- generate_motif_pssm_matrix(     peak_set = head(atac_sc@peaks),     motif_regex = c(\"Bcl\", \"Atf\"),     datasets_of_interest = c(\"homer\", \"jaspar\", \"jolma\"),     parallel = F ) }"},{"path":"/reference/generate_pheatmap_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to generate generic pheatmap annotation — generate_pheatmap_annotation","title":"Function to generate generic pheatmap annotation — generate_pheatmap_annotation","text":"Generate generic pheatmap-compatible annotation clustering unannotated data plotting pheatmap","code":""},{"path":"/reference/generate_pheatmap_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to generate generic pheatmap annotation — generate_pheatmap_annotation","text":"","code":"generate_pheatmap_annotation(   clust_vec,   feature_type = NULL,   feature_annotation = NULL )"},{"path":"/reference/generate_pheatmap_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to generate generic pheatmap annotation — generate_pheatmap_annotation","text":"clust_vec clustering vector generically annotate feature_type (optional) type feature clustered feature_name (optional) name feature clustered","code":""},{"path":"/reference/generate_pheatmap_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to generate generic pheatmap annotation — generate_pheatmap_annotation","text":"2-element list containing pheatmap-compatible dataframe list containing named vector","code":""},{"path":"/reference/generate_pheatmap_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to generate generic pheatmap annotation — generate_pheatmap_annotation","text":"","code":"if (FALSE) {  ## generate metacell cluster/cell type annotation metacell_clusters <- gen_atac_mc_clust(atac_mc, use_prior_annot = FALSE, k = 8) mc_cl_phm_annot <- generate_pheatmap_annotation(metacell_clusters,     feature_type = \"metacell\", feature_annotation = \"cluster\" )  metacell_clusters_by_annotation <- gen_atac_mc_clust(atac_mc, use_prior_annot = TRUE) mc_cl_phm_annot <- generate_pheatmap_annotation(metacell_clusters,     feature_type = \"metacell\", feature_annotation = \"cell_type\" )   ## generate peak cluster annotation peak_clusters <- gen_atac_peak_clust(atac_mc, k = 16) peak_cl_phm_annot <- generate_pheatmap_annotation(peak_clusters,     feature_type = \"peak\", feature_annotation = \"cluster\" ) }"},{"path":"/reference/get_available_pssms.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"Function validating pssm_path getting /selected PSSM datasets tracks path/gdb","code":""},{"path":"/reference/get_available_pssms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"","code":"get_available_pssms(   pssm_path = NULL,   datasets_of_interest = NULL,   return_datasets_only = FALSE )"},{"path":"/reference/get_available_pssms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"pssm_path (optional) - path misha pssm datasets (.key-.data file combinations), need specify misha gdb set correctly datasets_of_interest (optional) - pssm datasets get available pssms . Available datasets can obtained calling function return_datasets_only = TRUE return_datasets_only (optional) - whether return available pssm datasets","code":""},{"path":"/reference/get_available_pssms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"either: 1) (default) list containing list names list corresponding dataframes motif datasets available, 2) return_datasets_only == TRUE, just names available motif datasets","code":""},{"path":"/reference/get_available_pssms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"","code":"if (FALSE) { pssm_datasets <- get_available_pssms(return_datasets_only = TRUE) all_pssms <- get_available_pssms() all_pssms <- get_available_pssms(datasets_of_interest = pssm_datasets) all_pssms_jaspar_homer <- get_available_pssms(datasets_of_interest = c(\"jaspar\", \"homer\")) }"},{"path":"/reference/get_gene_promoter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an intervals set of a gene promoter. — get_gene_promoter","title":"Get an intervals set of a gene promoter. — get_gene_promoter","text":"Get intervals set gene promoter.","code":""},{"path":"/reference/get_gene_promoter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an intervals set of a gene promoter. — get_gene_promoter","text":"","code":"get_gene_promoter(gene, upstream = 500, downstream = 50, unify = FALSE)"},{"path":"/reference/get_gene_promoter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an intervals set of a gene promoter. — get_gene_promoter","text":"upstream bp upstream TSS downstream bp downstread tss unify unify intervals multiple promoters. start coordinate intervals minimum starts end coordinate intervals maximum ends. name name gene (\"name2\" UCSC files).","code":""},{"path":"/reference/get_gene_promoter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an intervals set of a gene promoter. — get_gene_promoter","text":"intervals set promoter gene. unify TRUE - intervals unified single row.","code":""},{"path":"/reference/get_gene_promoter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an intervals set of a gene promoter. — get_gene_promoter","text":"","code":"if (FALSE) { get_gene_promoter(\"GZMK\") }"},{"path":"/reference/get_genes_atac_fp.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"function returns relative fold change matrix ATAC peaks list genes matched using rna_atac_cor_knn.","code":""},{"path":"/reference/get_genes_atac_fp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"","code":"get_genes_atac_fp(   atac_mc,   genes = NULL,   metacells = NULL,   rm_zeros = TRUE,   spearman = TRUE,   pairwise.complete.obs = TRUE )"},{"path":"/reference/get_genes_atac_fp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"atac_mc McPeaks/McTracks object genes list genes. rm_zeros remove genes RNA expression metacell. Default: TRUE spearman 'TRUE' Spearman correlation computed, otherwise Pearson pairwise.complete.obs see metacell select subset metacells.","code":""},{"path":"/reference/get_genes_atac_fp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"","code":"if (FALSE) { marker_genes <- get_rna_markers(atac_mc) atac_fp <- get_genes_atac_fp(atac_mc, genes = marker_genes) rna_fp <- get_rna_marker_matrix(atac_mc, genes = marker_genes) }"},{"path":"/reference/get_peak_coverage_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"peak, calculate: cov: total number UMIs peak max_cov: maximal per-cell coverage peak len: length peak cov_density: number UMIs number UMIs per scale bp.","code":""},{"path":"/reference/get_peak_coverage_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"","code":"get_peak_coverage_stats(atac, scale = 100)"},{"path":"/reference/get_peak_coverage_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"atac ScPeaks McPeaks object scale 'cov_density' field, calculate number UMIs per scale bp (default: 100)","code":""},{"path":"/reference/get_peak_coverage_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"data frame peaks, length ('len'), total coverage ('cov'), maximal per-cell coverage ('max_cov') coverage density ('cov_density')","code":""},{"path":"/reference/get_peak_coverage_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"","code":"if (FALSE) { get_peak_coverage_stats(atac) }"},{"path":"/reference/get_promoter_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"Get names peaks close gene promoter","code":""},{"path":"/reference/get_promoter_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"","code":"get_promoter_peaks(   peaks,   gene,   max_dist_to_promoter_peak = 500,   tss_intervals = \"intervs.global.tss\" )"},{"path":"/reference/get_promoter_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"peaks PeakIntervals object gene gene name, e.g. \"CD4\" max_dist_to_promoter_peak far gene's TSS search promoter-proximal peaks. Default: 500 tss_intervals name intervals set containing TSSs","code":""},{"path":"/reference/get_promoter_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"names peaks close gene's promoter. peaks found, NULL returned.","code":""},{"path":"/reference/get_promoter_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"","code":"if (FALSE) { get_promoter_peaks(mc_atac@peaks, \"CD4\") }"},{"path":"/reference/get_quantile_cov_thresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"Threshold calculated taking maximum quantile_thresh quantile ATAC marginal min_umis.","code":""},{"path":"/reference/get_quantile_cov_thresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"","code":"get_quantile_cov_thresh(   marginal_track,   quantile_thresh,   min_umis,   window_size,   genome = NULL,   seed = 60427 )"},{"path":"/reference/get_quantile_cov_thresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"marginal_track Name 'misha' track call peaks . can create using import_atac_marginal. quantile_thresh Quantile threshold use. min_umis Minimum number UMIs use. window_size size window use calculation quantile. genome Genome name, 'hg19' 'mm10'. NULL - current genome used. seed random seed reproducibility (misha::gquantiles sometimes samples data.","code":""},{"path":"/reference/get_quantile_cov_thresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"number UMIs use calling peaks.","code":""},{"path":"/reference/get_quantile_cov_thresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"","code":"if (FALSE) { get_quantile_cov_thresh(\"pbmc_atac.marginal\", quantile_thresh = 0.9, min_umis = 8, genome = \"hg38\") }"},{"path":"/reference/get_rna_egc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the normalized RNA expression matrix (egc) from a McPeaks object — get_rna_egc","title":"Get the normalized RNA expression matrix (egc) from a McPeaks object — get_rna_egc","text":"Get RNA expression data, normalized total RNA expression metacell.","code":""},{"path":"/reference/get_rna_egc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the normalized RNA expression matrix (egc) from a McPeaks object — get_rna_egc","text":"","code":"get_rna_egc(atac_mc, genes = NULL, rm_zeros = TRUE, epsilon = 0.00001)"},{"path":"/reference/get_rna_egc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the normalized RNA expression matrix (egc) from a McPeaks object — get_rna_egc","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression","code":""},{"path":"/reference/get_rna_egc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the normalized RNA expression matrix (egc) from a McPeaks object — get_rna_egc","text":"matrix normalized RNA expression values gene (rows) metacell (columns)","code":""},{"path":"/reference/get_rna_egc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the normalized RNA expression matrix (egc) from a McPeaks object — get_rna_egc","text":"","code":"if (FALSE) { rna_mat <- get_rna_egc(atac_mc) rna_mat <- get_rna_egc(atac_mc, genes = c(\"MESP1\", \"MESP2\", \"PF4\")) rna_mat <- get_rna_egc(atac_mc, rm_zeros = FALSE) }"},{"path":"/reference/get_rna_fp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"function first transforms UMI matrix fractions per metacell, calculates enrichment gene median (dividing gene expression median).","code":""},{"path":"/reference/get_rna_fp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"","code":"get_rna_fp(atac_mc, genes = NULL, rm_zeros = TRUE, epsilon = 0.00001)"},{"path":"/reference/get_rna_fp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression","code":""},{"path":"/reference/get_rna_fp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"matrix normalized counts gene expression gene (rows) metacell (columns)","code":""},{"path":"/reference/get_rna_fp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"","code":"if (FALSE) { get_rna_fp(atac_mc) get_rna_fp(atac_mc, \"GNLY\") get_rna_fp(atac_mc, \"GNLY\", epsilon = NULL) }"},{"path":"/reference/get_rna_marker_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get enrichment matrix for marker genes — get_rna_marker_matrix","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"Get enrichment matrix marker genes","code":""},{"path":"/reference/get_rna_marker_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"","code":"get_rna_marker_matrix(   atac_mc,   markers = NULL,   force_cell_type = TRUE,   rm_zeros = TRUE,   epsilon = 0.00001,   ... )"},{"path":"/reference/get_rna_marker_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) markers list marker genes. NULL - function uses get_rna_markers default parameters can overridden using ellipsis .... force_cell_type split cell types ordering metacells. Default: TRUE rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression ... Arguments passed get_rna_markers n_genes maximal number genes return. Default: 100 minimal_max_log_fraction take genes least one value (log fraction units - normalized egc) threshold minimal_relative_log_fraction take genes least one value relative log fraction (mc_fp) value fold_change_reg regularization factor fold change calculation (fold_change changed fold_change = fold_change + fold_change_reg) genes list genes match. Default (NULL): genes","code":""},{"path":"/reference/get_rna_marker_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"matrix log2 normalized counts gene expression marker gene (rows) metacell (columns). columns columns clustered using hclust \"ward\" linkage, euclidean distance pearson correlation matrix columns. , gene highest number metacells fold change (abs) 1 (gene1) selected together gene anti-correlated (gene2), hclust ordered using difference (gene1 - gene2). force_cell_type TRUE atac_mc@metadata field named \"cell_type\", columns ordered within cell type.","code":""},{"path":"/reference/get_rna_marker_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"","code":"if (FALSE) { marker_mat <- get_rna_marker_matrix(atac_mc) marker_mat <- get_rna_marker_matrix(atac_mc, n_genes = 100) }"},{"path":"/reference/get_rna_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene markers of metacells gene expression — get_rna_markers","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"function first removes genes without sufficient expression metacell minimal_max_log_fraction, without sufficient fold change median (minimal_relative_expression), ranks fold change genes within metacell. markers genes highest rank, n_genes genes.","code":""},{"path":"/reference/get_rna_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"","code":"get_rna_markers(   atac_mc,   n_genes = 100,   minimal_max_log_fraction = -13,   minimal_relative_log_fraction = 2,   fold_change_reg = 0.1,   genes = NULL,   rm_zeros = TRUE,   epsilon = 0.00001 )"},{"path":"/reference/get_rna_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) n_genes maximal number genes return. Default: 100 minimal_max_log_fraction take genes least one value (log fraction units - normalized egc) threshold minimal_relative_log_fraction take genes least one value relative log fraction (mc_fp) value fold_change_reg regularization factor fold change calculation (fold_change changed fold_change = fold_change + fold_change_reg) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression","code":""},{"path":"/reference/get_rna_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"","code":"if (FALSE) { get_rna_markers(atac_mc) }"},{"path":"/reference/get_track_total_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the total coverage of a track — get_track_total_coverage","title":"Return the total coverage of a track — get_track_total_coverage","text":"function computes total coverage track, adds attribute track. attribute pre-computed , returned. Set overwrite parameter TRUE recompute coverage.","code":""},{"path":"/reference/get_track_total_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the total coverage of a track — get_track_total_coverage","text":"","code":"get_track_total_coverage(track, attr_name = \"total_cov\", overwrite = FALSE)"},{"path":"/reference/get_track_total_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the total coverage of a track — get_track_total_coverage","text":"track track name attr_name attribute name. Default \"total_cov\", please change unless know . overwrite overwrite existing attribute (logical)","code":""},{"path":"/reference/get_track_total_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the total coverage of a track — get_track_total_coverage","text":"Total coverage track.","code":""},{"path":"/reference/get_track_total_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the total coverage of a track — get_track_total_coverage","text":"","code":"if (FALSE) { add_track_total_coverage(\"track1\") }"},{"path":"/reference/gintervals.extend_left.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend the coordinates of an intervals set to the left. — gintervals.extend_left","title":"Extend the coordinates of an intervals set to the left. — gintervals.extend_left","text":"Extend coordinates intervals set left.","code":""},{"path":"/reference/gintervals.extend_left.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend the coordinates of an intervals set to the left. — gintervals.extend_left","text":"","code":"gintervals.extend_left(intervals, ext)"},{"path":"/reference/gintervals.extend_left.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend the coordinates of an intervals set to the left. — gintervals.extend_left","text":"intervals intervals set. ext number bp extend left.","code":""},{"path":"/reference/gintervals.extend_left.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend the coordinates of an intervals set to the left. — gintervals.extend_left","text":"new intervals set start coordinates start - ext. Note intervals remain bounded chromosome boundaries.","code":""},{"path":"/reference/gintervals.extend_left.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extend the coordinates of an intervals set to the left. — gintervals.extend_left","text":"","code":"gdb.init_examples() gintervals(1, 50, 150) %>% gintervals.extend_left(20) #>   chrom start end #> 1  chr1    30 150"},{"path":"/reference/gintervals.extend_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend the coordinates of an intervals set to the right. — gintervals.extend_right","title":"Extend the coordinates of an intervals set to the right. — gintervals.extend_right","text":"Extend coordinates intervals set right.","code":""},{"path":"/reference/gintervals.extend_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend the coordinates of an intervals set to the right. — gintervals.extend_right","text":"","code":"gintervals.extend_right(intervals, ext)"},{"path":"/reference/gintervals.extend_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend the coordinates of an intervals set to the right. — gintervals.extend_right","text":"intervals intervals set. ext number bp extend right.","code":""},{"path":"/reference/gintervals.extend_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend the coordinates of an intervals set to the right. — gintervals.extend_right","text":"new intervals set end coordinates end + ext. Note intervals remain bounded chromosome boundaries.","code":""},{"path":"/reference/gintervals.extend_right.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extend the coordinates of an intervals set to the right. — gintervals.extend_right","text":"","code":"gdb.init_examples() gintervals(1, 50, 150) %>% gintervals.extend_right(20) #>   chrom start end #> 1  chr1    50 170"},{"path":"/reference/gintervals.shift_left.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift the coordinates of an intervals set to the left. — gintervals.shift_left","title":"Shift the coordinates of an intervals set to the left. — gintervals.shift_left","text":"Shift coordinates intervals set left.","code":""},{"path":"/reference/gintervals.shift_left.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift the coordinates of an intervals set to the left. — gintervals.shift_left","text":"","code":"gintervals.shift_left(intervals, shift)"},{"path":"/reference/gintervals.shift_left.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift the coordinates of an intervals set to the left. — gintervals.shift_left","text":"intervals intervals set. shift number bp shift left.","code":""},{"path":"/reference/gintervals.shift_left.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift the coordinates of an intervals set to the left. — gintervals.shift_left","text":"new intervals set coordinates start - shift end - shift. Note intervals remain bounded chromosome boundaries.","code":""},{"path":"/reference/gintervals.shift_left.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift the coordinates of an intervals set to the left. — gintervals.shift_left","text":"","code":"gdb.init_examples() gintervals(1, 50, 150) %>% gintervals.shift_left(20) #>   chrom start end #> 1  chr1    30 130"},{"path":"/reference/gintervals.shift_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift the coordinates of an intervals set to the right. — gintervals.shift_right","title":"Shift the coordinates of an intervals set to the right. — gintervals.shift_right","text":"Shift coordinates intervals set right.","code":""},{"path":"/reference/gintervals.shift_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift the coordinates of an intervals set to the right. — gintervals.shift_right","text":"","code":"gintervals.shift_right(intervals, shift)"},{"path":"/reference/gintervals.shift_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift the coordinates of an intervals set to the right. — gintervals.shift_right","text":"intervals intervals set. shift number bp shift right.","code":""},{"path":"/reference/gintervals.shift_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift the coordinates of an intervals set to the right. — gintervals.shift_right","text":"new intervals set coordinates start + shift end + shift. Note intervals remain bounded chromosome boundaries.","code":""},{"path":"/reference/gintervals.shift_right.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift the coordinates of an intervals set to the right. — gintervals.shift_right","text":"","code":"gdb.init_examples() gintervals(1, 50, 150) %>% gintervals.shift_right(20) #>   chrom start end #> 1  chr1    70 170"},{"path":"/reference/gintervals.zoom_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom-in for an intervals set. — gintervals.zoom_in","title":"Zoom-in for an intervals set. — gintervals.zoom_in","text":"Zoom-intervals set.","code":""},{"path":"/reference/gintervals.zoom_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom-in for an intervals set. — gintervals.zoom_in","text":"","code":"gintervals.zoom_in(intervals, zoom)"},{"path":"/reference/gintervals.zoom_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom-in for an intervals set. — gintervals.zoom_in","text":"intervals intervals set. zoom zoom-factor.","code":""},{"path":"/reference/gintervals.zoom_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zoom-in for an intervals set. — gintervals.zoom_in","text":"new intervals set coordinates c + round(l/2) c - round(l/2) l length interval divided zoom, c center interval.","code":""},{"path":"/reference/gintervals.zoom_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zoom-in for an intervals set. — gintervals.zoom_in","text":"","code":"gdb.init_examples() gintervals(1, 0, 200) %>% gintervals.zoom_in(2) #>   chrom start end #> 1  chr1    50 150"},{"path":"/reference/gintervals.zoom_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom-out for an intervals set. — gintervals.zoom_out","title":"Zoom-out for an intervals set. — gintervals.zoom_out","text":"Zoom-intervals set.","code":""},{"path":"/reference/gintervals.zoom_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom-out for an intervals set. — gintervals.zoom_out","text":"","code":"gintervals.zoom_out(intervals, zoom)"},{"path":"/reference/gintervals.zoom_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom-out for an intervals set. — gintervals.zoom_out","text":"intervals intervals set. zoom zoom-factor.","code":""},{"path":"/reference/gintervals.zoom_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zoom-out for an intervals set. — gintervals.zoom_out","text":"new intervals set coordinates c + round(l/2) c - round(l/2) l length interval multiplied zoom, c center interval. Note intervals remain bounded chromosome boundaries.","code":""},{"path":"/reference/gintervals.zoom_out.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zoom-out for an intervals set. — gintervals.zoom_out","text":"","code":"gdb.init_examples() gintervals(1, 50, 150) %>% gintervals.zoom_out(2) #>   chrom start end #> 1  chr1     0 200"},{"path":"/reference/has_cell_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the McPeaks object contain per-metacell cell type annotation — has_cell_type","title":"Does the McPeaks object contain per-metacell cell type annotation — has_cell_type","text":"McPeaks object contain per-metacell cell type annotation","code":""},{"path":"/reference/has_cell_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the McPeaks object contain per-metacell cell type annotation — has_cell_type","text":"","code":"has_cell_type(atac_mc)"},{"path":"/reference/has_cell_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the McPeaks object contain per-metacell cell type annotation — has_cell_type","text":"atac_mc McPeaks object","code":""},{"path":"/reference/has_cell_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the McPeaks object contain per-metacell cell type annotation — has_cell_type","text":"TRUE McPeaks object contains per-metacell cell type annotation, FALSE otherwise","code":""},{"path":"/reference/has_cell_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the McPeaks object contain per-metacell cell type annotation — has_cell_type","text":"","code":"if (FALSE) { has_cell_type(atac_mc) }"},{"path":"/reference/has_cell_type_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the McPeaks object contain cell type color annotation — has_cell_type_colors","title":"Does the McPeaks object contain cell type color annotation — has_cell_type_colors","text":"McPeaks object contain cell type color annotation","code":""},{"path":"/reference/has_cell_type_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the McPeaks object contain cell type color annotation — has_cell_type_colors","text":"","code":"has_cell_type_colors(atac_mc)"},{"path":"/reference/has_cell_type_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the McPeaks object contain cell type color annotation — has_cell_type_colors","text":"atac_mc McPeaks object","code":""},{"path":"/reference/has_cell_type_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the McPeaks object contain cell type color annotation — has_cell_type_colors","text":"TRUE McPeaks object contains cell type color annotation, FALSE otherwise","code":""},{"path":"/reference/has_cell_type_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the McPeaks object contain cell type color annotation — has_cell_type_colors","text":"","code":"if (FALSE) { has_cell_type_color(atac_mc) }"},{"path":"/reference/has_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the McPeaks object contain per-metacell gene expression data? — has_rna","title":"Does the McPeaks object contain per-metacell gene expression data? — has_rna","text":"McPeaks object contain per-metacell gene expression data?","code":""},{"path":"/reference/has_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the McPeaks object contain per-metacell gene expression data? — has_rna","text":"","code":"has_rna(atac_mc)"},{"path":"/reference/has_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the McPeaks object contain per-metacell gene expression data? — has_rna","text":"atac_mc McPeaks/McTracks object","code":""},{"path":"/reference/has_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the McPeaks object contain per-metacell gene expression data? — has_rna","text":"TRUE McPeaks object contains per-metacell gene expression data, FALSE otherwise","code":""},{"path":"/reference/has_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the McPeaks object contain per-metacell gene expression data? — has_rna","text":"","code":"if (FALSE) { has_rna(atac_mc) }"},{"path":"/reference/identify_dynamic_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find dynamic peaks in McPeaks matrix — identify_dynamic_peaks","title":"Find dynamic peaks in McPeaks matrix — identify_dynamic_peaks","text":"function identifies \"dynamic\" peaks, .e. high expression subset cells. identified overdispersion coefficient variation (std.dev./mean) per quantiles.","code":""},{"path":"/reference/identify_dynamic_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find dynamic peaks in McPeaks matrix — identify_dynamic_peaks","text":"","code":"identify_dynamic_peaks(   atac_mc,   method = \"bmq\",   plot = TRUE,   mean_thresh_q = 0.1,   cov_q_thresh = 0.75,   num_bins = 200,   gmm_g = 4 )"},{"path":"/reference/identify_dynamic_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find dynamic peaks in McPeaks matrix — identify_dynamic_peaks","text":"atac_mc McPeaks object analyze method (optional) either 'bmq' (default) 'gmm'; 'bmq' (binned-mean quantiles) bins log-mean peaks (averaged across metacells) selects peaks coefficient variation quantile bin. controlled 'gmm' fits Gaussian mixture model log10(COV) vs. log10(mean) distribution, selects peaks clusters show overdispersion COV. plot plot peak mean vs coefficient variation (log10 scale). Note highly recommended look scatter plot proceeding, set parameter FALSE made sure scatter looks reasonable. mean_thresh_q (optional) threshold quantile peaks' mean cov_q_thresh (optional) threshold minimum COV quantile consider dynamic bin num_bins (optional) number bins divide features' means gmm_g (optional) number groups 'gmm'","code":""},{"path":"/reference/identify_dynamic_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find dynamic peaks in McPeaks matrix — identify_dynamic_peaks","text":"PeakIntervals object peaks identified dynamic. plot = TRUE selected points plotted.","code":""},{"path":"/reference/identify_dynamic_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find dynamic peaks in McPeaks matrix — identify_dynamic_peaks","text":"","code":"if (FALSE) { dynamic_peaks_by_bmq <- identify_dynamic_peaks(atac_mc, method = \"bmq\", mean_thresh_q = 0.1, cov_q_thresh = 0.6, num_bins = 100) dynamic_peaks_by_gmm <- identify_dynamic_peaks(atac_mc, method = \"gmm\", gmm_g = 3) }"},{"path":"/reference/import_atac_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Import marginal of ATAC counts to a misha track — import_atac_marginal","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"Import marginal ATAC counts misha track","code":""},{"path":"/reference/import_atac_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"","code":"import_atac_marginal(   file,   track,   description,   genome,   binsize = 20,   overwrite = FALSE,   wig_temp_dir = tempdir() )"},{"path":"/reference/import_atac_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"file Name 'bigwig' file import, 'atac_cut_sites.bigwig' 10x pipeline. details, see: https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/output/bigwig track Name track create. description character string description genome Genome name, 'hg19' 'mm10'. binsize bin size newly created 'Dense' track '0' 'Sparse' track overwrite Overwrite existing track exists. wig_temp_dir Temporary directory store intermediate wig files.","code":""},{"path":"/reference/import_atac_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"","code":"if (FALSE) { import_atac_marginal(\"./atac_cut_sites.bigwig\", \"pbmc_atac.marginal\", \"Marignal counts from PBMC ATAC\", genome = \"hg38\") }"},{"path":"/reference/import_from_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScPeaks object from 10x directory — import_from_10x","title":"Create an ScPeaks object from 10x directory — import_from_10x","text":"Create ScPeaks object 10x directory","code":""},{"path":"/reference/import_from_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScPeaks object from 10x directory — import_from_10x","text":"","code":"import_from_10x(   dir,   genome,   id = NULL,   description = NULL,   metadata = NULL,   matrix_fn = file.path(dir, \"matrix.mtx\"),   cells_fn = file.path(dir, \"barcodes.tsv\"),   features_fn = file.path(dir, \"features.tsv\"),   tad_based = TRUE,   zero_based = FALSE )"},{"path":"/reference/import_from_10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScPeaks object from 10x directory — import_from_10x","text":"dir 10x directory. following files: 'matrix.mtx', 'barcodes.tsv' 'features.tsv'. used 'Cell Ranger ARC', 'outs/filtered_feature_bc_matrix' directory.  details see: https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/overview/welcome genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". NULL - random id assigned. description (Optional) description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\". metadata (Optional) data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. matrix_fn dir missing, filename matrix import (\"matrix.mtx\" \"matrix.mtx.gz\") cells_fn dir missing, filename cells import (\"barcodes.tsv\" \"barcodes.tsv.gz\") features_fn dir missing, filename features import (\"features.tsv\" \"features.tsv.gz\") tad_based whether name peaks based TADs possible (intervals set named \"intervs.global.tad_names\" exists). FALSE - peaks named based coordinates. zero_based coordinates features 0-based? Note FALSE (default) coordinates created object different ones features_fn 1 bp.","code":""},{"path":"/reference/import_from_10x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ScPeaks object from 10x directory — import_from_10x","text":"ScPeaks object","code":""},{"path":"/reference/import_from_10x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScPeaks object from 10x directory — import_from_10x","text":"","code":"if (FALSE) { atac <- import_from_10x(\"./pbmc_data\", genome = \"hg38\") atac }"},{"path":"/reference/import_from_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScPeaks,McPeaks object from an h5ad file — import_from_h5ad","title":"Create an ScPeaks,McPeaks object from an h5ad file — import_from_h5ad","text":"Reads ATAC object h5ad file. Peak data taken 'X' section metadata taken 'obs'. 'var' section can contain special field called 'ignore' marks peaks ignored.","code":""},{"path":"/reference/import_from_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScPeaks,McPeaks object from an h5ad file — import_from_h5ad","text":"","code":"import_from_h5ad(   file,   class = NULL,   genome = NULL,   id = NULL,   description = NULL,   tad_based = NULL )"},{"path":"/reference/import_from_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScPeaks,McPeaks object from an h5ad file — import_from_h5ad","text":"file name h5ad file ATAC data class file storing ScPeaks McPeaks. NULL - class determined 'class' field 'uns' part h5ad file, exists otherwise class McPeaks. genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\". NULL - assembly determined 'genome' field 'uns' part h5ad file. id identifier object, e.g. \"pbmc\". NULL - id determined 'id' field 'uns' part h5ad file, exist - random id assigned. description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\". NULL - id determined 'description' field 'uns' part h5ad file tad_based whether name peaks based TADs possible (intervals set named \"intervs.global.tad_names\" exists). FALSE - peaks named based coordinates. NULL - value determined 'tad_based' field 'uns' part h5ad file, exist - value TRUE.","code":""},{"path":"/reference/import_from_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ScPeaks,McPeaks object from an h5ad file — import_from_h5ad","text":"ScPeaks/McPeaks object","code":""},{"path":"/reference/import_from_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScPeaks,McPeaks object from an h5ad file — import_from_h5ad","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") export_to_h5ad(atac_sc, \"pbmc_data/atac_sc.h5ad\") atac_sc_loaded <- import_from_h5ad(\"pbmc_data/atac_sc.h5ad\") }"},{"path":"/reference/import_from_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScPeaks,McPeaks object from matrix and peaks — import_from_matrix","title":"Create an ScPeaks,McPeaks object from matrix and peaks — import_from_matrix","text":"Create ScPeaks,McPeaks object matrix peaks","code":""},{"path":"/reference/import_from_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScPeaks,McPeaks object from matrix and peaks — import_from_matrix","text":"","code":"import_from_matrix(   mat,   peaks,   genome,   id = NULL,   description = NULL,   metadata = NULL,   class = \"ScPeaks\",   rm_zero_peaks = TRUE,   tad_based = TRUE,   zero_based = FALSE,   mc_size_eps_q = 0.1 )"},{"path":"/reference/import_from_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScPeaks,McPeaks object from matrix and peaks — import_from_matrix","text":"mat matrix/sparse matrix counts peaks intervals set row corresponds row mat. Can contain additional column named 'peak_name' peak names, case rownames mat expected equal column. genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". NULL - random id assigned. description (Optional) description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\". metadata (Optional) data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. class output object ScPeaks McPeaks rm_zero_peaks remove peaks without reads (-zero peaks). Default: TRUE tad_based whether name peaks based TADs possible (intervals set named \"intervs.global.tad_names\" exists). FALSE - peaks named based coordinates. zero_based coordinates features 0-based? Note FALSE (default) coordinates created object different ones features_fn 1 bp. mc_size_eps_q (optional) quantile MC size (UMIs) scale number UMIs per metacell. \\(egc_ij\\) fraction peak metacell j multiplied mc_size_eps_q quantile metacell sizes.","code":""},{"path":"/reference/import_from_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScPeaks,McPeaks object from matrix and peaks — import_from_matrix","text":"","code":"if (FALSE) { atac_sc <- import_from_matrix(mat, peaks, genome = \"hg38\") atac_mc <- import_from_matrix(mat, peaks, genome = \"hg38\", class = \"McPeaks\") }"},{"path":"/reference/infer_track_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer order of metacell track names by metacell number — infer_track_order","title":"Infer order of metacell track names by metacell number — infer_track_order","text":"Infer order metacell track names metacell number","code":""},{"path":"/reference/infer_track_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer order of metacell track names by metacell number — infer_track_order","text":"","code":"infer_track_order(tracks, track_name_prefix = NULL)"},{"path":"/reference/infer_track_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer order of metacell track names by metacell number — infer_track_order","text":"tracks tracks order track_name_prefix prefix string remove extracting metacell numbers","code":""},{"path":"/reference/infer_track_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer order of metacell track names by metacell number — infer_track_order","text":"order tracks metacell number","code":""},{"path":"/reference/infer_track_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infer order of metacell track names by metacell number — infer_track_order","text":"","code":"track_order <- infer_track_order(tracks) #> Error in stri_extract_all_regex(string, pattern, simplify = simplify,     omit_no_match = TRUE, opts_regex = opts(pattern)): object 'tracks' not found"},{"path":"/reference/initialize-McPeaks-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new McPeaks object — initialize,McPeaks-method","title":"Construct a new McPeaks object — initialize,McPeaks-method","text":"McPeaks shallow object holding ATAC data metacells. Minimally include count matrix peaks metacells, PeakIntervals hold coordinates peaks.","code":""},{"path":"/reference/initialize-McPeaks-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new McPeaks object — initialize,McPeaks-method","text":"","code":"# S4 method for McPeaks initialize(   .Object,   mat,   peaks,   genome,   id = NULL,   description = NULL,   metadata = NULL,   cell_to_metacell = NULL,   mc_size_eps_q = 0.1,   path = \"\",   tad_based = TRUE,   order = NULL )"},{"path":"/reference/initialize-McPeaks-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new McPeaks object — initialize,McPeaks-method","text":"mat numeric matrix rows peaks columns metacells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k), projection done using RNA metacells\" metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. cell_to_metacell data frame mapping 'cell_id' 'metacell' (optional). See project_atac_on_mc mc_size_eps_q (optional) quantile MC size (UMIs) scale number UMIs per metacell. \\(egc_ij\\) fraction peak metacell j multiplied mc_size_eps_q quantile metacell sizes. path path object loaded (optional) tad_based whether peak names TAD-based order vector order metacells. provided, metacells ordered order matrix.","code":""},{"path":"/reference/initialize-ScPeaks-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new ScPeaks object — initialize,ScPeaks-method","title":"Construct a new ScPeaks object — initialize,ScPeaks-method","text":"ScPeaks shallow object holding ATAC data cells. Minimally include count matrix peaks cells, PeakIntervals hold coordinates peaks.","code":""},{"path":"/reference/initialize-ScPeaks-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new ScPeaks object — initialize,ScPeaks-method","text":"","code":"# S4 method for ScPeaks initialize(   .Object,   mat,   peaks,   genome,   id = NULL,   description = NULL,   metadata = NULL,   path = \"\",   tad_based = TRUE,   order = NULL )"},{"path":"/reference/initialize-ScPeaks-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new ScPeaks object — initialize,ScPeaks-method","text":"mat numeric matrix rows peaks columns cells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" metadata data frame column called 'cell_id' additional per-cell annotations, name delimited file contains annotations. path path object loaded (optional) tad_based wether peak names TAD-based order order cells. provided, order cells matrix used.","code":""},{"path":"/reference/mcATAC-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcATAC: Metacell analysis for scATAC data — mcATAC-package","title":"mcATAC: Metacell analysis for scATAC data — mcATAC-package","text":"Metacell analysis scATAC data","code":""},{"path":[]},{"path":"/reference/mcATAC-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcATAC: Metacell analysis for scATAC data — mcATAC-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Yonatan Shapira yonatan.shapira@weizmann.ac.il","code":""},{"path":"/reference/mc_hclust_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical clustering of metacells using RNA markers — mc_hclust_rna","title":"Hierarchical clustering of metacells using RNA markers — mc_hclust_rna","text":"create 'hclust' object using RNA marker matrix. force_cell_type TRUE atac_mc@metadata field named \"cell_type\" clustering done","code":""},{"path":"/reference/mc_hclust_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical clustering of metacells using RNA markers — mc_hclust_rna","text":"","code":"mc_hclust_rna(   atac_mc,   markers = NULL,   force_cell_type = TRUE,   rm_zeros = TRUE,   epsilon = 0.00001,   ... )"},{"path":"/reference/mc_hclust_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical clustering of metacells using RNA markers — mc_hclust_rna","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) markers list marker genes. NULL - function uses get_rna_markers default parameters can overridden using ellipsis .... force_cell_type split cell types ordering metacells. Default: TRUE rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression ... Arguments passed get_rna_markers n_genes maximal number genes return. Default: 100 minimal_max_log_fraction take genes least one value (log fraction units - normalized egc) threshold minimal_relative_log_fraction take genes least one value relative log fraction (mc_fp) value fold_change_reg regularization factor fold change calculation (fold_change changed fold_change = fold_change + fold_change_reg) genes list genes match. Default (NULL): genes","code":""},{"path":"/reference/mc_hclust_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical clustering of metacells using RNA markers — mc_hclust_rna","text":"'hclust' object hierarchical clustering metacells. Note order metacells within 'hclust' object necessarily order metacells input metacells object. Use 'labels' slot order infer (see examples).","code":""},{"path":"/reference/mc_hclust_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical clustering of metacells using RNA markers — mc_hclust_rna","text":"","code":"if (FALSE) { mat <- get_rna_marker_matrix(atac_mc) hc <- mc_hclust_rna(atac_mc) mat <- mat[, hc$labels[hc$order], drop = FALSE] gene_ord <- order(apply(mat, 1, which.max)) mat <- mat[gene_ord, , drop = FALSE] plot_rna_markers_mat(mat, atac_mc@metadata, atac_mc@metadata, col_names = F) }"},{"path":"/reference/mc_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Order the metacells in an MC object — mc_order","title":"Order the metacells in an MC object — mc_order","text":"Order metacells MC object","code":""},{"path":"/reference/mc_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order the metacells in an MC object — mc_order","text":"","code":"mc_order(obj, order)"},{"path":"/reference/mc_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order the metacells in an MC object — mc_order","text":"obj McPeaks McTracks object order vector integers order metacells","code":""},{"path":"/reference/mc_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order the metacells in an MC object — mc_order","text":"","code":"if (FALSE) { atac_mc <- mc_order(atac_mc, rev(1:length(atac_mc@metacells))) }"},{"path":"/reference/mc_order_by_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Order metacells by RNA marker clustering — mc_order_by_rna","title":"Order metacells by RNA marker clustering — mc_order_by_rna","text":"order metacells using RNA marker clustering. See get_rna_marker_matrix information. force_cell_type TRUE atac_mc@metadata field named \"cell_type\", columns ordered within cell type.","code":""},{"path":"/reference/mc_order_by_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order metacells by RNA marker clustering — mc_order_by_rna","text":"","code":"mc_order_by_rna(   atac_mc,   markers = NULL,   force_cell_type = TRUE,   rm_zeros = TRUE,   epsilon = 0.00001,   ... )"},{"path":"/reference/mc_order_by_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order metacells by RNA marker clustering — mc_order_by_rna","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) markers list marker genes. NULL - function uses get_rna_markers default parameters can overridden using ellipsis .... force_cell_type split cell types ordering metacells. Default: TRUE rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression ... Arguments passed get_rna_marker_matrix","code":""},{"path":"/reference/mcc_extract_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract McCounts to a tidy data frame — mcc_extract_to_df","title":"Extract McCounts to a tidy data frame — mcc_extract_to_df","text":"Extract McCounts tidy data frame","code":""},{"path":"/reference/mcc_extract_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract McCounts to a tidy data frame — mcc_extract_to_df","text":"","code":"mcc_extract_to_df(mc_counts, metacells = NULL)"},{"path":"/reference/mcc_extract_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract McCounts to a tidy data frame — mcc_extract_to_df","text":"mc_counts McCounts object metacells metacells extract.","code":""},{"path":"/reference/mcc_extract_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract McCounts to a tidy data frame — mcc_extract_to_df","text":"intervals set (tibble) additional \"metacell\" \"value\" columns","code":""},{"path":"/reference/mcc_extract_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract McCounts to a tidy data frame — mcc_extract_to_df","text":"","code":"if (FALSE) { df <- mcc_extract_to_df(mc_counts, c(\"1\", \"2\")) }"},{"path":"/reference/mcc_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the total coverage of each non-zero coordinate in an McCounts object — mcc_marginal","title":"Return the total coverage of each non-zero coordinate in an McCounts object — mcc_marginal","text":"Return total coverage non-zero coordinate McCounts object","code":""},{"path":"/reference/mcc_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the total coverage of each non-zero coordinate in an McCounts object — mcc_marginal","text":"","code":"mcc_marginal(mc_counts, metacells = NULL)"},{"path":"/reference/mcc_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the total coverage of each non-zero coordinate in an McCounts object — mcc_marginal","text":"mc_counts McCounts object metacells names metacells include. Default: metacells.","code":""},{"path":"/reference/mcc_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the total coverage of each non-zero coordinate in an McCounts object — mcc_marginal","text":"intervals set additional column called \"cov\" total coverage coordinate","code":""},{"path":"/reference/mcc_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the total coverage of each non-zero coordinate in an McCounts object — mcc_marginal","text":"","code":"if (FALSE) { mc_counts <- mcc_read(\"pbmc_reads_mc\") mc_mars <- mcc_marginal(mc_counts) }"},{"path":"/reference/mcc_metacell_total_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the total coverage of each metacell in an McCounts object — mcc_metacell_total_cov","title":"Return the total coverage of each metacell in an McCounts object — mcc_metacell_total_cov","text":"Return total coverage metacell McCounts object","code":""},{"path":"/reference/mcc_metacell_total_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the total coverage of each metacell in an McCounts object — mcc_metacell_total_cov","text":"","code":"mcc_metacell_total_cov(mc_counts, metacells = NULL)"},{"path":"/reference/mcc_metacell_total_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the total coverage of each metacell in an McCounts object — mcc_metacell_total_cov","text":"mc_counts McCounts object metacells names metacells include. Default: metacells.","code":""},{"path":"/reference/mcc_metacell_total_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the total coverage of each metacell in an McCounts object — mcc_metacell_total_cov","text":"named vector total coverage metacell","code":""},{"path":"/reference/mcc_metacell_total_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the total coverage of each metacell in an McCounts object — mcc_metacell_total_cov","text":"","code":"if (FALSE) { mc_counts <- mcc_read(\"pbmc_reads_mc\") mc_covs <- mcc_cov(mc_counts) }"},{"path":"/reference/mcc_normalize_metacells.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize each metacell in a McCounts object by its total counts — mcc_normalize_metacells","title":"Normalize each metacell in a McCounts object by its total counts — mcc_normalize_metacells","text":"Normalize metacell McCounts object total counts","code":""},{"path":"/reference/mcc_normalize_metacells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize each metacell in a McCounts object by its total counts — mcc_normalize_metacells","text":"","code":"mcc_normalize_metacells(mc_counts, metacells = NULL)"},{"path":"/reference/mcc_normalize_metacells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize each metacell in a McCounts object by its total counts — mcc_normalize_metacells","text":"mc_counts McCounts object metacells metacells normalize. Default: metacells.","code":""},{"path":"/reference/mcc_normalize_metacells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize each metacell in a McCounts object by its total counts — mcc_normalize_metacells","text":"McCounts object metacells normalized","code":""},{"path":"/reference/mcc_normalize_metacells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize each metacell in a McCounts object by its total counts — mcc_normalize_metacells","text":"","code":"if (FALSE) { mc_counts <- mcc_read(\"pbmc_reads_mc\") mc_counts_norm <- mcc_normalize(mc_counts) }"},{"path":"/reference/mcc_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an McCounts object from a directory — mcc_read","title":"Read an McCounts object from a directory — mcc_read","text":"Read McCounts object directory","code":""},{"path":"/reference/mcc_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an McCounts object from a directory — mcc_read","text":"","code":"mcc_read(path, id = NULL, description = NULL, verbose = TRUE)"},{"path":"/reference/mcc_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an McCounts object from a directory — mcc_read","text":"path path directory containing object (created write_sc_counts_from_bam) id identifier object (optional) description description object (optional) verbose print success message (default: TRUE)","code":""},{"path":"/reference/mcc_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an McCounts object from a directory — mcc_read","text":"McCounts object","code":""},{"path":"/reference/mcc_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an McCounts object from a directory — mcc_read","text":"","code":"if (FALSE) { mc_counts <- mcc_read(\"pbmc_reads_mc\") }"},{"path":"/reference/mcc_to_marginal_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a track with smoothed marginal counts from a McCounts object — mcc_to_marginal_track","title":"Create a track with smoothed marginal counts from a McCounts object — mcc_to_marginal_track","text":"Create track smoothed marginal counts McCounts object","code":""},{"path":"/reference/mcc_to_marginal_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a track with smoothed marginal counts from a McCounts object — mcc_to_marginal_track","text":"","code":"mcc_to_marginal_track(   mc_counts,   track,   metacells = NULL,   resolution = 10,   window_size = 100,   overwrite = FALSE )"},{"path":"/reference/mcc_to_marginal_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a track with smoothed marginal counts from a McCounts object — mcc_to_marginal_track","text":"mc_counts McCounts object track name track create. metacells metacells create track. NULL, metacells used. resolution resolution track (default: 20bp) window_size size window used smooth counts. counts position smoothed sum counts - window_size, + window_size. NULL - counts smoothed. overwrite Whether overwrite existing tracks.","code":""},{"path":"/reference/mcc_to_marginal_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a track with smoothed marginal counts from a McCounts object — mcc_to_marginal_track","text":"None.","code":""},{"path":"/reference/mcc_to_marginal_track.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a track with smoothed marginal counts from a McCounts object — mcc_to_marginal_track","text":"","code":"if (FALSE) { mcc_to_marginal_track(mc_counts, \"pbmc_mc.marginal\") }"},{"path":"/reference/mcc_to_mcatac.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an McPeaks object from an McCounts object — mcc_to_mcatac","title":"Create an McPeaks object from an McCounts object — mcc_to_mcatac","text":"given McCounts object peaks, summarise counts peaks return McPeaks object","code":""},{"path":"/reference/mcc_to_mcatac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an McPeaks object from an McCounts object — mcc_to_mcatac","text":"","code":"mcc_to_mcatac(   mc_counts,   peaks,   metacells = NULL,   metadata = NULL,   mc_size_eps_q = 0.1 )"},{"path":"/reference/mcc_to_mcatac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an McPeaks object from an McCounts object — mcc_to_mcatac","text":"mc_counts McCounts object peaks data frame peak intervals (chrom, start, end) column called \"peak_name\" metacells names metacells include. Default: metacells. metadata (optional) per-metacell metadata. data frame column called 'metacell' additional metacell annotations. mc_size_eps_q (optional) quantile MC size (UMIs) scale number UMIs per metacell. \\(egc_ij\\) fraction peak metacell j multiplied mc_size_eps_q quantile metacell sizes.","code":""},{"path":"/reference/mcc_to_mcatac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an McPeaks object from an McCounts object — mcc_to_mcatac","text":"McPeaks object","code":""},{"path":"/reference/mcc_to_mcatac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an McPeaks object from an McCounts object — mcc_to_mcatac","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") mc_counts <- mcc_read(\"pbmc_reads_mc\") atac_mc <- mcc_to_mcatac(mc_counts, atac_sc@peaks) }"},{"path":"/reference/mcc_to_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a misha track for each metacell in a McCounts object — mcc_to_tracks","title":"Create a misha track for each metacell in a McCounts object — mcc_to_tracks","text":"create sparse track form \"track_prefix.mcmetacell\" metacell McCounts object. counts smoothed running sum window size window_size * 2 + 1 (default: 201). resulted track stored 'dense' format resolution resolution bp (default: 10).  track track attribute named \"total_cov\" total coverage metacell.  create_marginal_track TRUE (default), additional track total counts metacells created.  Counts can normalized total counts metacell setting normalize = TRUE.","code":""},{"path":"/reference/mcc_to_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a misha track for each metacell in a McCounts object — mcc_to_tracks","text":"","code":"mcc_to_tracks(   mc_counts,   track_prefix,   metacells = NULL,   overwrite = FALSE,   resolution = 20,   window_size = NULL,   create_marginal_track = TRUE,   normalize = FALSE )"},{"path":"/reference/mcc_to_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a misha track for each metacell in a McCounts object — mcc_to_tracks","text":"mc_counts McCounts object track_prefix prefix tracks create (.e. misha directory). Track names form \"track_prefix.mcmetacell\" metacells metacells create tracks. NULL, metacells used. overwrite Whether overwrite existing tracks. resolution resolution track (default: 20bp) window_size size window used smooth counts. counts position smoothed sum counts - window_size, + window_size. NULL - counts smoothed. create_marginal_track Create track total counts metacells. track named \"track_prefix.marginal\" normalize Normalize metacell sum counts.","code":""},{"path":"/reference/mcc_to_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a misha track for each metacell in a McCounts object — mcc_to_tracks","text":"McTracks object new tracks.","code":""},{"path":"/reference/mcc_to_tracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a misha track for each metacell in a McCounts object — mcc_to_tracks","text":"","code":"if (FALSE) { mcc_to_tracks(mc_counts, \"pbmc_mc\") }"},{"path":"/reference/mct_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an McTracks object — mct_create","title":"Create an McTracks object — mct_create","text":"Create McTracks object either list tracks (tracks parameter) track prefix (track_prefix parameter). tracks assumed form \".+_mcmetacell_number\", case, metacells parameter can used specify metacell number track.","code":""},{"path":"/reference/mct_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an McTracks object — mct_create","text":"","code":"mct_create(   genome,   tracks = NULL,   track_prefix = NULL,   metacells = NULL,   marginal_track = NULL,   id = NULL,   description = NULL,   path = NULL,   metadata = NULL,   resolution = NULL,   window_size = resolution/2,   order = NULL )"},{"path":"/reference/mct_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an McTracks object — mct_create","text":"genome genome assembly tracks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" tracks vector tracks include object. track_prefix prefix tracks (instead explicit track names tracks parameter). Ignored tracks NULL. track named \"track_prefix.marginal\" exists, used marginal track. metacells vector metacells include object (optional). provided, metacells inferred track names using pattern \"track_prefix.mc\\d*$\". case, tracks ordered according metacell number. marginal_track track use marginal track (optional). provided, track_prefix given, track named \"track_prefix.marginal\" used exists. id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" path path directory containing raw data. Usually inherited counts object. metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. resolution resolution tracks. window_size size window used smooth counts track. smoothing done - equal resolution / 2. order order tracks object. provided, tracks ordered according metacell number.","code":""},{"path":"/reference/mct_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an McTracks object — mct_create","text":"McTracks object.","code":""},{"path":"/reference/mct_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an McTracks object — mct_create","text":"","code":"if (FALSE) { mct_create(track_prefix = \"pbmc_mc\", genome = \"hg38\", id = \"pbmc\", description = \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\") }"},{"path":"/reference/mct_diff_access_on_hc.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a mask matrix with differential cluster accessibility (DCA) — mct_diff_access_on_hc","title":"Return a mask matrix with differential cluster accessibility (DCA) — mct_diff_access_on_hc","text":"function detects differential cluster accessibility (DCA) sub-tree given hclust object hierarchical clustering metacells.  coordinate (column) matrix, function computes log fold change subtree rest tree, returns mask matrix indicating whether fold change threshold(s).  order avoid long DCAs, functions limits size peak/trough fraction metacells (sz_frac_for_peak).","code":""},{"path":"/reference/mct_diff_access_on_hc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a mask matrix with differential cluster accessibility (DCA) — mct_diff_access_on_hc","text":"","code":"mct_diff_access_on_hc(   mat,   hc,   sz_frac_for_peak = 0.25,   u_reg = 4,   peak_lf_thresh1 = 1.2,   peak_lf_thresh2 = 2,   trough_lf_thresh1 = -1,   trough_lf_thresh2 = -2 )"},{"path":"/reference/mct_diff_access_on_hc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a mask matrix with differential cluster accessibility (DCA) — mct_diff_access_on_hc","text":"mat matrix rows coordinates columns metacells hc hclust object order metacells sz_frac_for_peak maximal fraction metacells peak trough. Default 0.25. u_reg regularization factor peak_lf_thresh1, peak_lf_thresh2, trough_lf_thresh1, trough_lf_thresh2 thresholds log fold change peaks troughs","code":""},{"path":"/reference/mct_diff_access_on_hc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a mask matrix with differential cluster accessibility (DCA) — mct_diff_access_on_hc","text":"matrix dimensions mat, mask differential cluster accessibility (DCA). value 1 means log fold change peak_lf_thresh1, value 2 means log fold change peak_lf_thresh2. -1 -2 troughs.","code":""},{"path":"/reference/mct_get_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an ATAC matrix from a McTracks object — mct_get_mat","title":"Get an ATAC matrix from a McTracks object — mct_get_mat","text":"Retruns matrix genomic coordinates metacells. matrix cached memory, subsequent calls function require extraction reads underlying tracks.  downsample TRUE, downsampling done first setting coverage goal, reads within region subsampled relative ratio metacell coverage goal, .e. N_i * C_i/goal) C_i total number reads metacell , N_i total numbers reads region metacell , goal coverage goal.  example, goal 2M reads, metacell total 1M reads 50K reads within region, reads within region subsampled 50K * 1M/2M = 25K (50%). Metacells less goal removed.","code":""},{"path":"/reference/mct_get_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an ATAC matrix from a McTracks object — mct_get_mat","text":"","code":"mct_get_mat(   mct,   intervals,   downsample = FALSE,   downsample_n = NULL,   force = FALSE,   seed = NULL )"},{"path":"/reference/mct_get_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an ATAC matrix from a McTracks object — mct_get_mat","text":"mct McTrack object intervals intervals set single interval. Note start end coordinates divisible resolution, region extended next resolution interval. downsample return downsampled matrix. See description. downsample_n total coverage goal. See description. Default: lower 5th percentile total coverage) force force computation matrix. FALSE, matrix retrieved cache exists. seed random seed downsampling.","code":""},{"path":"/reference/mct_get_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an ATAC matrix from a McTracks object — mct_get_mat","text":"matrix rows genomic coordinates resolution mct@resolution columns metacells mct@metacells","code":""},{"path":"/reference/mct_ls_cached_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"List the cached regions of an McTracks object — mct_ls_cached_regions","title":"List the cached regions of an McTracks object — mct_ls_cached_regions","text":"List cached regions McTracks object","code":""},{"path":"/reference/mct_ls_cached_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the cached regions of an McTracks object — mct_ls_cached_regions","text":"","code":"mct_ls_cached_regions(mct)"},{"path":"/reference/mct_ls_cached_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the cached regions of an McTracks object — mct_ls_cached_regions","text":"mct McTracks object","code":""},{"path":"/reference/mct_ls_cached_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the cached regions of an McTracks object — mct_ls_cached_regions","text":"intervals set additional \"downsample\" \"downsample_n\" fields, representing intervals matrices currently cached.","code":""},{"path":"/reference/mct_ls_cached_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the cached regions of an McTracks object — mct_ls_cached_regions","text":"","code":"if (FALSE) { mct_ls_cached_regions(mct) }"},{"path":"/reference/mct_plot_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a genomic region — mct_plot_region","title":"Plot a genomic region — mct_plot_region","text":"Plot genomic region","code":""},{"path":"/reference/mct_plot_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a genomic region — mct_plot_region","text":"","code":"mct_plot_region(   mct,   intervals,   detect_dca = FALSE,   downsample = TRUE,   downsample_n = NULL,   metacells = NULL,   colors = c(\"white\", \"gray\", \"black\", \"gold\"),   color_breaks = c(0, 6, 12, 18, 24),   hc = NULL,   force_cell_type = TRUE,   gene_annot = FALSE,   n_smooth = 10,   n_pixels = 1000,   ... )"},{"path":"/reference/mct_plot_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a genomic region — mct_plot_region","text":"mct McTracks object. intervals intervals set genomic region plot (data frame single line). Note start end coordinates divisible resolution, region extended next resolution interval. detect_dca mark regions differential cluster accessibility (DCA) downsample return downsampled matrix. See description. downsample_n total coverage goal. See description. Default: lower 5th percentile total coverage) metacells vector metacells plot. NULL, metacells plotted. colors color pallette ATAC signal color_breaks vector breaks color palette hc hclust object use hierarchical clustering metacells detect_dcs=TRUE. NULL, metacells clustered using mc_hclust_rna. force_cell_type split cell types ordering metacells. Default: TRUE gene_annot whether add gene annotations; annotations rely existence annots/refGene.txt file genome's misha directory, existence intervals set called \"intervs.global.tss\" genome's misha directory. (optional) n_smooth number genomic bins use smoothing signal. Signal smoothed rolling sum metacell (optional). Default 20. n_pixels number pixels plot. DCA regions extended ceiling(2 * nrow(mat) / n_pixels) (optional). ... Arguments passed mct_diff_access_on_hc mat matrix rows coordinates columns metacells sz_frac_for_peak maximal fraction metacells peak trough. Default 0.25. peak_lf_thresh1,peak_lf_thresh2,trough_lf_thresh1,trough_lf_thresh2 thresholds log fold change peaks troughs u_reg regularization factor","code":""},{"path":"/reference/mct_plot_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a genomic region — mct_plot_region","text":"None. plot displayed new device.","code":""},{"path":"/reference/mct_plot_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a genomic region — mct_plot_region","text":"","code":"if (FALSE) { intervs <- gintervals(5, 54974252, 55074253) mct_plot_region(mct, intervs, gene_annot = TRUE) mct_plot_region(mct, intervs, detect_dca = TRUE, gene_annot = TRUE)  get_gene_promoter(\"GZMK\", downstream = 1e5, upstream = 1e5, unify = TRUE) %>%     mct_plot_region(mct, intervs, detect_dca = TRUE, gene_annot = TRUE)  intervs %>%     gintervals.zoom_in(4) %>%     mct_plot_region(mct, ., detect_dca = TRUE, gene_annot = TRUE) intervs %>%     gintervals.zoom_out(2) %>%     mct_plot_region(mct, ., detect_dca = TRUE, gene_annot = TRUE) intervs %>%     gintervals.shift_left(1e5) %>%     mct_plot_region(mct, ., detect_dca = TRUE, gene_annot = TRUE) intervs %>%     gintervals.shift_right(1e5) %>%     mct_plot_region(mct, ., detect_dca = TRUE, gene_annot = TRUE) }"},{"path":"/reference/name_enhancers.html","id":null,"dir":"Reference","previous_headings":"","what":"Name ATAC peaks from TAD names — name_enhancers","title":"Name ATAC peaks from TAD names — name_enhancers","text":"peaks named following pattern \"TAD_namedistance_from_TAD_start_in_kbp\". TAD naming scheme see: https://github.com/tanaylab/tadbris.  two peaks within kbp , appended number name, according order genome (except first peak), .e.: \"TAD_namedistance_from_TAD_start_in_kbp.number\". See also make.unique.","code":""},{"path":"/reference/name_enhancers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name ATAC peaks from TAD names — name_enhancers","text":"","code":"name_enhancers(atac, tad_names = gintervals.load(\"intervs.global.tad_names\"))"},{"path":"/reference/name_enhancers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name ATAC peaks from TAD names — name_enhancers","text":"atac McPeaks ScPeaks PeakIntervals object misha intervals set","code":""},{"path":"/reference/name_enhancers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name ATAC peaks from TAD names — name_enhancers","text":"original atac object, field peak_name replaced new TAD-referenced name","code":""},{"path":"/reference/name_enhancers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name ATAC peaks from TAD names — name_enhancers","text":"","code":"if (FALSE) { atac_mc <- name_enhancers(atac_mc) my_peaks <- name_enhancers(my_peaks) }"},{"path":"/reference/order_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Order metacell tracks by metacell number — order_tracks","title":"Order metacell tracks by metacell number — order_tracks","text":"Order metacell tracks metacell number","code":""},{"path":"/reference/order_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order metacell tracks by metacell number — order_tracks","text":"","code":"order_tracks(tracks, track_name_prefix = NULL)"},{"path":"/reference/order_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order metacell tracks by metacell number — order_tracks","text":"tracks tracks order track_name_prefix prefix string remove extracting metacell numbers","code":""},{"path":"/reference/order_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order metacell tracks by metacell number — order_tracks","text":"tracks ordered metacell number","code":""},{"path":"/reference/order_tracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order metacell tracks by metacell number — order_tracks","text":"","code":"tracks_ordered <- order_tracks(tracks) #> Error in stri_extract_all_regex(string, pattern, simplify = simplify,     omit_no_match = TRUE, opts_regex = opts(pattern)): object 'tracks' not found"},{"path":"/reference/peak_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the names of PeakIntervals — peak_names","title":"Return the names of PeakIntervals — peak_names","text":"Return names PeakIntervals","code":""},{"path":"/reference/peak_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the names of PeakIntervals — peak_names","text":"","code":"peak_names(peaks, tad_based = TRUE, promoters = FALSE)"},{"path":"/reference/peak_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the names of PeakIntervals — peak_names","text":"peaks PeakIntervals object misha intervals tad_based whether name peaks based TADs. intervals set named \"intervs.global.tad_names\" exists - function return coordinate based names. promoters peaks promoters? true, peak names (gene names) returned.","code":""},{"path":"/reference/peak_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the names of PeakIntervals — peak_names","text":"field called 'peak_name' exists peaks, tad based peak name tad_based=TRUE coordinates form \"chrom:start-end\" otherwise.","code":""},{"path":"/reference/peak_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the names of PeakIntervals — peak_names","text":"","code":"if (FALSE) { misha.ext::gset_genome(\"hg38\") head(peak_names(atac_sc@peaks)) # return the \"peak_name\" field head(peak_names(atac_sc@peaks[, -4])) # return tad based peak names head(peak_names(atac_sc@peaks[, -4], tad_based = FALSE)) # return coordinate based peak names }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"Plot correlation matrix ATAC metacells","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"","code":"plot_atac_atac_cor(atac_mc, sp_f = TRUE)"},{"path":"/reference/plot_atac_atac_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"atac_mc McPeaks object sp_f whether use Spearman correlation (default) Pearson","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"p pheatmap ATAC metacell correlations","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"","code":"if (FALSE) { p1 <- plot_atac_atac_cor(my_atac_mc) p2 <- plot_atac_atac_cor(my_atac_mc, sp_f = F) }"},{"path":"/reference/plot_atac_peak_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"Plot normalized accessibility peaks metacells, ordered clustering","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"","code":"plot_atac_peak_map(   atac_mc,   atac_mc_clust = NULL,   peak_clust = NULL,   peak_annotation = NULL,   filename = NULL,   dev = png,   main = atac_mc@id,   colors = colorRampPalette(c(\"blue4\", \"white\", \"red4\"))(100),   ... )"},{"path":"/reference/plot_atac_peak_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"atac_mc McPeaks object atac_mc_clust output gen_atac_mc_clust (meaningful visuals, make sure ordered cluster) peak_clust output gen_atac_peak_clust clustering peaks (meaningful visuals, make sure ordered cluster) peak_annotation (optional) list named vector dataframe conforming pheatmap annotation_colors annotation_row conventions filename (optional) path filename save figure; unspecified, figure saved dev (optional; default - png) graphical device save figure colors (optional) colorRampPalette vector colors scaling colors heatmap ... Arguments passed save_pheatmap width width device. height height device. res nominal resolution ppi recorded     bitmap file, positive integer.  Also used units     default, convert points pixels.","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"pheatmap figure.","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"","code":"if (FALSE) { peak_clust <- gen_atac_peak_clust(my_mcatac, 16) plot_atac_peak_map(my_mcatac, order(my_mcatac@metadata$cell_type), order(peak_clust), \"./my_figures/my_mcatac_heatmap.png\")  ## Peak annotation example is_dyn <- setNames(as.numeric(rownames(my_mcatac@mat) %in% my_mcatac_dynamic_peaks_only@peaks$peak_name), rownames(my_mcatac@mat)) pa1 <- list(\"is_dyn\" = setNames(c(\"black\", \"red\"), c(0, 1))) pa2 <- tibble::column_to_rownames(enframe(is_dyn, name = \"peak_name\", value = \"is_dyn\"), \"peak_name\") pa <- list(pa1, pa2) plot_atac_peak_map(my_mcatac, atac_mc_clust = order(my_mcatac@metadata$cell_type), peak_annotation = pa) }"},{"path":"/reference/plot_atac_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"Plot scatter gene expression vs atac profile","code":""},{"path":"/reference/plot_atac_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"","code":"plot_atac_rna(   atac_mc,   gene,   atac_promoter = gene,   mc_rna = NULL,   peak = NULL,   max_dist_to_promoter_peak = 500,   normalize_atac = TRUE,   eps_rna = 0.00001,   tss_intervals = \"intervs.global.tss\",   plot_object_id = TRUE )"},{"path":"/reference/plot_atac_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"atac_mc McPeaks object gene name gene plot atac_promoter name promoter plot. default rna gene gene. mc_rna metacell1 'mc' object metacells metacell UMI matrix (matrix row gene column metacell). Can NULL atac_mc already contains gene expression data (added add_mc_rna). peak name peak plot. NULL - promoter atac_promoter shown. can get peak names atac@peaks$peak_name max_dist_to_promoter_peak far gene's TSS search promoter-proximal peaks. Default: 500 normalize_atac whether use normalized atac profiles (default: TRUE) eps_rna added regularization calculating log expression (Default: 1e-5). Promoter ATAC signal observed empirically often linearly correlated log gene expression. tss_intervals name intervals set containing TSSs plot_object_id plot object id atac_mc object bottom left corner plot (default: TRUE)","code":""},{"path":"/reference/plot_atac_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"ggplot object scatter plot","code":""},{"path":"/reference/plot_atac_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"","code":"if (FALSE) { p1 <- plot_atac_rna(atac_mc = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\")  p2 <- plot_atac_rna(atac_mc = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\", atac_promoter = \"CD8\")  # Plot gene vs some peak of interest peak <- atac_mc@peaks[1]$peak_name p3 <- plot_atac_rna(atac_mc = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\", peak = peak) }"},{"path":"/reference/plot_atac_rna_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"use peak gene annotations match RNA metacells ATAC metacells plot cross-correlation matrix.","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"","code":"plot_atac_rna_cor(atac_mc, rna_mat, gene_field = NULL, tss_dist = 500)"},{"path":"/reference/plot_atac_rna_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"atac_mc McPeaks object rna_mat RNA metacell count matrix, metacells columns genes rows gene_field (optional) either closest_tss closest_exon_gene -- field names atac_mc@peaks contain gene names. NULL - peaks transformed promoter peaks gene names taken promoter gene names. tss_dist (optional) maximal absolute distance TSS considered promoter peak","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"pheatmap object","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"","code":"if (FALSE) { # Plot correlation of ATAC promoter peaks vs. log2 gene expression fraction (regularized) arc_prom <- plot_atac_rna_cor(atac_mc = atac_mc, rna_mat = log2(atac_mc@rna_egc + 1e-05))  # Plot correlation of all available ATAC peaks (whose nearest TSS is of an expressed gene) vs. log2 gene expression fraction (regularized) of that gene arc_tss <- plot_atac_rna_cor(atac_mc = atac_mc, rna_mat = log2(atac_mc@rna_egc + 1e-05), gene_field = \"closest_tss\")  # Plot correlation of all available ATAC peaks (whose nearest exon is of an expressed gene) vs. log2 gene expression fraction (regularized) of that gene arc_exon <- plot_atac_rna_cor(atac_mc = atac_mc, rna_mat = log2(atac_mc@rna_egc + 1e-05), gene_field = \"closest_exon_gene\") }"},{"path":"/reference/plot_atac_rna_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"plot rna marker heatmap (right) together heatmap fold change ATAC peaks correlated marker gene (left, using get_genes_atac_fp).","code":""},{"path":"/reference/plot_atac_rna_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"","code":"plot_atac_rna_markers(   atac_mc,   n_genes = 100,   force_cell_type = TRUE,   plot_legend = TRUE,   row_names = FALSE,   ... )"},{"path":"/reference/plot_atac_rna_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) n_genes maximal number genes return. Default: 100 force_cell_type split cell types ordering metacells. Default: TRUE plot_legend TRUE plot legend cell types (default: TRUE) row_names show row names heatmaps. Note space plot takes might become uneven due genes / peaks longer names. ... Arguments passed plot_rna_markers_mat mat heatmap marker genes fold change metacells (e.g. output get_rna_marker_matrix) metacell_types data frame field called \"metacell\" field called \"cell_type\" (optional) cell_type_colors data frame field called \"cell_type\" field called \"color\" (optional) low_color color low fold change high_color color high fold change mid_color color mid fold change midpoint midpoint color scale (default: 0) min_lfp minimum log2 fold change (default: -3). Value set min_lfp. max_lfp maximum log2 fold change (default: 3). Value set max_lfp. top_cell_type_bar add cell type annotation also top heatmap (default: TRUE) gene_colors named list color marker gene (optional) col_names show column names (metacells) interleave show gene names (rows) interleaved annotation_title title cell type annotation. Default: \"Cell type\" top_annotation_title title top cell type annotation. Default: \"Cell type\" title title plot plot_right Whether put Y-axis labels right side heatmap (well left hand side) col_names_orient Orientation X-axis label","code":""},{"path":"/reference/plot_atac_rna_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"ggplot object heatmap RNA markers (right) heatmap ATAC peaks (left). ATAC matrix ordered RNA matrix. ggplot object heatmaps","code":""},{"path":"/reference/plot_atac_rna_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"","code":"if (FALSE) { plot_atac_rna_markers(atac_mc) plot_atac_rna_markers(atac_mc, force_cell_type = FALSE) plot_atac_rna_markers(atac_mc, n_genes = 200) }"},{"path":"/reference/plot_marginal_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marginal coverage of an interval — plot_marginal_coverage","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"Plot marginal coverage interval, peaks marked (optionally).","code":""},{"path":"/reference/plot_marginal_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"","code":"plot_marginal_coverage(   marginal_track,   interval,   window_size,   peaks = NULL,   expand = 1000,   show_thresh = TRUE,   quantile_thresh = 0.9,   min_umis = 8,   genome = NULL,   seed = 60427,   thresh = get_quantile_cov_thresh(marginal_track, quantile_thresh, min_umis,     window_size = window_size, genome = genome, seed = seed),   log_scale = TRUE )"},{"path":"/reference/plot_marginal_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"marginal_track Name 'misha' track plot. can create using import_atac_marginal. interval interval plot. window_size Window size expand marginal track values. Use parameter used call_peaks. peaks intervals set peaks mark, e.g. output call_peaks. expand Expand plotting area number bp. quantile_thresh, min_umis paramters needed calculate threshold. See call_peaks. genome Genome name, 'hg19' 'mm10'. NULL - current misha database used. thresh Threshold use. NULL - threshold calculated using get_quantile_cov_thresh. log_scale Use log scale y axis. show_threshold Show coverage threshold dashed line.","code":""},{"path":"/reference/plot_marginal_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"","code":"if (FALSE) { peaks_raw <- call_peaks(\"pbmc_atac.marginal\", split_peaks = FALSE, quantile_thresh = 0.9, min_umis = 8, max_peak_size = 600, genome = \"hg38\") peaks_split <- call_peaks(\"pbmc_atac.marginal\", split_peaks = TRUE, target_size = 500, quantile_thresh = 0.9, min_umis = 8, max_peak_size = 600, genome = \"hg38\") plot_marginal_coverage(\"pbmc_atac.marginal\", interval = peaks_raw[967, ], peaks = peaks_split, expand = 1000, show_thresh = TRUE, quantile_thresh = 0.9, min_umis = 8, genome = \"hg38\")  # cache the threshold in order to plot multiple intervals thresh <- get_quantile_cov_thresh(\"pbmc_atac.marginal\", 0.9, 8, genome = \"hg38\", seed = 60427) plot_marginal_coverage(\"pbmc_atac.marginal\", interval = peaks_raw[967, ], peaks = peaks_split, expand = 1000, show_thresh = TRUE, thresh = thresh, genome = \"hg38\") plot_marginal_coverage(\"pbmc_atac.marginal\", interval = peaks_raw[900, ], peaks = peaks_split, expand = 1000, show_thresh = TRUE, thresh = thresh, genome = \"hg38\") }"},{"path":"/reference/plot_peak_coverage_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the coverage density of the peaks — plot_peak_coverage_density","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"peak, plot scatter peak length vs number UMIs per scale bp.","code":""},{"path":"/reference/plot_peak_coverage_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"","code":"plot_peak_coverage_density(atac, scale = 100, pointsize = 1.5, ...)"},{"path":"/reference/plot_peak_coverage_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"atac ScPeaks McPeaks object scale 'cov_density' field, calculate number UMIs per scale bp (default: 100) pointsize Radius rasterized point. Use 0 single pixels (fastest). ... Arguments passed scattermore::geom_scattermore na.rm Remove NA values, just ggplot2::geom_point(). interpolate Default FALSE, passed grid::rasterGrob(). pixels Vector X Y resolution raster, default c(512,512).","code":""},{"path":"/reference/plot_peak_coverage_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"","code":"if (FALSE) { plot_peak_coverage_density(atac) }"},{"path":"/reference/plot_peak_coverage_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"Plot coverage distribution peaks","code":""},{"path":"/reference/plot_peak_coverage_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"","code":"plot_peak_coverage_distribution(atac)"},{"path":"/reference/plot_peak_coverage_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"atac ScPeaks McPeaks object","code":""},{"path":"/reference/plot_peak_coverage_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"ggplot object distribution peak coverage","code":""},{"path":"/reference/plot_peak_coverage_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"","code":"if (FALSE) { plot_peak_coverage_distribution(atac_sc) }"},{"path":"/reference/plot_peak_length_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of the peak length — plot_peak_length_distribution","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"Plot distribution peak length","code":""},{"path":"/reference/plot_peak_length_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"","code":"plot_peak_length_distribution(atac)"},{"path":"/reference/plot_peak_length_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"atac ScPeaks McPeaks object","code":""},{"path":"/reference/plot_peak_length_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"ggplot object distribution peak length","code":""},{"path":"/reference/plot_peak_length_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"","code":"if (FALSE) { plot_peak_length_distribution(atac_sc) }"},{"path":"/reference/plot_peak_max_cov_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"Plot maximal per-cell coverage distribution peaks","code":""},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"","code":"plot_peak_max_cov_distribution(atac)"},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"atac ScPeaks McPeaks object","code":""},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"ggplot object distribution maximal per-cell coverage peak","code":""},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"","code":"if (FALSE) { plot_peak_max_cov_distribution(atac_sc) }"},{"path":"/reference/plot_region_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a genomic region given a matrix — plot_region_mat","title":"Plot a genomic region given a matrix — plot_region_mat","text":"Plot genomic region given matrix","code":""},{"path":"/reference/plot_region_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a genomic region given a matrix — plot_region_mat","text":"","code":"plot_region_mat(   mat,   mc_colors = NULL,   colors = c(\"white\", \"gray\", \"black\", \"gold\"),   color_breaks = c(0, 6, 12, 18, 24),   intervals = NULL,   resolution = NULL,   dca_mat = NULL,   n_smooth = 10,   n_pixels = 1000,   gene_annot = FALSE )"},{"path":"/reference/plot_region_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a genomic region given a matrix — plot_region_mat","text":"mat matrix rows coordinates columns metacells mc_colors vector colors metacells (optional) colors color pallette ATAC signal color_breaks vector breaks color palette intervals plotted intervals (optional) resolution resolution plotted intervals (optional) dca_mat matrix differential cluster accessibility (DCA) plotted regions (optional). Output mct_diff_access_on_hc. n_smooth number genomic bins use smoothing signal. Signal smoothed rolling sum metacell (optional). Default 20. n_pixels number pixels plot. DCA regions extended ceiling(2 * nrow(mat) / n_pixels) (optional). gene_annot whether add gene annotations; annotations rely existence annots/refGene.txt file genome's misha directory, existence intervals set called \"intervs.global.tss\" genome's misha directory. (optional)","code":""},{"path":"/reference/plot_rna_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of marker genes fold change over metacells given an McPeaks object — plot_rna_markers","title":"Plot a heatmap of marker genes fold change over metacells given an McPeaks object — plot_rna_markers","text":"thin wrapper around plot_rna_markers_mat computes marker matrix uses correct metadata fields McPeaks object.","code":""},{"path":"/reference/plot_rna_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of marker genes fold change over metacells given an McPeaks object — plot_rna_markers","text":"","code":"plot_rna_markers(atac_mc, n_genes = 100, force_cell_type = TRUE, ...)"},{"path":"/reference/plot_rna_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of marker genes fold change over metacells given an McPeaks object — plot_rna_markers","text":"atac_mc McPeaks object RNA expression (using add_mc_rna) n_genes maximal number genes return. Default: 100 force_cell_type split cell types ordering metacells. Default: TRUE ... Arguments passed plot_rna_markers_mat mat heatmap marker genes fold change metacells (e.g. output get_rna_marker_matrix) metacell_types data frame field called \"metacell\" field called \"cell_type\" (optional) cell_type_colors data frame field called \"cell_type\" field called \"color\" (optional) low_color color low fold change high_color color high fold change mid_color color mid fold change midpoint midpoint color scale (default: 0) min_lfp minimum log2 fold change (default: -3). Value set min_lfp. max_lfp maximum log2 fold change (default: 3). Value set max_lfp. plot_legend TRUE plot legend cell types (default: TRUE) top_cell_type_bar add cell type annotation also top heatmap (default: TRUE) gene_colors named list color marker gene (optional) col_names show column names (metacells) interleave show gene names (rows) interleaved annotation_title title cell type annotation. Default: \"Cell type\" top_annotation_title title top cell type annotation. Default: \"Cell type\" title title plot row_names names used Y-axis labels. NULL (defualt) indicates original matrix rownames used. FALSE indicates Y-axis labels displayed. plot_right Whether put Y-axis labels right side heatmap (well left hand side) col_names_orient Orientation X-axis label","code":""},{"path":"/reference/plot_rna_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of marker genes fold change over metacells given an McPeaks object — plot_rna_markers","text":"","code":"if (FALSE) { plot_rna_markers(atac_mc) }"},{"path":"/reference/plot_rna_markers_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"Plot heatmap marker genes fold change metacells","code":""},{"path":"/reference/plot_rna_markers_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"","code":"plot_rna_markers_mat(   mat,   metacell_types = NULL,   cell_type_colors = NULL,   low_color = \"blue\",   high_color = \"red\",   mid_color = \"white\",   midpoint = 0,   min_lfp = -3,   max_lfp = 3,   plot_legend = TRUE,   top_cell_type_bar = TRUE,   gene_colors = NULL,   col_names = FALSE,   row_names = TRUE,   col_names_orient = \"slanted\",   plot_right = TRUE,   interleave = TRUE,   vertial_gridlines = FALSE,   annotation_title = \"Cell type\",   top_annotation_title = \"Cell type\",   title = NULL )"},{"path":"/reference/plot_rna_markers_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"mat heatmap marker genes fold change metacells (e.g. output get_rna_marker_matrix) metacell_types data frame field called \"metacell\" field called \"cell_type\" (optional) cell_type_colors data frame field called \"cell_type\" field called \"color\" (optional) low_color color low fold change high_color color high fold change mid_color color mid fold change midpoint midpoint color scale (default: 0) min_lfp minimum log2 fold change (default: -3). Value set min_lfp. max_lfp maximum log2 fold change (default: 3). Value set max_lfp. plot_legend TRUE plot legend cell types (default: TRUE) top_cell_type_bar add cell type annotation also top heatmap (default: TRUE) gene_colors named list color marker gene (optional) col_names show column names (metacells) row_names names used Y-axis labels. NULL (defualt) indicates original matrix rownames used. FALSE indicates Y-axis labels displayed. col_names_orient Orientation X-axis label plot_right Whether put Y-axis labels right side heatmap (well left hand side) interleave show gene names (rows) interleaved annotation_title title cell type annotation. Default: \"Cell type\" top_annotation_title title top cell type annotation. Default: \"Cell type\" title title plot vertical_gridlines show vertical gridlines","code":""},{"path":"/reference/plot_rna_markers_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"ggplot object heatmap (legend plot_legend TRUE)","code":""},{"path":"/reference/plot_rna_markers_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"","code":"if (FALSE) { m_rna <- get_rna_marker_matrix(atac_mc) plot_rna_markers_mat(m_rna, atac_mc@metadata, atac_mc@metadata, col_names = F) }"},{"path":"/reference/plot_tracks_at_locus.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot metacell tracks around locus — plot_tracks_at_locus","title":"Plot metacell tracks around locus — plot_tracks_at_locus","text":"function plots set tracks certain locus. Tracks can given vector (tracks), retreived using track_regex. intervals plotted can chosen explicitly using parameter intervals. Alternatively, one can specify parameter gene; default, gene body (exons) plotted, can modified using parameters extend (many bp extend side gene features) gene_feature, intervals can centered around TSSs gene (gene_feature = 'tss').  Metacell annotations can added using annotation_row annotation_colors (phetamap-style annotations), can/generated automatically generate_pheatmap_annotation. RNA expression values gene interest can added specifying McPeaks object, atac, RNA metacell object attached (see function add_mc_rna)","code":""},{"path":"/reference/plot_tracks_at_locus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot metacell tracks around locus — plot_tracks_at_locus","text":"","code":"plot_tracks_at_locus(   tracks = NULL,   gene = NULL,   intervals = NULL,   iterator = 50,   extend = 0,   gene_feature = \"exon\",   track_regex = NULL,   chromosomes = gintervals.all() %>% filter(!grepl(\"_\", chrom)) %>% pull(chrom),   atac = NULL,   order_rows = FALSE,   row_order = NULL,   log_transform = TRUE,   gene_annot = TRUE,   name = NULL,   rna_vals = NULL,   annotation_row = NULL,   annotation_col = NULL,   annotation_colors = NULL,   silent = FALSE,   scale_bar_length = NULL,   rna_legc_eps = 0.00001,   smooth_mcs = 1,   smooth_bins = 1,   colors = c(\"white\", \"lightblue\", \"blue\", \"darkred\", \"yellow\"),   color_breaks = NULL,   use_raster = FALSE )"},{"path":"/reference/plot_tracks_at_locus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot metacell tracks around locus — plot_tracks_at_locus","text":"tracks (optional) tracks plot; specified order_rows row_order, ordered metacell number gene (optional) gene plot around; gene found whole, partial matches searched intervals (optional) genomic interval plot iterator (optional; default - 50) misha iterator, determines resolution data extracted plotted extend (optional; default - 0) much extend intervals side gene_feature (optional; default - \"exon\") whether use exon tss features gene center plot track_regex (optional) regular expression matching tracks plot chromosomes (optional) set chromosomes use; mainly used filter contigs default atac (optional) McPeaks object extract peaks locus, possibly  RNA expression values (RNA metacell object attached) order_rows whether order rows cell_type annotation row_order explicit ordering rows/tracks use log_transform transfrom data log2(1 + x). Default: TRUE gene_annot (optional) whether add gene annotations; annotations rely existence annots/refGene.txt file genome's misha directory name (optional; default - 'ATAC signal') name give legend heatmap rna_vals (optional) RNA expression values plot (overrides RNA expression extracted atac) annotation_row pheatmap-format annotation annotation_col pheatmap-format annotation annotation_colors pheatmap-format annotation silent (optional) whether print generated plot rna_legc_eps (optional) regularization value add mc_rna@e_gc calculating log smooth_mcs number mc's smoothign window (Default 1) smooth_bins number genomic bins smoothing window (default 1) colors (optional) vector colors shades heatmap generated color_breaks (optional) defining absolute breaks colors. NULL - determined uniform distribution clipping 99 percentile smoothed value distribution. use_raster Whether render heatmap body raster image. helps reduce file size matrix huge. number rows columns 2000, default turned . Note cell_fun set, use_raster enforced FALSE.","code":""},{"path":"/reference/plot_tracks_at_locus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot metacell tracks around locus — plot_tracks_at_locus","text":"ComplexHeatmap figure","code":""},{"path":"/reference/plot_tracks_at_locus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot metacell tracks around locus — plot_tracks_at_locus","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\", id = \"PBMC\", description = \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\") data(cell_to_metacell_pbmc_example) atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) data(mcmd) atac_mc <- add_mc_metadata(atac_mc, mcmd) data(rna_mc_mat) atac_mc <- add_mc_rna(atac_mc, rna_mc_mat) pbmc_tracks <- grep(\"unnorm\", gtrack.ls(\"PBMC_10X.mc\"), inv = TRUE, v = TRUE) # plot gene-centered intervals plot_tracks_at_locus(     tracks = pbmc_tracks, extend = 5e+4,     gene = \"ATF3\",     atac = atac_mc,     gene_annot = TRUE,     order_rows = TRUE )  # plot arbitrary intervals plot_tracks_at_locus(     tracks = pbmc_tracks,     intervals = gintervals(2, 1e+7, 1.15e+7),     atac = atac_mc,     gene_annot = TRUE,     order_rows = TRUE ) }"},{"path":"/reference/project_atac_on_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Given metacells (usually from RNA data), project ATAC counts to get a McPeaks object — project_atac_on_mc","title":"Given metacells (usually from RNA data), project ATAC counts to get a McPeaks object — project_atac_on_mc","text":"Given cell metacell association, summarise atac counts generate McPeaks object. project_atac_on_mc_from_metacell1 projects given metacell1 'mc' object, project_atac_on_mc_from_h5ad uses output 'metacells' python package (metacell2).","code":""},{"path":"/reference/project_atac_on_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given metacells (usually from RNA data), project ATAC counts to get a McPeaks object — project_atac_on_mc","text":"","code":"project_atac_on_mc(   atac,   cell_to_metacell = NULL,   metadata = NULL,   min_int_frac = 0.5,   mc_size_eps_q = 0.1,   id = NULL,   description = NULL,   rm_zero_peaks = TRUE,   ignore_metacells = -1 )  project_atac_on_mc_from_metacell1(   atac,   scdb,   mc_id,   metadata = NULL,   id = NULL,   description = NULL )  project_atac_on_mc_from_h5ad(   atac,   h5ad_file,   min_int_frac = 0.5,   metadata = NULL,   id = NULL,   description = NULL )"},{"path":"/reference/project_atac_on_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given metacells (usually from RNA data), project ATAC counts to get a McPeaks object — project_atac_on_mc","text":"atac ScPeaks object cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part . metadata (optional) per-metacell metadata. data frame column called 'metacell' additional metacell annotations. min_int_frac (optional) minimal expected fraction intersection barcodes (cell names) ScPeaks mc_size_eps_q (optional) quantile MC size (UMIs) scale number UMIs per metacell. \\(egc_ij\\) fraction peak metacell j multiplied mc_size_eps_q quantile metacell sizes. id identifier object, e.g. \"pbmc\". NULL - id taken scATAC object atac. description identifier object, e.g. \"pbmc\". NULL - description taken scATAC object atac rm_zero_peaks remove peaks without reads (-zero peaks). Default: TRUE ignore_metacells vector metacells ignore. Default: -1 (\"outliers\" metacell metacell2 python package). scdb metacell1 scdb path mc_id id metacell object within scdb h5ad_file name h5ad file output 'metacells' python package.","code":""},{"path":"/reference/project_atac_on_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given metacells (usually from RNA data), project ATAC counts to get a McPeaks object — project_atac_on_mc","text":"McPeaks object","code":""},{"path":"/reference/project_atac_on_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given metacells (usually from RNA data), project ATAC counts to get a McPeaks object — project_atac_on_mc","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") data(cell_to_metacell_pbmc_example) atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) }"},{"path":"/reference/rna_atac_cor_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"Match every gene k ATAC peaks correlated ","code":""},{"path":"/reference/rna_atac_cor_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"","code":"rna_atac_cor_knn(   atac_mc,   k = 1,   genes = NULL,   rm_zeros = TRUE,   spearman = TRUE,   pairwise.complete.obs = TRUE )"},{"path":"/reference/rna_atac_cor_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"atac_mc McPeaks/McTracks object RNA expression (using add_mc_rna) k number peaks match gene. Default: 1 genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE spearman 'TRUE' Spearman correlation computed, otherwise Pearson pairwise.complete.obs see ","code":""},{"path":"/reference/rna_atac_cor_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"tibble following columns: gene: Gene name peak: ATAC peak name cor: Correlation ATAC RNA rank: Rank correlation (gene)","code":""},{"path":"/reference/rna_atac_cor_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"","code":"if (FALSE) { rna_atac_cor_knn(atac_mc, k = 1) rna_atac_cor_knn(atac_mc, k = 1, genes = c(\"MESP1\", \"MESP2\", \"PF4\")) }"},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a shiny app for viewing the MCT object — run_app","title":"Run a shiny app for viewing the MCT object — run_app","text":"Run shiny app viewing MCT object","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a shiny app for viewing the MCT object — run_app","text":"","code":"run_app(mct, hc = NULL, port = NULL, host = NULL, launch.browser = FALSE)"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a shiny app for viewing the MCT object — run_app","text":"mct MCT object hc hclust object clustering metacells (optional, see mct_plot_region","code":""},{"path":"/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a shiny app for viewing the MCT object — run_app","text":"","code":"if (FALSE) { run_app(mct) }"},{"path":"/reference/save_pheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","title":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","text":"pheatmap::pheatmap accepts parameter called filename saves pheatmap disk. However, heatmap shown screen. function workaround show heatmap screen save disk.","code":""},{"path":"/reference/save_pheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","text":"","code":"save_pheatmap(x, filename, dev = png, width = 2000, height = 2000, res = 150)"},{"path":"/reference/save_pheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","text":"filename output file path.     page number substituted C integer format included     character string, default.  (result must less     PATH_MAX characters long, may truncated .     See postscript details.)  Tilde expansion     performed supported platform.  input     marked encoding converted native encoding error     given. dev name device save pheatmap. e.g. \"png\" \"pdf\" width width device. height height device. res nominal resolution ppi recorded     bitmap file, positive integer.  Also used units     default, convert points pixels.","code":""},{"path":"/reference/scc_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract summary statistics per cell for a set of intervals — scc_extract","title":"Extract summary statistics per cell for a set of intervals — scc_extract","text":"Extract summary statistics per cell set intervals","code":""},{"path":"/reference/scc_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract summary statistics per cell for a set of intervals — scc_extract","text":"","code":"scc_extract(scc, intervals, cells = NULL)"},{"path":"/reference/scc_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract summary statistics per cell for a set of intervals — scc_extract","text":"scc ScCounts object intervals intervals set. Can column called \"peak_name\" peak name. cells vector cell names include. Default: cells.","code":""},{"path":"/reference/scc_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract summary statistics per cell for a set of intervals — scc_extract","text":"sparse matrix rows intervals, columns cells, values counts summed. intervals column called \"peak_name\", rows peak names, otherwise rows form \"chr:start_end\"","code":""},{"path":"/reference/scc_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract summary statistics per cell for a set of intervals — scc_extract","text":"","code":"if (FALSE) { scc_extract(scc, gintervals(1, 0, 100)) }"},{"path":"/reference/scc_project_on_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Given metacells (usually from RNA data), project ATAC counts to get a McCounts object — scc_project_on_mc","title":"Given metacells (usually from RNA data), project ATAC counts to get a McCounts object — scc_project_on_mc","text":"Given cell metacell association, summarise atac read counts generate McCounts object. can take - around 5 minutes using 24 cores PBMC dataset.","code":""},{"path":"/reference/scc_project_on_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given metacells (usually from RNA data), project ATAC counts to get a McCounts object — scc_project_on_mc","text":"","code":"scc_project_on_mc(sc_counts, cell_to_metacell, ignore_metacells = -1)"},{"path":"/reference/scc_project_on_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given metacells (usually from RNA data), project ATAC counts to get a McCounts object — scc_project_on_mc","text":"sc_counts ScCounts object cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part . ignore_metacells vector metacells ignore. Default: -1 (\"outliers\" metacell metacell2 python package).","code":""},{"path":"/reference/scc_project_on_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given metacells (usually from RNA data), project ATAC counts to get a McCounts object — scc_project_on_mc","text":"McCounts object","code":""},{"path":"/reference/scc_project_on_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given metacells (usually from RNA data), project ATAC counts to get a McCounts object — scc_project_on_mc","text":"","code":"if (FALSE) { data(cell_to_metacell_pbmc_example) scc_project_on_mc(sc_counts, cell_to_metacell_pbmc_example) }"},{"path":"/reference/scc_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an ScCounts object from a directory — scc_read","title":"Read an ScCounts object from a directory — scc_read","text":"Read ScCounts object directory","code":""},{"path":"/reference/scc_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an ScCounts object from a directory — scc_read","text":"","code":"scc_read(path, id = NULL, description = NULL, verbose = TRUE)"},{"path":"/reference/scc_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an ScCounts object from a directory — scc_read","text":"path path directory containing object (created write_sc_counts_from_fragments/bam) id identifier object (optional) description description object (optional) verbose print success message (default: TRUE)","code":""},{"path":"/reference/scc_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an ScCounts object from a directory — scc_read","text":"ScCounts object","code":""},{"path":"/reference/scc_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an ScCounts object from a directory — scc_read","text":"","code":"if (FALSE) { counts <- scc_read(\"pbmc_reads\") }"},{"path":"/reference/scc_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a counts object to a file — scc_write","title":"Write a counts object to a file — scc_write","text":"Write counts object file","code":""},{"path":"/reference/scc_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a counts object to a file — scc_write","text":"","code":"scc_write(object, out_dir, overwrite = FALSE)  mcc_write(object, out_dir, overwrite = FALSE)"},{"path":"/reference/scc_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a counts object to a file — scc_write","text":"object counts object (ScCounts McCounts) out_dir output directory overwrite whether overwrite existing directory","code":""},{"path":"/reference/scc_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a counts object to a file — scc_write","text":"","code":"if (FALSE) { scc_write(sc_counts, \"sc_counts\") mcc_write(mc_counts, \"mc_counts\") }"},{"path":"/reference/set_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parallel threads — set_parallel","title":"Set parallel threads — set_parallel","text":"Set number parallel threads use. mcATAC uses R function doMC::registerDoMC register parallelization. default, mcATAC uses 80% number available cores. options saved 'mcatac.parallel' (use parallelization, logical) 'mcatac.parallel.nc' (number cores use, integer).","code":""},{"path":"/reference/set_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parallel threads — set_parallel","text":"","code":"set_parallel(thread_num = max(1, round(parallel::detectCores() * 0.8)))"},{"path":"/reference/set_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parallel threads — set_parallel","text":"thread_num number threads. use '1' non parallel behavior","code":""},{"path":"/reference/set_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parallel threads — set_parallel","text":"None","code":""},{"path":"/reference/set_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parallel threads — set_parallel","text":"","code":"# \\donttest{ set_parallel(8) #> ℹ Parallelization enabled. Using 8 threads. # }"},{"path":"/reference/split_long_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Split long peaks into smaller peaks — split_long_peaks","title":"Split long peaks into smaller peaks — split_long_peaks","text":"Peaks splitted smaller peaks longer target_size. splitting done first checking peak length very_long. , peak splitted arbitrarily chunks size approximately very_long.  , chunks splitted smaller chunks approximately size target_size. splitting done first finding best offset start splitting peaks chunks size target_size starting offset.  Detection best offset done substracting mean interval coverage, removing values became zero, correlating thr marginal coverage simulated 'triangle' peaks starting different offsets.","code":""},{"path":"/reference/split_long_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split long peaks into smaller peaks — split_long_peaks","text":"","code":"split_long_peaks(   marginal_track,   peaks,   target_size = 500,   max_peak_size = 1000,   very_long = 5000,   min_peak_size = NULL,   window_size = target_size )"},{"path":"/reference/split_long_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split long peaks into smaller peaks — split_long_peaks","text":"marginal_track Name 'misha' track marginal coverage. can create using import_atac_marginal. peaks intervals set peaks split. target_size target size peaks. max_peak_size Peaks size splitted smaller peaks. very_long Peaks size splitted arbitrarily smaller peaks fitting best offset. min_peak_size Peaks size discarded. window_size Smoothing window size (side iterator) use marginal track. Default: traget_size.","code":""},{"path":"/reference/split_long_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split long peaks into smaller peaks — split_long_peaks","text":"","code":"if (FALSE) { split_peaks <- split_long_peaks(\"pbmc_atac.marginal\", peaks = peaks, target_size = 500, max_peak_size = 1e3, very_long = 5e3, min_peak_size = 20) }"},{"path":"/reference/subset_peak_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset McPeaks by certain clusters — subset_peak_clusters","title":"Subset McPeaks by certain clusters — subset_peak_clusters","text":"Subset McPeaks certain clusters","code":""},{"path":"/reference/subset_peak_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset McPeaks by certain clusters — subset_peak_clusters","text":"","code":"subset_peak_clusters(   atac_mc,   cluster_membership,   clusters_to_keep,   reverse = TRUE )"},{"path":"/reference/subset_peak_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset McPeaks by certain clusters — subset_peak_clusters","text":"atac_mc McPeaks object cluster_membership cluster peak member clusters_to_keep vector clusters keep (exclude, reverse == TRUE) reverse (optional) - logical/flag whether keep (default - TRUE) remove clusters clusters_to_keep","code":""},{"path":"/reference/subset_peak_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset McPeaks by certain clusters — subset_peak_clusters","text":"atac_mc object clusters (peaks) interest (saved \"ignore_...\" slots)","code":""},{"path":"/reference/subset_peak_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset McPeaks by certain clusters — subset_peak_clusters","text":"","code":"if (FALSE) { peak_cl_km <- gen_atac_peak_clust(atac_mc, k = 15) atac_mc_subset <- subset_peak_clusters(atac_mc, cluster_membership = peak_cl_km, clusters_to_keep = c(4, 5, 8)) }"},{"path":"/reference/subset_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset peaks of an McPeaks object — subset_peaks","title":"Subset peaks of an McPeaks object — subset_peaks","text":"Subset peaks McPeaks object","code":""},{"path":"/reference/subset_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset peaks of an McPeaks object — subset_peaks","text":"","code":"subset_peaks(atac_mc, peak_set)"},{"path":"/reference/subset_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset peaks of an McPeaks object — subset_peaks","text":"atac_mc McPeaks object peak_set subset peaks atac_mc@peaks keep","code":""},{"path":"/reference/subset_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset peaks of an McPeaks object — subset_peaks","text":"atac_mc object peaks interest (saved \"ignore_...\" slots)","code":""},{"path":"/reference/subset_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset peaks of an McPeaks object — subset_peaks","text":"","code":"if (FALSE) { ## Use \"default clustering\" - the existing annotations mc_clusters <- gen_atac_mc_clust(my_atac_mc, use_prior_annot = T)  ## Identify peaks of interest, namely peaks neighboring a set of feature genes, and subset by them nei_peaks_feat_genes <- gintervals.neighbors(my_atac_mc@peaks, tss[tss$name %in% feature_genes, ], maxdist = 5e+5) peaks_of_interest <- nei_peaks_feat_genes[, c(\"chrom\", \"start\", \"end\")] mc_clusters <- subset_peaks(my_atac_mc, peaks_of_interest) }"},{"path":"/reference/temp_track_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a temporary track name — temp_track_name","title":"Get a temporary track name — temp_track_name","text":"function returns temporary track name, deleted calling function exits.","code":""},{"path":"/reference/temp_track_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a temporary track name — temp_track_name","text":"","code":"temp_track_name(prefix = \"\", envir = parent.frame())"},{"path":"/reference/temp_track_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a temporary track name — temp_track_name","text":"prefix prefix track name envir environment pass withr::defer function (change unless know )","code":""},{"path":"/reference/temp_track_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a temporary track name — temp_track_name","text":"temporary track name","code":""},{"path":"/reference/temp_track_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a temporary track name — temp_track_name","text":"","code":"func <- function() {     tmp <- temp_track()     print(tmp)     gtrack.create_sparse(tmp, description = \"\", intervals = gintervals.all(), values = rep(1, nrow(gintervals.all())))     gtrack.exists(tmp) # returns TRUE     a <- gextract(tmp, gintervals.all())     print(head(a))     return(tmp) } tmp <- func() #> Error in temp_track(): could not find function \"temp_track\" gtrack.exists(tmp) # returns FALSE #> Error in eval(expr, p): object 'tmp' not found"},{"path":"/reference/write_sc_counts_from_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"Write single cell counts from an indexed bam file — write_sc_counts_from_bam","title":"Write single cell counts from an indexed bam file — write_sc_counts_from_bam","text":"Write single cell counts indexed bam file","code":""},{"path":"/reference/write_sc_counts_from_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write single cell counts from an indexed bam file — write_sc_counts_from_bam","text":"","code":"write_sc_counts_from_bam(   bam_file,   out_dir,   cell_names,   genome = NULL,   bin_size = 50000000,   id = \"\",   description = \"\",   min_mapq = NULL,   samtools_bin = \"samtools\",   samtools_opts = NULL,   num_reads = NULL,   verbose = FALSE,   overwrite = FALSE )"},{"path":"/reference/write_sc_counts_from_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write single cell counts from an indexed bam file — write_sc_counts_from_bam","text":"bam_file name bam file out_dir output directory. cell_names vector cell names ATAC object genome genome name (e.g. hg19). inferred ScPeaks object provided bin_size Size genomic bins use (bp). chromsome chunked bins size smaller value. Default 50Mb. id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" min_mapq minimal mapping quality (optional) samtools_bin path samtools executable samtools_opts additional options samtools (e.g. \"--subsample 0.1\") num_reads number reads (within region) process (optional). verbose verbose output (optional) overwrite overwrite existing directory (optional)","code":""},{"path":"/reference/write_sc_counts_from_bam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write single cell counts from an indexed bam file — write_sc_counts_from_bam","text":"None","code":""},{"path":"/reference/write_sc_counts_from_bam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write single cell counts from an indexed bam file — write_sc_counts_from_bam","text":"","code":"if (FALSE) { write_sc_counts_from_bam(\"pbmc_data/possorted_bam.bam\", \"pbmc_reads\", cell_names = atac_sc) }"},{"path":"/reference/write_sc_counts_from_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Write single cell counts from a 10x fragments file — write_sc_counts_from_fragments","title":"Write single cell counts from a 10x fragments file — write_sc_counts_from_fragments","text":"function writes ScCounts object \"fragments.tsv.gz\" output 10x pipeline (\"Barcoded aligned fragment file\").","code":""},{"path":"/reference/write_sc_counts_from_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write single cell counts from a 10x fragments file — write_sc_counts_from_fragments","text":"","code":"write_sc_counts_from_fragments(   fragments_file,   out_dir,   cell_names,   genome = NULL,   bin_size = 50000000,   overwrite = FALSE,   id = \"\",   description = \"\",   verbose = FALSE,   tabix_bin = \"tabix\",   chromosomes = NULL )"},{"path":"/reference/write_sc_counts_from_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write single cell counts from a 10x fragments file — write_sc_counts_from_fragments","text":"fragments_file path fragments file. Note order use tabix, file must compressed gzip \".gz\" extension. out_dir output directory. cell_names vector cell names ScPeaks object bin_size Size genomic bins use (bp). chromsome chunked bins size smaller value. Default 50Mb. overwrite overwrite existing directory (optional) id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" verbose verbose output (optional) tabix_bin path tabix binary (optional) chromosomes process specific chromosomes (optional)","code":""},{"path":"/reference/write_sc_counts_from_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write single cell counts from a 10x fragments file — write_sc_counts_from_fragments","text":"None","code":""},{"path":"/reference/write_sc_counts_from_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write single cell counts from a 10x fragments file — write_sc_counts_from_fragments","text":"","code":"if (FALSE) { write_sc_counts_from_fragments(\"pbmc_data/fragments.tsv.gz\", \"pbmc_reads\", cell_names = atac_sc) write_sc_counts_from_fragments(\"pbmc_data/fragments.tsv.gz\", \"pbmc_reads\", cell_names = atac_sc, chromosomes = paste0(\"chr\", c(1:22, \"X\", \"Y\"))) }"},{"path":"/reference/write_sparse_matrix_from_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a sparse-matrix file from an indexed bam file — write_sparse_matrix_from_bam","title":"Write a sparse-matrix file from an indexed bam file — write_sparse_matrix_from_bam","text":"function reads bam file writes sparse-matrix file, rows genomic coordinates columns cells. : filtering bam file given region (e.g. chromosom, using \"regions\" paramter) extracting cell name using \"CB\" tag added cellranger, excluding reads marked PCR duplicates (1024) use awk extract start coordinates tag use unix \"sort\" \"uniq\" count number times coordinate appears cell use R script convert cell names indices write sparse-matrix file (matrix-market format) zip Note (1): order use function, \"samtools\" (>= 1.15), \"awk\", \"sed\", \"sort\" \"uniq\" must available unix command line. Note (2): function takes run - around 13 minutes using 24 cores PBMC data.","code":""},{"path":"/reference/write_sparse_matrix_from_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a sparse-matrix file from an indexed bam file — write_sparse_matrix_from_bam","text":"","code":"write_sparse_matrix_from_bam(   bam_file,   out_file,   cell_names,   region,   genome = NULL,   min_mapq = NULL,   samtools_bin = \"samtools\",   samtools_opts = NULL,   num_reads = NULL,   verbose = TRUE,   overwrite = FALSE )"},{"path":"/reference/write_sparse_matrix_from_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a sparse-matrix file from an indexed bam file — write_sparse_matrix_from_bam","text":"bam_file name bam file out_file name output file. \".gz\" extension added file name. cell_names vector cell names ATAC object region intervals set filter. See samtools docs http://www.htslib.org/doc/samtools-view.html details genome genome name (e.g. hg19). inferred ScPeaks object provided min_mapq minimal mapping quality (optional) samtools_bin path samtools executable samtools_opts additional options samtools (e.g. \"--subsample 0.1\") num_reads number reads (within region) process (optional). verbose verbose output (optional) overwrite overwrite existing files (optional)","code":""},{"path":"/reference/write_sparse_matrix_from_bam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a sparse-matrix file from an indexed bam file — write_sparse_matrix_from_bam","text":"None","code":""},{"path":"/reference/write_sparse_matrix_from_bam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a sparse-matrix file from an indexed bam file — write_sparse_matrix_from_bam","text":"","code":"if (FALSE) { write_sparse_matrix_from_bam(\"pbmc_data/possorted_bam.bam\", \"chrom1.mm\", region = gintervals.all()[1, ], cell_names = atac_sc) }"}]
