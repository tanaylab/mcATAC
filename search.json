[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/mcATAC.html","id":"download-dataset","dir":"Articles","previous_headings":"","what":"Download dataset","title":"mcATAC","text":"Download following dataset 10x: PBMC healthy donor - granulocytes removed cell sorting (10k) (Filtered feature barcode matrix MEX (DIR)) extract contents directory called pbmc_data:","code":"if (!dir.exists(\"pbmc_data\")){   download_pbmc_example_data() }"},{"path":"/articles/mcATAC.html","id":"import-atac-dataset","dir":"Articles","previous_headings":"","what":"Import ATAC dataset","title":"mcATAC","text":"","code":"atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\", id = \"pbmc\", description = \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\") #> • Importing matrix #> ℹ Imported a matrix of 11909 cells and 144978 features #> • Importing features #> ℹ Removed 107861 ATAC peaks which were all zero #> ℹ 107861 ATAC peaks #> ! removed 32 peaks from the following chromosome(s) which are missing from hg38: KI270727.1, GL000194.1, GL000205.2, GL000195.1, GL000219.1, KI270734.1, KI270721.1, KI270726.1, KI270713.1 #> ✔ successfully imported to an ScATAC object with 11909 cells and 107829 ATAC peaks atac_sc #> <ScATAC> object with 11909 cells and 107829 ATAC peaks from hg38. #> id: \"pbmc\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Loaded from: pbmc_data/matrix.mtx.gz #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are cells. Can be #>   a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks"},{"path":[]},{"path":"/articles/mcATAC.html","id":"by-coverage-andor-length","dir":"Articles","previous_headings":"Filter peaks","what":"by coverage and/or length","title":"mcATAC","text":"Plot length distribution:  Plot coverage distribution:  Plot distribution maximal number peaks per cell peak:  Filter peaks length coverage: Identify outliers using coverage density:","code":"plot_peak_length_distribution(atac_sc) plot_peak_coverage_distribution(atac_sc) plot_peak_max_cov_distribution(atac_sc) atac_sc <- filter_features(atac_sc, minimal_max_umi = 3, min_peak_length = 200, max_peak_length = 1000) #> • 8544 features were shorter than 200bp #> • 37160 features were longer than 1000bp #> • 676 features had a maximal UMI count less than 3 #> ✔ Removed 46380 peaks out of 107829 (43%). The object is left with 61449 peaks. plot_peak_coverage_density(atac_sc) + geom_hline(yintercept = 250, linetype = \"dashed\", color = \"red\") atac_sc <- filter_features(atac_sc, max_peak_density = 250) #> • 107 features had a peak density of more than 250 UMIs per 100bp #> ! Adding to previous ignore policy (46380 peaks). #> ✔ Removed 107 peaks out of 107829 (0%). The object is left with 61342 peaks (43%)."},{"path":"/articles/mcATAC.html","id":"by-overlap-with-known-blacklist-regions","dir":"Articles","previous_headings":"Filter peaks","what":"by overlap with known blacklist regions","title":"mcATAC","text":"See [https://doi.org/10.1038/s41598-019-45839-z]","code":"blacklist_overlaps <- find_blacklist_overlaps(atac_sc) atac_sc <- atac_ignore_peaks(atac_sc, blacklist_overlaps, reset = FALSE) #> ! Adding to previous ignore policy (46487 peaks). #> ✔ Removed 322 peaks out of 107829 (0%). The object is left with 61020 peaks (43%)."},{"path":"/articles/mcATAC.html","id":"project-rna-metacells","dir":"Articles","previous_headings":"","what":"Project RNA metacells","title":"mcATAC","text":"using metacell1 object:","code":"data(cell_to_metacell_pbmc_example) head(cell_to_metacell_pbmc_example) #> # A tibble: 6 × 2 #>   cell_id            metacell #>   <chr>                 <int> #> 1 AAACAGCCAATCCCTT-1       44 #> 2 AAACAGCCAATGCGCT-1       22 #> 3 AAACAGCCACCAACCG-1        7 #> 4 AAACAGCCAGGATAAC-1       24 #> 5 AAACAGCCAGTTTACG-1       32 #> 6 AAACATGCAAGGTCCT-1       30 atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) #> ℹ 3198 cells (out of 11909) do not have a metacell and have been removed. #> • Setting egc cell size to 67248.6 (the 0.1 quantile of metacell sizes) #> ✔ Created a new McATAC object with 97 metacells and 61020 ATAC peaks. atac_mc #> <McATAC> object with 97 metacells and 61020 ATAC peaks from hg38. #> id: \"pbmc\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell #> sorting (10k)\" #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are metacells. #>   Can be a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks #>   • `@egc`: a numeric matrix which contains normalized metacell accessibility. #>   • `@fp`: a matrix showing for each peak (row) the relative enrichment of umis #>   in log2 scale. atac_mc <- project_atac_on_mc_from_metacell1(atac_sc, \"pbmc_data/scdb\", \"rna\")"},{"path":"/articles/mcATAC.html","id":"import-annotations","dir":"Articles","previous_headings":"","what":"Import annotations","title":"mcATAC","text":"","code":"data(mcmd) atac_mc <- add_mc_metadata(atac_mc, mcmd)"},{"path":"/articles/mcATAC.html","id":"identify-dynamic-peaks","dir":"Articles","previous_headings":"","what":"Identify dynamic peaks","title":"mcATAC","text":"","code":"dyn_peaks <- identify_dynamic_peaks(mcatac = atac_mc, mean_thresh_q = 0.05) #> • Plotting log10(mean) vs log10(sd/mean) #> ✔ Identified 14576 dynamic peaks (out of 61020) using the 'bmq' method."},{"path":"/articles/mcATAC.html","id":"cluster-a-peak-set","dir":"Articles","previous_headings":"","what":"Cluster a peak set","title":"mcATAC","text":"","code":"peak_clust <- gen_atac_peak_clust(atac_mc, k = 30) #> • Clustering using \"kmeans++\". k = 30 table(peak_clust) #> peak_clust #>    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16  #>  969 2563 3936 2981 6367 1708 8894 2616 2094 1323 1063  995 1028  682  676  543  #>   17   18   19   20   21   22   23   24   25   26   27   28   29   30  #> 1208 3716 2289  769 1834 2057 1507  923  944 3047  830 1712  793  953"},{"path":"/articles/mcATAC.html","id":"plot-peaks-clustering","dir":"Articles","previous_headings":"","what":"Plot peaks clustering","title":"mcATAC","text":"","code":"plot_atac_peak_map(atac_mc, atac_mc@metadata$cell_type, peak_clust) #> ℹ Expected time to plot is roughly 71s"},{"path":"/articles/mcATAC.html","id":"export-dynamic-peaks-to-ucsc-tracks","dir":"Articles","previous_headings":"","what":"Export dynamic peaks to UCSC tracks","title":"mcATAC","text":"UCSC track example","code":"outdir <- tempdir() export_atac_clust_ucsc(mc_atac = atac_mc, track_prefix = 'hum_pbmc_10x', normalization = 'lfcom', output_dir = outdir) #> ℹ Using eps_q=0.05 and eps = 0.731958762886598 for regularization #> ✔ Successfully exported to ucsc. Files generated: #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_B.ucsc #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_DC.ucsc #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_Monocyte.ucsc #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_NK.ucsc #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_T.ucsc #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_T_CD8.ucsc #> • /tmp/Rtmp1vslJg/hum_pbmc_10x_Undetermined.ucsc"},{"path":"/articles/mcATAC.html","id":"add-expression-data","dir":"Articles","previous_headings":"","what":"Add expression data","title":"mcATAC","text":"","code":"data(rna_mc_mat) atac_mc <- add_mc_rna(atac_mc, rna_mc_mat)"},{"path":"/articles/mcATAC.html","id":"plot-accesability-vs-expression","dir":"Articles","previous_headings":"","what":"Plot accesability vs expression","title":"mcATAC","text":"gene promoter:  gene promoter different gene:  gene arbitrary peak:","code":"plot_atac_rna(atac_mc, \"CD4\") #> → The gene \"CD4\" has 9 alternative promoters. plot_atac_rna(atac_mc, \"CD4\", \"GZMK\") #> → The gene \"GZMK\" has 2 alternative promoters. plot_atac_rna(atac_mc, \"CD4\", peak = atac_mc@peaks$peak_name[1])"},{"path":"/articles/mcATAC.html","id":"plot-rna-markers","dir":"Articles","previous_headings":"","what":"Plot RNA markers","title":"mcATAC","text":"","code":"plot_atac_rna_markers(atac_mc) #> → removing 7543 genes with no RNA expression in any metacell. #> → removing 23451 genes with no RNA expression (log2) of above -13 in any metacell. #> → removing 3534 genes with no fold change (log2) of above 2 in any metacell. #> ℹ 5191 genes left for consideration. #> ✔ 100 marker genes selected. #> ℹ Ordering metacells based on CA6 vs LYN #> ℹ Maintaining metacell order within cell types #> ✔ marker matrix of 100 genes x 97 metacells created. #> → Creating ATAC matrix by finding for each marker gene the ATAC peak that is most correlated to it."},{"path":"/articles/mcATAC.html","id":"export-to-an-h5ad-file","dir":"Articles","previous_headings":"","what":"Export to an h5ad file","title":"mcATAC","text":"","code":"export_to_h5ad(atac_mc, \"pbmc_data/atac_mc.h5ad\", compression = \"gzip\") #> • Creating an AnnData object #> • Writing to file #> ✔ Successfully exported to pbmc_data/atac_mc.h5ad # Load using: atac_mc <- import_from_h5ad(\"pbmc_data/atac_mc.h5ad\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Yonatan Shapira. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Shapira Y (2022). mcATAC: Metacell analysis ATAC data. R package version 0.0.0.9000, https://github.com/tanaylab/mcATAC.","code":"@Manual{,   title = {mcATAC: Metacell analysis for ATAC data},   author = {Aviezer Lifshitz and Yonatan Shapira},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/tanaylab/mcATAC}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metacell analysis for ATAC data","text":"can install development version mcATAC like :","code":"remotes::install_github(\"tanaylab/mcATAC\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Metacell analysis for ATAC data","text":"","code":"if (!dir.exists(\"pbmc_data\")){   download_pbmc_example_data() }"},{"path":"/index.html","id":"import-atac-dataset","dir":"","previous_headings":"Example","what":"Import ATAC dataset","title":"Metacell analysis for ATAC data","text":"","code":"atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\", id = \"PBMC\", description = \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\") #> • Importing matrix #> ℹ Imported a matrix of 11909 cells and 144978 features #> • Importing features #> ℹ Removed 107861 ATAC peaks which were all zero #> ℹ 107861 ATAC peaks #> ! removed 32 peaks from the following chromosome(s) which are missing from hg38: 'KI270727.1, GL000194.1, GL000205.2, GL000195.1, GL000219.1, KI270734.1, KI270721.1, KI270726.1, KI270713.1' #> ✔ successfully imported to an ScATAC object with 11909 cells and 107829 ATAC peaks atac_sc #> <ScATAC> object with 11909 cells and 107829 ATAC peaks from hg38. #> id: \"PBMC\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\" #> loaded from: 'pbmc_data/matrix.mtx' #> Slots include: #> • `@mat`: a numeric matrix where rows are peaks and columns are cells. Can be a sparse matrix. #> • `@peaks`: a misha intervals set with the peak definitions. #> • `@genome`: genome assembly of the peaks"},{"path":"/index.html","id":"filter-peaks-by-coverage-andor-length","dir":"","previous_headings":"Example","what":"Filter peaks by coverage and/or length","title":"Metacell analysis for ATAC data","text":"Plot length distribution:  Plot coverage distribution:  Filter: Identify outliers using coverage density:","code":"plot_peak_length_distribution(atac_sc) plot_peak_coverage_distribution(atac_sc) atac_sc <- filter_features(scatac = atac_sc, minimal_max_umi = 3, min_peak_length = 200, max_peak_length = 1000) #> • 8544 features were shorter than 200bp #> • 37160 features were longer than 1000bp #> • 676 features had a maximal UMI count less than 3 #> ✔ Removed 46380 peaks out of 107829 (43%). The object is left with 61449 peaks. plot_peak_coverage_density(atac_sc) + geom_hline(yintercept = 250, linetype = \"dashed\", color = \"red\") atac_sc <- filter_features(atac_sc, max_peak_density = 250) #> • 107 features had a peak density of more than 250 UMIs per 100bp #> ! Adding to previous ignore policy (46380 peaks). #> ✔ Removed 107 peaks out of 107829 (0%). The object is left with 61342 peaks (43%)."},{"path":"/index.html","id":"project-rna-metacells","dir":"","previous_headings":"Example","what":"Project RNA metacells","title":"Metacell analysis for ATAC data","text":"","code":"data(cell_to_metacell_pbmc_example) head(cell_to_metacell_pbmc_example) #> # A tibble: 6 x 2 #>              cell_id metacell #> 1 AAACAGCCAATCCCTT-1       44 #> 2 AAACAGCCAATGCGCT-1       22 #> 3 AAACAGCCACCAACCG-1        7 #> 4 AAACAGCCAGGATAAC-1       24 #> 5 AAACAGCCAGTTTACG-1       32 #> 6 AAACATGCAAGGTCCT-1       30 atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) #> ℹ 3198 cells (out of 11909) do not have a metacell and have been removed. #> • Setting egc cell size to 67733 (the 0.1 quantile of metacell sizes) #> ✔ Created a new McATAC object with 97 metacells and 61342 ATAC peaks. atac_mc #> <McATAC> object with 97 metacells and 61342 ATAC peaks from hg38. #> id: \"PBMC\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\" #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are metacells. Can be a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks #>   • `@egc`: a numeric matrix which contains normalized metacell accessibility. #>   • `@fp`: a matrix showing for each peak (row) the relative enrichment of umis in log2 scale. atac_mc #> <McATAC> object with 97 metacells and 61342 ATAC peaks from hg38. #> id: \"PBMC\" #> description: \"PBMC from a healthy donor - granulocytes removed through cell sorting (10k)\" #> Slots include: #>   • `@mat`: a numeric matrix where rows are peaks and columns are metacells. Can be a sparse matrix. #>   • `@peaks`: a misha intervals set with the peak definitions. #>   • `@genome`: genome assembly of the peaks #>   • `@egc`: a numeric matrix which contains normalized metacell accessibility. #>   • `@fp`: a matrix showing for each peak (row) the relative enrichment of umis in log2 scale."},{"path":"/index.html","id":"add-metadata","dir":"","previous_headings":"Example","what":"Add metadata","title":"Metacell analysis for ATAC data","text":"","code":"data(mcmd) atac_mc <- add_mc_metadata(atac_mc, mcmd)"},{"path":"/index.html","id":"import-rna-expression-data","dir":"","previous_headings":"","what":"Import RNA expression data","title":"Metacell analysis for ATAC data","text":"See vignette","code":"data(rna_mc_mat) atac_mc <- add_mc_rna(atac_mc, rna_mc_mat) plot_atac_rna(atac_mc, \"GZMK\") #> → The gene \"GZMK\" has 2 alternative promoters."},{"path":"/reference/ATAC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ATAC objects — ATAC-class","title":"ATAC objects — ATAC-class","text":"ATAC shallow object holding ATAC data cells/metacells. Minimally include count matrix peaks cells/metacells, PeakIntervals hold coordinates peaks id genome assembly peaks. ScATAC McATAC extend ATAC object adding metadata additional slots.","code":""},{"path":"/reference/ATAC-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ATAC objects — ATAC-class","text":"id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" mat numeric matrix rows peaks columns cells/metacells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations McATAC, 'cell_id' per-cell annotatoins ScATAC. constructor can also include name delimited file contains annotations. path original path object loaded (optional) promoters peaks promoters (optional). peaks promoters peak name gene name instead coordinates.","code":""},{"path":"/reference/ATAC.html","id":null,"dir":"Reference","previous_headings":"","what":"McATAC — McATAC-class","title":"McATAC — McATAC-class","text":"ATAC object data metacells ATAC object data cells","code":""},{"path":"/reference/ATAC.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"McATAC — McATAC-class","text":"egc normalized metacell accessibility: fraction accessibility per metacell scaled mc_size_eps_q quantile metacell size. Accessibility normalized peak length. fp matrix showing peak (row) relative enrichment umis log2 scale, .e. \\(log2((1 + egc) / median(1 + egc))\\) mc_size_eps_q quantile MC size (UMIs) scale number UMIs per metacell. See project_atac_on_mc rna_egc normalized gene expression per gene per metacell (optional). Can created using add_rna_egc","code":""},{"path":"/reference/PeakIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a PeakIntervals object from misha intervals — PeakIntervals","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"PeakIntervals object simply misha intervals set can , optionally, field called 'peak_name' holds name peaks. Note informative rownames make explicit column due fact package might change occasionally (e.g. creating h5ad files)","code":""},{"path":"/reference/PeakIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"","code":"PeakIntervals(intervals, genome = NULL)"},{"path":"/reference/PeakIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"intervals misha intervals (data frame following columns: 'chrom', 'start' 'end') genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\".","code":""},{"path":"/reference/PeakIntervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"PeakIntervals object","code":""},{"path":"/reference/add_mc_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add per-metacell metadata to an McATAC object — add_mc_metadata","title":"Add per-metacell metadata to an McATAC object — add_mc_metadata","text":"Add per-metacell metadata McATAC object","code":""},{"path":"/reference/add_mc_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add per-metacell metadata to an McATAC object — add_mc_metadata","text":"","code":"add_mc_metadata(mcatac, metadata)"},{"path":"/reference/add_mc_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add per-metacell metadata to an McATAC object — add_mc_metadata","text":"mcatac McATAC object metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations.","code":""},{"path":"/reference/add_mc_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add per-metacell metadata to an McATAC object — add_mc_metadata","text":"","code":"if (FALSE) { data(mcmd) mc_atac <- add_metadata(mc_atac, mcmd) }"},{"path":"/reference/add_mc_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Add per-metacell gene expression data to an McATAC object — add_mc_rna","title":"Add per-metacell gene expression data to an McATAC object — add_mc_rna","text":"Add per-metacell gene expression data McATAC object","code":""},{"path":"/reference/add_mc_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add per-metacell gene expression data to an McATAC object — add_mc_rna","text":"","code":"add_mc_rna(mcatac, mc_rna)"},{"path":"/reference/add_mc_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add per-metacell gene expression data to an McATAC object — add_mc_rna","text":"mcatac McATAC object mc_rna metacell1 'mc' object metacells metacell UMI matrix (matrix row gene column metacell)","code":""},{"path":"/reference/add_mc_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add per-metacell gene expression data to an McATAC object — add_mc_rna","text":"","code":"if (FALSE) { data(mcmd) metacell::scdb_init(\"pbmc_data/scdb\", force_reinit = TRUE) mc_rna <- metacell::scdb_mc(\"rna\") mc_atac <- add_mc_rna(mc_atac, mc_rna) }"},{"path":"/reference/annotate_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate an intervals set — annotate_intervals","title":"Annotate an intervals set — annotate_intervals","text":"ATAC peaks classified either 'promoter', 'intronic', 'exonic', 'ig_proximal' (intergenic-proximal), 'ig_distal' (intergenic-distal) 'desert'.  Promoter peaks less min_proximal away TSS.  Intronic peaks within gene bodies, exon.  Exonic peaks overlap exons.  Intergenic-proximal peaks less max_proximal away TSS, within gene body.  Intergenic-distal peaks min_distal away TSS, less max-distal TSS, within gene body.  Desert peaks least max_distal known TSS (defined tss interval set).","code":""},{"path":"/reference/annotate_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate an intervals set — annotate_intervals","text":"","code":"annotate_intervals(   intervals,   genome,   min_proximal = 1000,   max_proximal = 20000,   min_distal = max_proximal,   max_distal = 1000000,   exonic_peak_dist = 0,   tss = \"intervs.global.tss\",   exons = \"intervs.global.exon\" )"},{"path":"/reference/annotate_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate an intervals set — annotate_intervals","text":"intervals intervals set annotate genome genome/genomic database use (e.g. 'mm10', 'hg19') min_proximal minimum distance TSS, peak considered promoter peak, beyond () proximal enhancer. max_proximal minimum distance TSS, peak considered proximal enhancer peak, beyond () . min_distal minimum distance TSS, peak considered distal enhancer. Usually equal max_proximal, unless good reason max_distal maximum distance TSS, peak considered distal enhancer, 'desert' peak. exonic_peak_dist parameter allows proximity (without overlap) peaks exons still classifies exonic peaks, active transcription usually confers accessibility vicinity exons, might confound possible assignment regulatory activity exon. tss TSS interval set name TSS interval set use. exons exons interval set name exons interval set use.","code":""},{"path":"/reference/annotate_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate an intervals set — annotate_intervals","text":"intervals - input intervals set added fields .code peak_type, .code closest_tss, .code closest_exon_gene .code gene_body_gene.","code":""},{"path":"/reference/annotate_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate an intervals set — annotate_intervals","text":"","code":"if (FALSE) { my_intervals <- annotate_intervals(my_intervals, \"mm10\", min_proximal = 1e+03, max_proximal = 2e+04, max_distal = 1e+06, exonic_peak_dist = 5e+2) table(my_intervals$peak_type) my_intervals[which(toupper(my_intervals$closest_tss) == \"PCNA\"), ] }"},{"path":"/reference/annotate_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate ATAC peaks — annotate_peaks","title":"Annotate ATAC peaks — annotate_peaks","text":"Annotate ATAC peaks","code":""},{"path":"/reference/annotate_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate ATAC peaks — annotate_peaks","text":"","code":"annotate_peaks(atac)"},{"path":"/reference/annotate_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate ATAC peaks — annotate_peaks","text":"atac McATAC ScATAC object","code":""},{"path":"/reference/annotate_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate ATAC peaks — annotate_peaks","text":"original atac object, peaks annotated using annotate_intervals","code":""},{"path":"/reference/annotate_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate ATAC peaks — annotate_peaks","text":"","code":"if (FALSE) { pbmc_atac_mc <- annotate_peaks(pbmc_atac_mc) }"},{"path":"/reference/atac_ignore_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cells — atac_ignore_cells","title":"Remove cells — atac_ignore_cells","text":"function removes given list cells .code mat slot.","code":""},{"path":"/reference/atac_ignore_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cells — atac_ignore_cells","text":"","code":"atac_ignore_cells(atac, ig_cells)"},{"path":"/reference/atac_ignore_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cells — atac_ignore_cells","text":"atac ScATAC object ig_cells vector cell names (10X barcodes) removes","code":""},{"path":[]},{"path":"/reference/atac_ignore_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove cells — atac_ignore_cells","text":"","code":"if (FALSE) { cs <- Matrix::colSums(scatac@mat) big_cells <- names(cs)[which(cs >= quantile(cs, 0.98))] scatac_filtered <- atac_ignore_cells(scatac, big_cells) }"},{"path":"/reference/atac_ignore_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"Given list peaks ignore, remove given peaks .code ignore_peaks .code ignore_pmat slots. Note matrix peaks reordered.","code":""},{"path":"/reference/atac_ignore_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"","code":"atac_ignore_peaks(atac, ig_peaks, reset = FALSE)"},{"path":"/reference/atac_ignore_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"atac ScATAC McATAC object ig_peaks PeakIntervals object, vector peak names ignore reset rest current ignore policy exists. set TRUE, current ignore policy removed, otherwise new ignore policy appended current one.","code":""},{"path":[]},{"path":"/reference/atac_ignore_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ignored (i.e. blacklisted) peaks — atac_ignore_peaks","text":"","code":"if (FALSE) { max_peak_length <= 1000 peak_stats <- get_peak_coverage_stats(scatac, scale = 100) too_long_peaks <- peak_stats$peak_name[peak_stats$len > max_peak_length] scatac_filtered <- atac_ignore_peaks(scatac, too_long_peaks) }"},{"path":"/reference/calc_prom_rna_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"Calculate cross-correlation promoter accessibility RNA expression","code":""},{"path":"/reference/calc_prom_rna_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"","code":"calc_prom_rna_cor(   atac_mc,   genes = NULL,   rm_zeros = TRUE,   match_genes = FALSE,   spearman = FALSE,   pairwise.complete.obs = TRUE )"},{"path":"/reference/calc_prom_rna_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"atac_mc McATAC object promoters (using gen_promoter_features) RNA expression (using add_mc_rna) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE match_genes calculate correlation genes promoters accesability RNA expression. Matching done based name. Default: FALSE spearman 'TRUE' Spearman correlation computed, otherwise Pearson pairwise.complete.obs see ","code":""},{"path":"/reference/calc_prom_rna_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the cross-correlation between promoter accessibility and RNA expression — calc_prom_rna_cor","text":"correlation matrix rows promoters columns genes","code":""},{"path":"/reference/calculate_d_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"function one-sided KS test foreground set peaks (pssm_fg) background set pssm_bg. option alternative == \"less\", checks null hypothesis foreground distribution less background distribution (applicable looking motif enrichment; anti-enrichment, alternative == 'greater', see ks.test documentation details)","code":""},{"path":"/reference/calculate_d_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"","code":"calculate_d_stats(   pssm_fg,   pssm_bg,   fg_clustering = NULL,   parallel = TRUE,   alternative = \"less\",   nc = parallel::detectCores() )"},{"path":"/reference/calculate_d_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"pssm_fg motif energies calculated certain set motifs PeakIntervals/ScATAC/McATAC object pssm_bg background set intervals (e.g. random genome, ENCODE enhancers etc.) include /subset motifs (columns) pssm_fg fg_clustering vector cluster assignments foreground peaks (e.g. gen_atac_peak_clust) parallel (optional) - whether use parallelize computations alternative indicates alternative hypothesis must     one \"two.sided\" (default), \"less\",     \"greater\".  can specify just initial letter     value, argument name must given full.     See ‘Details’ meanings possible values. nc (optional) - number cores parallel computations","code":""},{"path":"/reference/calculate_d_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"fg_clustering == TRUE, returns matrix clusters x motifs (rows x columns) D-statistic combination","code":""},{"path":"/reference/calculate_d_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Kolmogorov-Smirnov D statistics between two interval sets with motif energies — calculate_d_stats","text":"","code":"if (FALSE) { pssm_fg <- generate_motif_pssm_matrix(my_atac_mc, datasets_of_interest = \"jaspar\") pssm_bg <- gen_random_genome_peak_motif_matrix(num_peaks = nrow(my_atac_mc@peaks), datasets_of_interest = \"jaspar\") d_vs_rg <- calculate_d_stats(pssm_fg, pssm_bg) peak_clust <- gen_atac_peak_clust(my_atac_mc, k = 12) d_vs_rg_cl <- calculate_d_stats(pssm_fg, pssm_bg, fg_clustering = peak_clust) }"},{"path":"/reference/call_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Call peaks from ATAC marginals track — call_peaks","title":"Call peaks from ATAC marginals track — call_peaks","text":"Peaks called screening genomic regions number UMIs quantile marginal ATAC counts, min_umis. Peaks longer max_peak_size splitted equally smaller peaks.","code":""},{"path":"/reference/call_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call peaks from ATAC marginals track — call_peaks","text":"","code":"call_peaks(   marginal_track,   quantile_thresh = 0.9,   min_umis = 8,   split_peaks = TRUE,   target_size = 500,   max_peak_size = 1000,   very_long = 5000,   min_peak_size = 200,   genome = NULL,   seed = 60427 )"},{"path":"/reference/call_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call peaks from ATAC marginals track — call_peaks","text":"marginal_track Name 'misha' track call peaks . can create using import_atac_marginal. quantile_thresh Quantile marginal track peaks called. min_umis Minimal number UMIs call peak. split_peaks Split peaks longer max_peak_size smaller peaks using split_long_peaks. target_size target size peaks. max_peak_size Peaks size splitted smaller peaks. very_long Peaks size splitted arbitrarily smaller peaks fitting best offset. min_peak_size Peaks size discarded. genome Genome name, 'hg19' 'mm10'. NULL - current misha database used. seed random seed reproducibility (misha::gquantiles sometimes samples data)","code":""},{"path":"/reference/call_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call peaks from ATAC marginals track — call_peaks","text":"intervals set called peaks","code":""},{"path":"/reference/call_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call peaks from ATAC marginals track — call_peaks","text":"","code":"if (FALSE) { peaks <- call_peaks(\"pbmc_atac.marginal\", quantile_thresh = 0.9, min_umis = 8, max_peak_size = 600, genome = \"hg38\") }"},{"path":"/reference/download_pbmc_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example data from 10x — download_pbmc_example_data","title":"Download example data from 10x — download_pbmc_example_data","text":"Download following dataset 10x site: PBMC healthy donor - granulocytes removed cell sorting (10k) Link: https://support.10xgenomics.com/single-cell-multiome-atac-gex/datasets/1.0.0/pbmc_granulocyte_sorted_10k File: Filtered feature barcode matrix MEX (DIR)","code":""},{"path":"/reference/download_pbmc_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example data from 10x — download_pbmc_example_data","text":"","code":"download_pbmc_example_data(dir = \"pbmc_data\")"},{"path":"/reference/download_pbmc_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download example data from 10x — download_pbmc_example_data","text":"dir directory download data ","code":""},{"path":"/reference/download_pbmc_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download example data from 10x — download_pbmc_example_data","text":"","code":"if (FALSE) { download_pbmc_example_data() }"},{"path":"/reference/export_atac_clust_misha.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"generate track metacell cluster, form track_prefix.name, names given clust_names","code":""},{"path":"/reference/export_atac_clust_misha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"","code":"export_atac_clust_misha(   mc_atac,   track_prefix,   description = NULL,   clust_vec = NULL,   normalization = \"none\",   parallel = FALSE,   num_cores = NULL )"},{"path":"/reference/export_atac_clust_misha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"track_prefix prefix generated misha tracks. description (optional) description tracks (can glue-formatted expression) clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) parallel (optional) run function parallel processing num_cores (required parallel == TRUE) number cores use parallel processing mc_atac_mat metacell ATAC matrix (like mc_atac@mat)","code":""},{"path":"/reference/export_atac_clust_misha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"track_names names generated misha tracks","code":""},{"path":"/reference/export_atac_clust_ucsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"Generate ucsc genome browser file metacell cluster","code":""},{"path":"/reference/export_atac_clust_ucsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"","code":"export_atac_clust_ucsc(   mc_atac,   track_prefix,   output_dir = getwd(),   clust_vec = NULL,   normalization = \"none\" )"},{"path":"/reference/export_atac_clust_ucsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"mc_atac McATAC object track_prefix prefix generated misha tracks. output_dir (optional) name directory write files clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) normalization (optional) normalization method, either 'none', 'lfcom' (log2 fold-change median), 'zs' (Z-scores)","code":""},{"path":"/reference/export_to_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"Write McATAC ScATAC object h5ad file","code":""},{"path":"/reference/export_to_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"","code":"export_to_h5ad(object, out_file, ...)"},{"path":"/reference/export_to_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"object McATAC ScATAC object out_file name output file ... Arguments passed anndata::write_h5ad anndata AnnData() object filename Filename data file. Defaults backing file. compression See h5py filter pipeline. Options \"gzip\", \"lzf\" NULL. compression_opts See h5py filter pipeline. as_dense Sparse AnnData object write dense. Currently supports \"X\" \"raw/X\".","code":""},{"path":"/reference/export_to_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"None.","code":""},{"path":"/reference/export_to_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") export_to_h5ad(atac_sc, \"pbmc_data/atac_sc.h5ad\") }"},{"path":"/reference/filter_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter features by summary statistics — filter_features","title":"Filter features by summary statistics — filter_features","text":"Remove ATAC peaks low coverage, long etc.","code":""},{"path":"/reference/filter_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter features by summary statistics — filter_features","text":"","code":"filter_features(   scatac,   minimal_max_umi = NULL,   min_peak_length = NULL,   max_peak_length = NULL,   max_peak_density = NULL )"},{"path":"/reference/filter_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter features by summary statistics — filter_features","text":"scatac ScATAC object analyze minimal_max_umi (optional) threshold minimum maximal coverage - .e. remove peaks cell least abs_cov_thresh UMIs min_peak_length (optional) remove peaks less min_cov_thresh base-pairs long max_peak_length (optional) remove peaks min_cov_thresh base-pairs long max_peak_density (optional) remove peaks max_peak_density UMIs per 100bp","code":""},{"path":"/reference/filter_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter features by summary statistics — filter_features","text":"scatac - filtered ScATAC object","code":""},{"path":"/reference/filter_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter features by summary statistics — filter_features","text":"","code":"if (FALSE) { ## quantiles of peak lengths before filtering quantile(my_scatac@peaks$end - my_scatac@peaks$start, (0:10) / 10) my_scatac <- filter_features(scatac = my_scatac, minimal_max_umi = 3, min_peak_length = 200, max_peak_length = 1000)  ## quantiles of peak lengths after filtering quantile(my_scatac@peaks$end - my_scatac@peaks$start, (0:10) / 10) }"},{"path":"/reference/find_blacklist_overlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"Identify peaks data overlap (adjacent ?) regions blacklisted ENCODE universally high DNAse HS ChIP signal (basically mapping artifacts) See https://doi.org/10.1038/s41598-019-45839-z details","code":""},{"path":"/reference/find_blacklist_overlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"","code":"find_blacklist_overlaps(   atac = NULL,   peaks = NULL,   genome = NULL,   max_dist_to_blacklist_region = 0,   blacklist_name = \"ENCODE.blacklist\" )"},{"path":"/reference/find_blacklist_overlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"atac (optional) ScATAC McATAC object peaks (optional) intervals set check genome (optional, required checking peaks directly) genome peaks max_dist_to_blacklist_region (optional) distance nearest blacklist region still qualifies blacklisted blacklist_name name blacklist intervals use (default: \"ENCODE.blacklist\")","code":""},{"path":"/reference/find_blacklist_overlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"blacklist_overlaps - PeakIntervals object peaks identified overlapping blacklisted regions","code":""},{"path":"/reference/find_blacklist_overlaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find overlaps with ENCODE blacklists — find_blacklist_overlaps","text":"","code":"if (FALSE) { blacklist_overlaps <- find_blacklist_overlaps(atac = my_mcatac, max_dist_to_blacklist_region = 100) blacklist_overlaps <- find_blacklist_overlaps(peaks = my_peak_set, genome = \"mm10\") }"},{"path":"/reference/gen_atac_mc_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"Cluster metacells based atac profiles using k-means algorithm","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"","code":"gen_atac_mc_clust(   atac_mc,   use_prior_annot = TRUE,   k = NULL,   annot = \"cell_type\",   ... )"},{"path":"/reference/gen_atac_mc_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"atac_mc McATAC object use_prior_annot (optional) TRUE - use metacell annotation generate metacell clusters. Clusters generated based categorical field annot metadata slot McATAC object. k (optional, use_prior_annot == F) number clusters generate annot name field use use_prior_annot == T. ... Arguments passed tglkmeans::TGL_kmeans df data frame. row single observation column dimension. first column can contain id observation (id_column TRUE). metric distance metric kmeans++ seeding. can 'euclid', 'pearson' 'spearman' max_iter maximal number iterations min_delta minimal change assignments (fraction observations) continue iterating verbose display algorithm messages keep_log keep algorithm messages 'log' field id_column df's first column contains observation id reorder_func function reorder clusters. operates center orders result. e.g. reorder_func = mean calculate mean center reorder clusters accordingly. reorder_func = hclust centers ordered hclust euclidian distance correlation matrix, .e. hclust(dist(cor(t(centers)))) NULL, reordering done. hclust_intra_clusters run hierarchical clustering within cluster return ordering observations. seed seed c++ random number generator parallel cluster every cluster parallely (hclust_intra_clusters true)","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"named numeric vector specifying cluster metacell","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"","code":"if (FALSE) { ## Use \"default clustering\" - the existing annotations mc_clusters <- gen_atac_mc_clust(my_atac_mc, use_prior_annot = T)  ## Identify peaks of interest, namely peaks neighboring a set of feature genes, and use only them for clustering nei_peaks_feat_genes <- gintervals.neighbors(my_atac_mc@peaks, tss[tss$name %in% feature_genes, ], maxdist = 5e+5) peaks_of_interest <- nei_peaks_feat_genes[, c(\"chrom\", \"start\", \"end\")] mc_clusters <- gen_atac_mc_clust(my_atac_mc, k = 16, peak_set = peaks_of_interest, use_prior_annot = F) }"},{"path":"/reference/gen_atac_peak_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"Cluster atac peaks based atac distributions","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"","code":"gen_atac_peak_clust(   atac_mc,   k = NULL,   clustering_algoritm = \"kmeans\",   cluster_on = \"fp\",   peak_set = NULL,   ... )"},{"path":"/reference/gen_atac_peak_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"atac_mc McATAC object k number clusters; must specified clustering_algoritm = 'kmeans' clustering_algoritm (optional) either \"kmeans\" \"louvain\" cluster_on (optional; default - fp) matrix (mat/fp/egc)cluster ... Arguments passed tglkmeans::TGL_kmeans df data frame. row single observation column dimension. first column can contain id observation (id_column TRUE). metric distance metric kmeans++ seeding. can 'euclid', 'pearson' 'spearman' max_iter maximal number iterations min_delta minimal change assignments (fraction observations) continue iterating verbose display algorithm messages keep_log keep algorithm messages 'log' field id_column df's first column contains observation id reorder_func function reorder clusters. operates center orders result. e.g. reorder_func = mean calculate mean center reorder clusters accordingly. reorder_func = hclust centers ordered hclust euclidian distance correlation matrix, .e. hclust(dist(cor(t(centers)))) NULL, reordering done. hclust_intra_clusters run hierarchical clustering within cluster return ordering observations. seed seed c++ random number generator parallel cluster every cluster parallely (hclust_intra_clusters true)","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"named numeric vector specifying cluster peak","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"","code":"if (FALSE) { my_atac_mc <- gen_atac_peak_clust(my_atac_mc, k = 16, cluster_on = \"mat\")  dyn_p <- identify_dynamic_peaks(my_atac_mc) my_atac_mc <- gen_atac_peak_clust(my_atac_mc, k = 16, cluster_on = \"fp\", peak_set = dyn_p) }"},{"path":"/reference/gen_promoter_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Select only peaks that are close to a gene promoter — gen_promoter_features","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"Select peaks close gene promoter. case alternative promoters multiple peaks close promoter, reads peaks promoters summed.","code":""},{"path":"/reference/gen_promoter_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"","code":"gen_promoter_features(   atac,   upstream = 500,   downstream = 50,   tss_intervals = \"intervs.global.tss\",   id_field = \"geneSymbol\" )"},{"path":"/reference/gen_promoter_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"atac McATAC ScATAC object upstream bp upstream TSS downstream bp downstread tss tss_intervals name intervals set TSS id_field field tss_intervals containing gene names. Default: \"geneSymbol\"","code":""},{"path":"/reference/gen_promoter_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"McATAC ScATAC object new peaks sum peaks within defined promoters. rownames atac@mat field 'peak_name' atac@peaks contain name promoter (id_field). Note previous peak metadata previous ignored peaks dropped.","code":""},{"path":"/reference/gen_promoter_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select only peaks that are close to a gene promoter — gen_promoter_features","text":"","code":"if (FALSE) { atac_mc_promoters <- gen_promoter_features(atac_mc) }"},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"Generate random genome motif PSSM matrix","code":""},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"","code":"gen_random_genome_peak_motif_matrix(   num_peaks = 100000,   peak_width = 200,   bp_from_chrom_edge_to_avoid = 3000000,   datasets_of_interest = NULL,   motif_regex = NULL,   motif_tracks = NULL,   parallel = TRUE )"},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"num_peaks total number intervals (divided proportionately chromosomes) use background peak_width (optional) - size region around peak centers extract motif energies bp_from_chrom_edge_to_avoid regions (bp) edges chromosomes avoid sampling (e.g. avoid acrocentric centromeres) datasets_of_interest (optional) - names pssm datasets (name.key-name.data file combinations) calculate PSSM values motif_regex (optional) - vector regular expressions match motif track names extract motif PSSMs motif_tracks (optional) - misha track names extract motif PSSMs parallel (optional) - whether use parallel computations","code":""},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"matrix peaks (rows) vs. aggregated motif energies (columns)","code":""},{"path":"/reference/gen_random_genome_peak_motif_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random genome motif PSSM matrix — gen_random_genome_peak_motif_matrix","text":"","code":"if (FALSE) { random_genome_motifs <- gen_random_genome_peak_motif_matrix(num_peaks = 5e+4, datasets_of_interest = get_available_pssms(return_datasets_only = TRUE)) }"},{"path":"/reference/generate_motif_pssm_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate peak-motif matrix — generate_motif_pssm_matrix","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"function calculates aggregated log-PSSM energies (derived misha package's create_pssm_energy module) set peaks (default - peaks dataset) set motifs (default - available)","code":""},{"path":"/reference/generate_motif_pssm_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"","code":"generate_motif_pssm_matrix(   atac = NULL,   peak_set = NULL,   peak_width = 200,   pssm_path = NULL,   datasets_of_interest = NULL,   motif_tracks = NULL,   motif_regex = NULL,   parallel = FALSE,   nc = parallel::detectCores() )"},{"path":"/reference/generate_motif_pssm_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"atac ScATAC/McATAC PeakIntervals object peak_width (optional) - size region around peak centers extract motif energies pssm_path (optional) - path directory containing misha-formatted pssm files (e.g. motifs.key motifs.data) datasets_of_interest (optional) - names pssm datasets (name.key-name.data file combinations) calculate PSSM values motif_tracks (optional) - misha track names extract motif PSSMs motif_regex (optional) - vector regular expressions match motif track names extract motif PSSMs parallel (optional) - whether use parallel computations nc (optional) - number cores use parallel computations","code":""},{"path":"/reference/generate_motif_pssm_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"matrix peaks (rows) vs. aggregated motif energies (columns)","code":""},{"path":"/reference/generate_motif_pssm_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate peak-motif matrix — generate_motif_pssm_matrix","text":"","code":"if (FALSE) { peak_motif_mat <- generate_motif_pssm_matrix(     peak_set = head(scatac@peaks),     motif_regex = c(\"Bcl\", \"Atf\"),     datasets_of_interest = c(\"homer\", \"jaspar\", \"jolma\"),     parallel = F ) }"},{"path":"/reference/get_available_pssms.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"Function validating pssm_path getting /selected PSSM datasets tracks path/gdb","code":""},{"path":"/reference/get_available_pssms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"","code":"get_available_pssms(   pssm_path = NULL,   datasets_of_interest = NULL,   return_datasets_only = FALSE )"},{"path":"/reference/get_available_pssms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"pssm_path (optional) - path misha pssm datasets (.key-.data file combinations), need specify misha gdb set correctly datasets_of_interest (optional) - pssm datasets get available pssms . Available datasets can obtained calling function return_datasets_only = TRUE return_datasets_only (optional) - whether return available pssm datasets","code":""},{"path":"/reference/get_available_pssms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"either: 1) (default) list containing list names list corresponding dataframes motif datasets available, 2) return_datasets_only == TRUE, just names available motif datasets","code":""},{"path":"/reference/get_available_pssms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for validating pssm_path and getting all/selected PSSM datasets and tracks from path/gdb — get_available_pssms","text":"","code":"if (FALSE) { pssm_datasets <- get_available_pssms(return_datasets_only = TRUE) all_pssms <- get_available_pssms() all_pssms <- get_available_pssms(datasets_of_interest = pssm_datasets) all_pssms_jaspar_homer <- get_available_pssms(datasets_of_interest = c(\"jaspar\", \"homer\")) }"},{"path":"/reference/get_genes_atac_fp.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"function returns relative fold change matrix ATAC peaks list genes matched using rna_atac_cor_knn.","code":""},{"path":"/reference/get_genes_atac_fp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"","code":"get_genes_atac_fp(   atac_mc,   genes = NULL,   metacells = NULL,   rm_zeros = TRUE,   spearman = TRUE,   pairwise.complete.obs = TRUE )"},{"path":"/reference/get_genes_atac_fp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"atac_mc McATAC object genes list genes. rm_zeros remove genes RNA expression metacell. Default: TRUE spearman 'TRUE' Spearman correlation computed, otherwise Pearson pairwise.complete.obs see metacell select subset metacells.","code":""},{"path":"/reference/get_genes_atac_fp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a relative fold change matrix of ATAC peaks for a list of genes — get_genes_atac_fp","text":"","code":"if (FALSE) { marker_genes <- get_rna_markers(atac_mc) atac_fp <- get_genes_atac_fp(atac_mc, genes = marker_genes) rna_fp <- get_rna_marker_matrix(atac_mc, genes = marker_genes) }"},{"path":"/reference/get_peak_coverage_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"peak, calculate: cov: total number UMIs peak max_cov: maximal per-cell coverage peak len: length peak cov_density: number UMIs number UMIs per scale bp.","code":""},{"path":"/reference/get_peak_coverage_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"","code":"get_peak_coverage_stats(atac, scale = 100)"},{"path":"/reference/get_peak_coverage_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"atac ScATAC McATAC object scale 'cov_density' field, calculate number UMIs per scale bp (default: 100)","code":""},{"path":"/reference/get_peak_coverage_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"data frame peaks, length ('len'), total coverage ('cov'), maximal per-cell coverage ('max_cov') coverage density ('cov_density')","code":""},{"path":"/reference/get_peak_coverage_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate coverage statistics of the peaks — get_peak_coverage_stats","text":"","code":"if (FALSE) { get_peak_coverage_stats(atac) }"},{"path":"/reference/get_promoter_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"Get names peaks close gene promoter","code":""},{"path":"/reference/get_promoter_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"","code":"get_promoter_peaks(   peaks,   gene,   max_dist_to_promoter_peak = 500,   tss_intervals = \"intervs.global.tss\" )"},{"path":"/reference/get_promoter_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"peaks PeakIntervals object gene gene name, e.g. \"CD4\" max_dist_to_promoter_peak far gene's TSS search promoter-proximal peaks. Default: 500 tss_intervals name intervals set containing TSSs","code":""},{"path":"/reference/get_promoter_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"names peaks close gene's promoter. peaks found, NULL returned.","code":""},{"path":"/reference/get_promoter_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of the peaks close to a gene promoter — get_promoter_peaks","text":"","code":"if (FALSE) { get_promoter_peaks(mc_atac@peaks, \"CD4\") }"},{"path":"/reference/get_quantile_cov_thresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"Threshold calculated taking maximum quantile_thresh quantile ATAC marginal min_umis.","code":""},{"path":"/reference/get_quantile_cov_thresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"","code":"get_quantile_cov_thresh(   marginal_track,   quantile_thresh,   min_umis,   genome = NULL,   seed = 60427 )"},{"path":"/reference/get_quantile_cov_thresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"marginal_track Name 'misha' track call peaks . can create using import_atac_marginal. quantile_thresh Quantile threshold use. min_umis Minimum number UMIs use. genome Genome name, 'hg19' 'mm10'. NULL - current genome used. seed random seed reproducibility (misha::gquantiles sometimes samples data.","code":""},{"path":"/reference/get_quantile_cov_thresh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"number UMIs use calling peaks.","code":""},{"path":"/reference/get_quantile_cov_thresh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the threshold for calling peaks — get_quantile_cov_thresh","text":"","code":"if (FALSE) { get_quantile_cov_thresh(\"pbmc_atac.marginal\", quantile_thresh = 0.9, min_umis = 8, genome = \"hg38\") }"},{"path":"/reference/get_rna_egc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the normalized RNA expression matrix (egc) from a McATAC object — get_rna_egc","title":"Get the normalized RNA expression matrix (egc) from a McATAC object — get_rna_egc","text":"Get RNA expression data, normalized total RNA expression metacell.","code":""},{"path":"/reference/get_rna_egc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the normalized RNA expression matrix (egc) from a McATAC object — get_rna_egc","text":"","code":"get_rna_egc(atac_mc, genes = NULL, rm_zeros = TRUE, epsilon = 0.00001)"},{"path":"/reference/get_rna_egc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the normalized RNA expression matrix (egc) from a McATAC object — get_rna_egc","text":"atac_mc McATAC object RNA expression (using add_mc_rna) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression","code":""},{"path":"/reference/get_rna_egc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the normalized RNA expression matrix (egc) from a McATAC object — get_rna_egc","text":"matrix normalized RNA expression values gene (rows) metacell (columns)","code":""},{"path":"/reference/get_rna_egc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the normalized RNA expression matrix (egc) from a McATAC object — get_rna_egc","text":"","code":"if (FALSE) { rna_mat <- get_rna_egc(atac_mc) rna_mat <- get_rna_egc(atac_mc, genes = c(\"MESP1\", \"MESP2\", \"PF4\")) rna_mat <- get_rna_egc(atac_mc, rm_zeros = FALSE) }"},{"path":"/reference/get_rna_fp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"function first transforms UMI matrix fractions per metacell, calculates enrichment gene median (dividing gene expression median).","code":""},{"path":"/reference/get_rna_fp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"","code":"get_rna_fp(atac_mc, genes = NULL, rm_zeros = TRUE, epsilon = 0.00001)"},{"path":"/reference/get_rna_fp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"atac_mc McATAC object RNA expression (using add_mc_rna) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression","code":""},{"path":"/reference/get_rna_fp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"matrix normalized counts gene expression gene (rows) metacell (columns)","code":""},{"path":"/reference/get_rna_fp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get enrichment of normalized counts of gene expression over the median — get_rna_fp","text":"","code":"if (FALSE) { get_rna_fp(atac_mc) get_rna_fp(atac_mc, \"GNLY\") get_rna_fp(atac_mc, \"GNLY\", epsilon = NULL) }"},{"path":"/reference/get_rna_marker_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get enrichment matrix for marker genes — get_rna_marker_matrix","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"Get enrichment matrix marker genes","code":""},{"path":"/reference/get_rna_marker_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"","code":"get_rna_marker_matrix(   atac_mc,   markers = NULL,   force_cell_type = TRUE,   rm_zeros = TRUE,   epsilon = 0.00001,   ... )"},{"path":"/reference/get_rna_marker_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"atac_mc McATAC object RNA expression (using add_mc_rna) markers list marker genes. NULL - function uses get_rna_markers default parameters can overridden using ellipsis .... force_cell_type split cell types ordering metacells. Default: TRUE rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression ... Arguments passed get_rna_markers n_genes maximal number genes return. Default: 1000 minimal_max_log_fraction take genes least one value (log fraction units - normalized egc) threshold minimal_relative_log_fraction take genes least one value relative log fraction (mc_fp) value fold_change_reg regularization factor fold change calculation (fold_change changed fold_change = fold_change + fold_change_reg) genes list genes match. Default (NULL): genes","code":""},{"path":"/reference/get_rna_marker_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"matrix log2 normalized counts gene expression marker gene (rows) metacell (columns). columns columns clustered using hclust \"ward\" linkage, euclidean distance pearson correlation matrix columns. , gene highest number metacells fold change (abs) 1 (gene1) selected together gene anti-correlated (gene2), hclust ordered using difference (gene1 - gene2). force_cell_type TRUE atac_mc@metadata field named \"cell_type\", columns ordered within cell type.","code":""},{"path":"/reference/get_rna_marker_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get enrichment matrix for marker genes — get_rna_marker_matrix","text":"","code":"if (FALSE) { marker_mat <- get_rna_marker_matrix(atac_mc) marker_mat <- get_rna_marker_matrix(atac_mc, n_genes = 100) }"},{"path":"/reference/get_rna_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene markers of metacells gene expression — get_rna_markers","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"function first removes genes without sufficient expression metacell minimal_max_log_fraction, without sufficient fold change median (minimal_relative_expression), ranks fold change genes within metacell. markers genes highest rank, n_genes genes.","code":""},{"path":"/reference/get_rna_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"","code":"get_rna_markers(   atac_mc,   n_genes = 100,   minimal_max_log_fraction = -13,   minimal_relative_log_fraction = 2,   fold_change_reg = 0.1,   genes = NULL,   rm_zeros = TRUE,   epsilon = 0.00001 )"},{"path":"/reference/get_rna_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"atac_mc McATAC object RNA expression (using add_mc_rna) n_genes maximal number genes return. Default: 1000 minimal_max_log_fraction take genes least one value (log fraction units - normalized egc) threshold minimal_relative_log_fraction take genes least one value relative log fraction (mc_fp) value fold_change_reg regularization factor fold change calculation (fold_change changed fold_change = fold_change + fold_change_reg) genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE epsilon regularization factor added log normalized expression","code":""},{"path":"/reference/get_rna_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate gene markers of metacells gene expression — get_rna_markers","text":"","code":"if (FALSE) { get_rna_markers(atac_mc) }"},{"path":"/reference/has_cell_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the McATAC object contain per-metacell cell type annotation — has_cell_type","title":"Does the McATAC object contain per-metacell cell type annotation — has_cell_type","text":"McATAC object contain per-metacell cell type annotation","code":""},{"path":"/reference/has_cell_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the McATAC object contain per-metacell cell type annotation — has_cell_type","text":"","code":"has_cell_type(mc_atac)"},{"path":"/reference/has_cell_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the McATAC object contain per-metacell cell type annotation — has_cell_type","text":"mc_atac McATAC object","code":""},{"path":"/reference/has_cell_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the McATAC object contain per-metacell cell type annotation — has_cell_type","text":"TRUE McATAC object contains per-metacell cell type annotation, FALSE otherwise","code":""},{"path":"/reference/has_cell_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the McATAC object contain per-metacell cell type annotation — has_cell_type","text":"","code":"if (FALSE) { has_cell_type(atac_mc) }"},{"path":"/reference/has_cell_type_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the McATAC object contain cell type color annotation — has_cell_type_colors","title":"Does the McATAC object contain cell type color annotation — has_cell_type_colors","text":"McATAC object contain cell type color annotation","code":""},{"path":"/reference/has_cell_type_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the McATAC object contain cell type color annotation — has_cell_type_colors","text":"","code":"has_cell_type_colors(mc_atac)"},{"path":"/reference/has_cell_type_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the McATAC object contain cell type color annotation — has_cell_type_colors","text":"mc_atac McATAC object","code":""},{"path":"/reference/has_cell_type_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the McATAC object contain cell type color annotation — has_cell_type_colors","text":"TRUE McATAC object contains cell type color annotation, FALSE otherwise","code":""},{"path":"/reference/has_cell_type_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the McATAC object contain cell type color annotation — has_cell_type_colors","text":"","code":"if (FALSE) { has_cell_type_color(atac_mc) }"},{"path":"/reference/has_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the McATAC object contain per-metacell gene expression data? — has_rna","title":"Does the McATAC object contain per-metacell gene expression data? — has_rna","text":"McATAC object contain per-metacell gene expression data?","code":""},{"path":"/reference/has_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the McATAC object contain per-metacell gene expression data? — has_rna","text":"","code":"has_rna(mc_atac)"},{"path":"/reference/has_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the McATAC object contain per-metacell gene expression data? — has_rna","text":"mc_atac McATAC object","code":""},{"path":"/reference/has_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the McATAC object contain per-metacell gene expression data? — has_rna","text":"TRUE McATAC object contains per-metacell gene expression data, FALSE otherwise","code":""},{"path":"/reference/has_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the McATAC object contain per-metacell gene expression data? — has_rna","text":"","code":"if (FALSE) { has_rna(mc_atac) }"},{"path":"/reference/identify_dynamic_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find dynamic peaks in McATAC matrix — identify_dynamic_peaks","title":"Find dynamic peaks in McATAC matrix — identify_dynamic_peaks","text":"function identifies \"dynamic\" peaks, .e. high expression subset cells. identified overdispersion coefficient variation (std.dev./mean) per quantiles.","code":""},{"path":"/reference/identify_dynamic_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find dynamic peaks in McATAC matrix — identify_dynamic_peaks","text":"","code":"identify_dynamic_peaks(   mcatac,   method = \"bmq\",   plot = TRUE,   mean_thresh_q = 0.1,   cov_q_thresh = 0.75,   num_bins = 200,   gmm_g = 4 )"},{"path":"/reference/identify_dynamic_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find dynamic peaks in McATAC matrix — identify_dynamic_peaks","text":"mcatac McATAC object analyze method (optional) either 'bmq' (default) 'gmm'; 'bmq' (binned-mean quantiles) bins log-mean peaks (averaged across metacells) selects peaks coefficient variation quantile bin. controlled 'gmm' fits Gaussian mixture model log10(COV) vs. log10(mean) distribution, selects peaks clusters show overdispersion COV. plot plot peak mean vs coefficient variation (log10 scale). Note highly recommended look scatter plot proceeding, set parameter FALSE made sure scatter looks reasonable. mean_thresh_q (optional) threshold quantile peaks' mean cov_q_thresh (optional) threshold minimum COV quantile consider dynamic bin num_bins (optional) number bins divide features' means gmm_g (optional) number groups 'gmm'","code":""},{"path":"/reference/identify_dynamic_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find dynamic peaks in McATAC matrix — identify_dynamic_peaks","text":"PeakIntervals object peaks identified dynamic. plot = TRUE selected points plotted.","code":""},{"path":"/reference/identify_dynamic_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find dynamic peaks in McATAC matrix — identify_dynamic_peaks","text":"","code":"if (FALSE) { dynamic_peaks_by_bmq <- identify_dynamic_peaks(mcatac, method = \"bmq\", mean_thresh_q = 0.1, cov_q_thresh = 0.6, num_bins = 100) dynamic_peaks_by_gmm <- identify_dynamic_peaks(mcatac, method = \"gmm\", gmm_g = 3) }"},{"path":"/reference/import_atac_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Import marginal of ATAC counts to a misha track — import_atac_marginal","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"Import marginal ATAC counts misha track","code":""},{"path":"/reference/import_atac_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"","code":"import_atac_marginal(   file,   track,   description,   genome,   binsize = 20,   overwrite = FALSE,   wig_temp_dir = tempdir() )"},{"path":"/reference/import_atac_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"file Name 'bigwig' file import, 'atac_cut_sites.bigwig' 10x pipeline. details, see: https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/output/bigwig track Name track create. description character string description genome Genome name, 'hg19' 'mm10'. binsize bin size newly created 'Dense' track '0' 'Sparse' track overwrite Overwrite existing track exists. wig_temp_dir Temporary directory store intermediate wig files.","code":""},{"path":"/reference/import_atac_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import marginal of ATAC counts to a misha track — import_atac_marginal","text":"","code":"if (FALSE) { import_atac_marginal(\"./atac_cut_sites.bigwig\", \"pbmc_atac.marginal\", \"Marignal counts from PBMC ATAC\", genome = \"hg38\") }"},{"path":"/reference/import_from_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScATAC object from 10x directory — import_from_10x","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"Create ScATAC object 10x directory","code":""},{"path":"/reference/import_from_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"","code":"import_from_10x(   dir,   genome,   id = NULL,   description = NULL,   metadata = NULL,   matrix_fn = file.path(dir, \"matrix.mtx\"),   cells_fn = file.path(dir, \"barcodes.tsv\"),   features_fn = file.path(dir, \"features.tsv\") )"},{"path":"/reference/import_from_10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"dir 10x directory. following files: 'matrix.mtx', 'barcodes.tsv' 'features.tsv'. used 'Cell Ranger ARC', 'outs/filtered_feature_bc_matrix' directory.  details see: https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/overview/welcome genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". NULL - random id assigned. description (Optional) description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\". metadata (Optional) data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. matrix_fn dir missing, filename matrix import (\"matrix.mtx\" \"matrix.mtx.gz\") cells_fn dir missing, filename cells import (\"barcodes.tsv\" \"barcodes.tsv.gz\") features_fn dir missing, filename features import (\"features.tsv\" \"features.tsv.gz\")","code":""},{"path":"/reference/import_from_10x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"ScATAC object","code":""},{"path":"/reference/import_from_10x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"","code":"if (FALSE) { atac <- import_from_10x(\"./pbmc_data\", genome = \"hg38\") atac }"},{"path":"/reference/import_from_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"Reads ATAC object h5ad file. Peak data taken 'X' section metadata taken 'obs'. 'var' section can contain special field called 'ignore' marks peaks ignored.","code":""},{"path":"/reference/import_from_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"","code":"import_from_h5ad(   file,   class = NULL,   genome = NULL,   id = NULL,   description = NULL )"},{"path":"/reference/import_from_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"file name h5ad file ATAC data class file storing ScATAC McATAC. NULL - class determined 'class' field 'uns' part h5ad file, exists otherwise class McATAC. genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\". NULL - assembly determined 'genome' field 'uns' part h5ad file. id identifier object, e.g. \"pbmc\". NULL - id determined 'id' field 'uns' part h5ad file, exist - random id assigned. description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\". NULL - id determined 'description' field 'uns' part h5ad file","code":""},{"path":"/reference/import_from_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"ScATAC/McATAC object","code":""},{"path":"/reference/import_from_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") export_to_h5ad(atac_sc, \"pbmc_data/atac_sc.h5ad\") atac_sc_loaded <- import_from_h5ad(\"pbmc_data/atac_sc.h5ad\") }"},{"path":"/reference/initialize-McATAC-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new McATAC object — initialize,McATAC-method","title":"Construct a new McATAC object — initialize,McATAC-method","text":"McATAC shallow object holding ATAC data metacells. Minimally include count matrix peaks metacells, PeakIntervals hold coordinates peaks.","code":""},{"path":"/reference/initialize-McATAC-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new McATAC object — initialize,McATAC-method","text":"","code":"# S4 method for McATAC initialize(   .Object,   mat,   peaks,   genome,   id = NULL,   description = NULL,   metadata = NULL,   cell_to_metacell = NULL,   mc_size_eps_q = 0.1,   path = \"\" )"},{"path":"/reference/initialize-McATAC-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new McATAC object — initialize,McATAC-method","text":"mat numeric matrix rows peaks columns metacells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k), projection done using RNA metacells\" metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. cell_to_metacell data frame mapping 'cell_id' 'metacell' (optional). See project_atac_on_mc mc_size_eps_q (optional) quantile MC size (UMIs) scale number UMIs per metacell. \\(egc_ij\\) fraction peak metacell j multiplied mc_size_eps_q quantile metacell sizes. path path object loaded (optional)","code":""},{"path":"/reference/initialize-ScATAC-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new ScATAC object — initialize,ScATAC-method","title":"Construct a new ScATAC object — initialize,ScATAC-method","text":"ScATAC shallow object holding ATAC data cells. Minimally include count matrix peaks cells, PeakIntervals hold coordinates peaks.","code":""},{"path":"/reference/initialize-ScATAC-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new ScATAC object — initialize,ScATAC-method","text":"","code":"# S4 method for ScATAC initialize(   .Object,   mat,   peaks,   genome,   id = NULL,   description = NULL,   metadata = NULL,   path = \"\" )"},{"path":"/reference/initialize-ScATAC-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new ScATAC object — initialize,ScATAC-method","text":"mat numeric matrix rows peaks columns cells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" id identifier object, e.g. \"pbmc\". description description object, e.g. \"PBMC healthy donor - granulocytes removed cell sorting (10k)\" metadata data frame column called 'cell_id' additional per-cell annotations, name delimited file contains annotations. path path object loaded (optional)","code":""},{"path":"/reference/mcATAC-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcATAC: Metacell analysis for ATAC data — mcATAC-package","title":"mcATAC: Metacell analysis for ATAC data — mcATAC-package","text":"Metacell analysis ATAC data","code":""},{"path":[]},{"path":"/reference/mcATAC-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcATAC: Metacell analysis for ATAC data — mcATAC-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Yonatan Shapira yonatan.shapira@weizmann.ac.il","code":""},{"path":"/reference/peak_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the names of PeakIntervals — peak_names","title":"Return the names of PeakIntervals — peak_names","text":"Return names PeakIntervals","code":""},{"path":"/reference/peak_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the names of PeakIntervals — peak_names","text":"","code":"peak_names(peaks, promoters = FALSE)"},{"path":"/reference/peak_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the names of PeakIntervals — peak_names","text":"peaks PeakIntervals object misha intervals promoters peaks promoters? true, peak names (gene names) returned.","code":""},{"path":"/reference/peak_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the names of PeakIntervals — peak_names","text":"field called 'peak_name' exists peaks, coordinates seperated underscore.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"Plot correlation matrix ATAC metacells","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"","code":"plot_atac_atac_cor(mc_atac, sp_f = TRUE)"},{"path":"/reference/plot_atac_atac_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"mc_atac McATAC object sp_f whether use Spearman correlation (default) Pearson","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"p pheatmap ATAC metacell correlations","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"","code":"if (FALSE) { p1 <- plot_atac_atac_cor(my_atac_mc) p2 <- plot_atac_atac_cor(my_atac_mc, sp_f = F) }"},{"path":"/reference/plot_atac_peak_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"Plot normalized accessibility peaks metacells, ordered clustering","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"","code":"plot_atac_peak_map(   mc_atac,   mc_atac_clust = NULL,   peak_clust = NULL,   peak_annotation = NULL,   filename = NULL,   dev = png,   main = mc_atac@id,   colors = colorRampPalette(c(\"blue4\", \"white\", \"red4\"))(100),   ... )"},{"path":"/reference/plot_atac_peak_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"mc_atac McATAC object mc_atac_clust output gen_atac_mc_clust (meaningful visuals, make sure ordered cluster) peak_clust output gen_atac_peak_clust clustering peaks (meaningful visuals, make sure ordered cluster) peak_annotation (optional) list named vector dataframe conforming pheatmap annotation_colors annotation_row conventions filename (optional) path filename save figure; unspecified, figure saved dev (optional; default - png) graphical device save figure colors (optional) colorRampPalette vector colors scaling colors heatmap ... Arguments passed save_pheatmap width width device. height height device. res nominal resolution ppi recorded     bitmap file, positive integer.  Also used units     default, convert points pixels.","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"pheatmap figure.","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"","code":"if (FALSE) { peak_clust <- gen_atac_peak_clust(my_mcatac, 16) plot_atac_peak_map(my_mcatac, order(my_mcatac@metadata$cell_type), order(peak_clust), \"./my_figures/my_mcatac_heatmap.png\")  ## Peak annotation example is_dyn <- setNames(as.numeric(rownames(my_mcatac@mat) %in% my_mcatac_dynamic_peaks_only@peaks$peak_name), rownames(my_mcatac@mat)) pa1 <- list(\"is_dyn\" = setNames(c(\"black\", \"red\"), c(0, 1))) pa2 <- tibble::column_to_rownames(enframe(is_dyn, name = \"peak_name\", value = \"is_dyn\"), \"peak_name\") pa <- list(pa1, pa2) plot_atac_peak_map(my_mcatac, mc_atac_clust = order(my_mcatac@metadata$cell_type), peak_annotation = pa) }"},{"path":"/reference/plot_atac_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"Plot scatter gene expression vs atac profile","code":""},{"path":"/reference/plot_atac_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"","code":"plot_atac_rna(   mc_atac,   gene,   atac_promoter = gene,   mc_rna = NULL,   peak = NULL,   max_dist_to_promoter_peak = 500,   normalize_atac = TRUE,   eps_rna = 0.00001,   tss_intervals = \"intervs.global.tss\",   plot_object_id = TRUE )"},{"path":"/reference/plot_atac_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"mc_atac McATAC object gene name gene plot atac_promoter name promoter plot. default rna gene gene. mc_rna metacell1 'mc' object metacells metacell UMI matrix (matrix row gene column metacell). Can NULL mc_atac already contains gene expression data (added add_mc_rna). peak name peak plot. NULL - promoter atac_promoter shown. can get peak names atac@peaks$peak_name max_dist_to_promoter_peak far gene's TSS search promoter-proximal peaks. Default: 500 normalize_atac whether use normalized atac profiles (default: TRUE) eps_rna added regularization calculating log expression (Default: 1e-5). Promoter ATAC signal observed empirically often linearly correlated log gene expression. tss_intervals name intervals set containing TSSs plot_object_id plot object id mc_atac object bottom left corner plot (default: TRUE)","code":""},{"path":"/reference/plot_atac_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"ggplot object scatter plot","code":""},{"path":"/reference/plot_atac_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"","code":"if (FALSE) { p1 <- plot_atac_rna(mc_atac = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\")  p2 <- plot_atac_rna(mc_atac = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\", atac_promoter = \"CD8\")  # Plot gene vs some peak of interest peak <- mc_atac@peaks[1]$peak_name p3 <- plot_atac_rna(mc_atac = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\", peak = peak) }"},{"path":"/reference/plot_atac_rna_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"use peak gene annotations match RNA metacells ATAC metacells plot cross-correlation matrix.","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"","code":"plot_atac_rna_cor(mc_atac, rna_mat, gene_field = NULL, tss_dist = 500)"},{"path":"/reference/plot_atac_rna_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"mc_atac McATAC object rna_mat RNA metacell count matrix, metacells columns genes rows gene_field (optional) either closest_tss closest_exon_gene -- field names mc_atac@peaks contain gene names. NULL - peaks transformed promoter peaks gene names taken promoter gene names. tss_dist (optional) maximal absolute distance TSS considered promoter peak","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"pheatmap object","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"","code":"if (FALSE) { # Plot correlation of ATAC promoter peaks vs. log2 gene expression fraction (regularized) arc_prom <- plot_atac_rna_cor(mc_atac = mc_atac, rna_mat = log2(atac_mc@rna_egc + 1e-05))  # Plot correlation of all available ATAC peaks (whose nearest TSS is of an expressed gene) vs. log2 gene expression fraction (regularized) of that gene arc_tss <- plot_atac_rna_cor(mc_atac = mc_atac, rna_mat = log2(atac_mc@rna_egc + 1e-05), gene_field = \"closest_tss\")  # Plot correlation of all available ATAC peaks (whose nearest exon is of an expressed gene) vs. log2 gene expression fraction (regularized) of that gene arc_exon <- plot_atac_rna_cor(mc_atac = mc_atac, rna_mat = log2(atac_mc@rna_egc + 1e-05), gene_field = \"closest_exon_gene\") }"},{"path":"/reference/plot_atac_rna_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"plot rna marker heatmap (right) together heatmap fold change ATAC peaks correlated marker gene (left, using get_genes_atac_fp).","code":""},{"path":"/reference/plot_atac_rna_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"","code":"plot_atac_rna_markers(   atac_mc,   n_genes = 100,   force_cell_type = TRUE,   plot_legend = TRUE,   row_names = FALSE,   ... )"},{"path":"/reference/plot_atac_rna_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"atac_mc McATAC object RNA expression (using add_mc_rna) n_genes maximal number genes return. Default: 1000 force_cell_type split cell types ordering metacells. Default: TRUE plot_legend TRUE plot legend cell types (default: TRUE) row_names show row names heatmaps. Note space plot takes might become uneven due genes / peaks longer names. ... Arguments passed plot_rna_markers_mat mat heatmap marker genes fold change metacells (e.g. output get_rna_marker_matrix) metacell_types data frame field called \"metacell\" field called \"cell_type\" (optional) cell_type_colors data frame field called \"cell_type\" field called \"color\" (optional) low_color color low fold change high_color color high fold change mid_color color mid fold change midpoint midpoint color scale (default: 0) min_lfp minimum log2 fold change (default: -3). Value set min_lfp. max_lfp maximum log2 fold change (default: 3). Value set max_lfp. top_cell_type_bar add cell type annotation also top heatmap (default: TRUE) gene_colors named list color marker gene (optional) col_names show column names (metacells) interleave show gene names (rows) interleaved annotation_title title cell type annotation. Default: \"Cell type\" top_annotation_title title top cell type annotation. Default: \"Cell type\" title title plot col_names_orient Orientation X-axis label plot_right Whether put Y-axis labels right side heatmap (well left hand side)","code":""},{"path":"/reference/plot_atac_rna_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"ggplot object heatmap RNA markers (right) heatmap ATAC peaks (left). ATAC matrix ordered RNA matrix. ggplot object heatmaps","code":""},{"path":"/reference/plot_atac_rna_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot RNA and ATAC marker matrix side by side — plot_atac_rna_markers","text":"","code":"if (FALSE) { plot_atac_rna_markers(atac_mc) plot_atac_rna_markers(atac_mc, force_cell_type = FALSE) plot_atac_rna_markers(atac_mc, n_genes = 200) }"},{"path":"/reference/plot_marginal_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marginal coverage of an interval — plot_marginal_coverage","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"Plot marginal coverage interval, peaks marked (optionally).","code":""},{"path":"/reference/plot_marginal_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"","code":"plot_marginal_coverage(   marginal_track,   interval,   peaks = NULL,   expand = 1000,   show_thresh = TRUE,   quantile_thresh = 0.9,   min_umis = 8,   genome = NULL,   seed = 60427,   thresh = get_quantile_cov_thresh(marginal_track, quantile_thresh, min_umis, genome =     genome, seed = seed),   log_scale = TRUE )"},{"path":"/reference/plot_marginal_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"marginal_track Name 'misha' track plot. can create using import_atac_marginal. interval interval plot. peaks intervals set peaks mark, e.g. output call_peaks. expand Expand plotting area number bp. quantile_thresh, min_umis paramters needed calculate threshold. See call_peaks. genome Genome name, 'hg19' 'mm10'. NULL - current misha database used. thresh Threshold use. NULL - threshold calculated using get_quantile_cov_thresh. log_scale Use log scale y axis. show_threshold Show coverage threshold dashed line.","code":""},{"path":"/reference/plot_marginal_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marginal coverage of an interval — plot_marginal_coverage","text":"","code":"if (FALSE) { peaks_raw <- call_peaks(\"pbmc_atac.marginal\", split_peaks = FALSE, quantile_thresh = 0.9, min_umis = 8, max_peak_size = 600, genome = \"hg38\") peaks_split <- call_peaks(\"pbmc_atac.marginal\", split_peaks = TRUE, target_size = 500, quantile_thresh = 0.9, min_umis = 8, max_peak_size = 600, genome = \"hg38\") plot_marginal_coverage(\"pbmc_atac.marginal\", interval = peaks_raw[967, ], peaks = peaks_split, expand = 1000, show_thresh = TRUE, quantile_thresh = 0.9, min_umis = 8, genome = \"hg38\")  # cache the threshold in order to plot multiple intervals thresh <- get_quantile_cov_thresh(\"pbmc_atac.marginal\", 0.9, 8, genome = \"hg38\", seed = 60427) plot_marginal_coverage(\"pbmc_atac.marginal\", interval = peaks_raw[967, ], peaks = peaks_split, expand = 1000, show_thresh = TRUE, thresh = thresh, genome = \"hg38\") plot_marginal_coverage(\"pbmc_atac.marginal\", interval = peaks_raw[900, ], peaks = peaks_split, expand = 1000, show_thresh = TRUE, thresh = thresh, genome = \"hg38\") }"},{"path":"/reference/plot_peak_coverage_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the coverage density of the peaks — plot_peak_coverage_density","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"peak, plot scatter peak length vs number UMIs per scale bp.","code":""},{"path":"/reference/plot_peak_coverage_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"","code":"plot_peak_coverage_density(atac, scale = 100, pointsize = 1.5, ...)"},{"path":"/reference/plot_peak_coverage_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"atac ScATAC McATAC object scale 'cov_density' field, calculate number UMIs per scale bp (default: 100) pointsize Radius rasterized point. Use 0 single pixels (fastest). ... Arguments passed scattermore::geom_scattermore mapping passed ggplot2::layer() data passed ggplot2::layer() stat passed ggplot2::layer() position passed ggplot2::layer() inherit.aes passed ggplot2::layer() show.legend passed ggplot2::layer() na.rm Remove NA values, just ggplot2::geom_point(). interpolate Default FALSE, passed grid::rasterGrob(). pixels Vector X Y resolution raster, default c(512,512).","code":""},{"path":"/reference/plot_peak_coverage_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the coverage density of the peaks — plot_peak_coverage_density","text":"","code":"if (FALSE) { plot_peak_coverage_density(atac) }"},{"path":"/reference/plot_peak_coverage_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"Plot coverage distribution peaks","code":""},{"path":"/reference/plot_peak_coverage_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"","code":"plot_peak_coverage_distribution(atac)"},{"path":"/reference/plot_peak_coverage_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"atac ScATAC McATAC object","code":""},{"path":"/reference/plot_peak_coverage_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"ggplot object distribution peak coverage","code":""},{"path":"/reference/plot_peak_coverage_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the coverage distribution of the peaks — plot_peak_coverage_distribution","text":"","code":"if (FALSE) { plot_peak_coverage_distribution(scatac) }"},{"path":"/reference/plot_peak_length_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of the peak length — plot_peak_length_distribution","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"Plot distribution peak length","code":""},{"path":"/reference/plot_peak_length_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"","code":"plot_peak_length_distribution(atac)"},{"path":"/reference/plot_peak_length_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"atac ScATAC McATAC object","code":""},{"path":"/reference/plot_peak_length_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"ggplot object distribution peak length","code":""},{"path":"/reference/plot_peak_length_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distribution of the peak length — plot_peak_length_distribution","text":"","code":"if (FALSE) { plot_peak_length_distribution(scatac) }"},{"path":"/reference/plot_peak_max_cov_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"Plot maximal per-cell coverage distribution peaks","code":""},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"","code":"plot_peak_max_cov_distribution(atac)"},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"atac ScATAC McATAC object","code":""},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"ggplot object distribution maximal per-cell coverage peak","code":""},{"path":"/reference/plot_peak_max_cov_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the maximal per-cell coverage distribution of the peaks — plot_peak_max_cov_distribution","text":"","code":"if (FALSE) { plot_peak_max_cov_distribution(scatac) }"},{"path":"/reference/plot_rna_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of marker genes fold change over metacells given an McATAC object — plot_rna_markers","title":"Plot a heatmap of marker genes fold change over metacells given an McATAC object — plot_rna_markers","text":"thin wrapper around plot_rna_markers_mat computes marker matrix uses correct metadata fields McATAC object.","code":""},{"path":"/reference/plot_rna_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of marker genes fold change over metacells given an McATAC object — plot_rna_markers","text":"","code":"plot_rna_markers(atac_mc, n_genes = 100, force_cell_type = TRUE, ...)"},{"path":"/reference/plot_rna_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of marker genes fold change over metacells given an McATAC object — plot_rna_markers","text":"atac_mc McATAC object RNA expression (using add_mc_rna) n_genes maximal number genes return. Default: 1000 force_cell_type split cell types ordering metacells. Default: TRUE ... Arguments passed plot_rna_markers_mat mat heatmap marker genes fold change metacells (e.g. output get_rna_marker_matrix) metacell_types data frame field called \"metacell\" field called \"cell_type\" (optional) cell_type_colors data frame field called \"cell_type\" field called \"color\" (optional) low_color color low fold change high_color color high fold change mid_color color mid fold change midpoint midpoint color scale (default: 0) min_lfp minimum log2 fold change (default: -3). Value set min_lfp. max_lfp maximum log2 fold change (default: 3). Value set max_lfp. plot_legend TRUE plot legend cell types (default: TRUE) top_cell_type_bar add cell type annotation also top heatmap (default: TRUE) gene_colors named list color marker gene (optional) col_names show column names (metacells) interleave show gene names (rows) interleaved annotation_title title cell type annotation. Default: \"Cell type\" top_annotation_title title top cell type annotation. Default: \"Cell type\" title title plot row_names names used Y-axis labels. NULL (defualt) indicates original matrix rownames used. FALSE indicates Y-axis labels displayed. col_names_orient Orientation X-axis label plot_right Whether put Y-axis labels right side heatmap (well left hand side)","code":""},{"path":"/reference/plot_rna_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of marker genes fold change over metacells given an McATAC object — plot_rna_markers","text":"","code":"if (FALSE) { plot_rna_markers(atac_mc) }"},{"path":"/reference/plot_rna_markers_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"Plot heatmap marker genes fold change metacells","code":""},{"path":"/reference/plot_rna_markers_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"","code":"plot_rna_markers_mat(   mat,   metacell_types = NULL,   cell_type_colors = NULL,   low_color = \"blue\",   high_color = \"red\",   mid_color = \"white\",   midpoint = 0,   min_lfp = -3,   max_lfp = 3,   plot_legend = TRUE,   top_cell_type_bar = TRUE,   gene_colors = NULL,   col_names = FALSE,   row_names = TRUE,   col_names_orient = \"slanted\",   plot_right = TRUE,   interleave = TRUE,   vertial_gridlines = FALSE,   annotation_title = \"Cell type\",   top_annotation_title = \"Cell type\",   title = NULL )"},{"path":"/reference/plot_rna_markers_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"mat heatmap marker genes fold change metacells (e.g. output get_rna_marker_matrix) metacell_types data frame field called \"metacell\" field called \"cell_type\" (optional) cell_type_colors data frame field called \"cell_type\" field called \"color\" (optional) low_color color low fold change high_color color high fold change mid_color color mid fold change midpoint midpoint color scale (default: 0) min_lfp minimum log2 fold change (default: -3). Value set min_lfp. max_lfp maximum log2 fold change (default: 3). Value set max_lfp. plot_legend TRUE plot legend cell types (default: TRUE) top_cell_type_bar add cell type annotation also top heatmap (default: TRUE) gene_colors named list color marker gene (optional) col_names show column names (metacells) row_names names used Y-axis labels. NULL (defualt) indicates original matrix rownames used. FALSE indicates Y-axis labels displayed. col_names_orient Orientation X-axis label plot_right Whether put Y-axis labels right side heatmap (well left hand side) interleave show gene names (rows) interleaved annotation_title title cell type annotation. Default: \"Cell type\" top_annotation_title title top cell type annotation. Default: \"Cell type\" title title plot vertical_gridlines show vertical gridlines","code":""},{"path":"/reference/plot_rna_markers_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"ggplot object heatmap (legend plot_legend TRUE)","code":""},{"path":"/reference/plot_rna_markers_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of marker genes fold change over metacells — plot_rna_markers_mat","text":"","code":"if (FALSE) { m_rna <- get_rna_marker_matrix(atac_mc) plot_rna_markers_mat(m_rna, atac_mc@metadata, atac_mc@metadata, col_names = F) }"},{"path":"/reference/prepare_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare peak clusters for export (backend function) — prepare_clusters","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"Prepare peak clusters export (backend function)","code":""},{"path":"/reference/prepare_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"","code":"prepare_clusters(   mc_atac,   clust_vec = NULL,   normalization = \"none\",   eps_q = 0.05 )"},{"path":"/reference/prepare_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"mc_atac McATAC object clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) normalization (optional) normalization method, either 'none', 'lfcom' (log2 fold-change median), 'zs' (Z-scores) eps_q normalization == 'lfcom', use quantile eps_q (default = 0.05) regularizing log expression","code":""},{"path":"/reference/prepare_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"list : atac_mc_mat_clust: ATAC signal per peak averaged clusters clusts: names clusters col_key: mapping cluster names colors","code":""},{"path":"/reference/project_atac_on_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"Given cell metacell association, summarise atac counts generate McATAC object. project_atac_on_mc_from_metacell1 projects given metacell1 'mc' object, project_atac_on_mc_from_h5ad uses output 'metacells' python package (metacell2).","code":""},{"path":"/reference/project_atac_on_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"","code":"project_atac_on_mc(   atac,   cell_to_metacell = NULL,   metadata = NULL,   min_int_frac = 0.5,   mc_size_eps_q = 0.1,   id = NULL,   description = NULL,   rm_zero_peaks = TRUE )  project_atac_on_mc_from_metacell1(   atac,   scdb,   mc_id,   metadata = NULL,   id = NULL,   description = NULL )  project_atac_on_mc_from_h5ad(   atac,   h5ad_file,   min_int_frac = 0.5,   metadata = NULL,   id = NULL,   description = NULL )"},{"path":"/reference/project_atac_on_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"atac ScATAC object cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part . metadata (optional) per-metacell metadata. data frame column called 'metacell' additional metacell annotations. min_int_frac (optional) minimal expected fraction intersection barcodes (cell names) ScATAC mc_size_eps_q (optional) quantile MC size (UMIs) scale number UMIs per metacell. \\(egc_ij\\) fraction peak metacell j multiplied mc_size_eps_q quantile metacell sizes. id identifier object, e.g. \"pbmc\". NULL - id taken scATAC object atac. description identifier object, e.g. \"pbmc\". NULL - description taken scATAC object atac rm_zero_peaks remove peaks without reads (-zero peaks). Default: TRUE scdb metacell1 scdb path mc_id id metacell object within scdb h5ad_file name h5ad file output 'metacells' python package.","code":""},{"path":"/reference/project_atac_on_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"McATAC object","code":""},{"path":"/reference/project_atac_on_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") atac_mc <- project_atac_on_mc_from_metacell1(atac_sc, \"pbmc_data/scdb\", \"rna\") }"},{"path":"/reference/rna_atac_cor_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"Match every gene k ATAC peaks correlated ","code":""},{"path":"/reference/rna_atac_cor_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"","code":"rna_atac_cor_knn(   atac_mc,   k = 1,   genes = NULL,   rm_zeros = TRUE,   spearman = TRUE,   pairwise.complete.obs = TRUE )"},{"path":"/reference/rna_atac_cor_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"atac_mc McATAC object RNA expression (using add_mc_rna) k number peaks match gene. Default: 1 genes list genes match. Default (NULL): genes rm_zeros remove genes RNA expression metacell. Default: TRUE spearman 'TRUE' Spearman correlation computed, otherwise Pearson pairwise.complete.obs see ","code":""},{"path":"/reference/rna_atac_cor_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"tibble following columns: gene: Gene name peak: ATAC peak name cor: Correlation ATAC RNA rank: Rank correlation (gene)","code":""},{"path":"/reference/rna_atac_cor_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match every gene with the k ATAC peaks most correlated to it — rna_atac_cor_knn","text":"","code":"if (FALSE) { rna_atac_cor_knn(atac_mc, k = 1) rna_atac_cor_knn(atac_mc, k = 1, genes = c(\"MESP1\", \"MESP2\", \"PF4\")) }"},{"path":"/reference/save_pheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","title":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","text":"pheatmap::pheatmap accepts parameter called filename saves pheatmap disk. However, heatmap shown screen. function workaround show heatmap screen save disk.","code":""},{"path":"/reference/save_pheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","text":"","code":"save_pheatmap(x, filename, dev = png, width = 2000, height = 2000, res = 150)"},{"path":"/reference/save_pheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to save pheatmaps to disk while showing them on screen — save_pheatmap","text":"filename output file path.     page number substituted C integer format included     character string, default.  (result must less     PATH_MAX characters long, may truncated .     See postscript details.)  Tilde expansion     performed supported platform.  input     marked encoding converted native encoding error     given. dev name device save pheatmap. e.g. \"png\" \"pdf\" width width device. height height device. res nominal resolution ppi recorded     bitmap file, positive integer.  Also used units     default, convert points pixels.","code":""},{"path":"/reference/split_long_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Split long peaks into smaller peaks — split_long_peaks","title":"Split long peaks into smaller peaks — split_long_peaks","text":"Peaks splitted smaller peaks longer target_size. splitting done first checking peak length very_long. , peak splitted arbitrarily chunks size approximately very_long.  , chunks splitted smaller chunks approximately size target_size. splitting done first finding best offset start splitting peaks chunks size target_size starting offset.  Detection best offset done substracting mean interval coverage, removing values became zero, correlating thr marginal coverage simulated 'triangle' peaks starting different offsets.","code":""},{"path":"/reference/split_long_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split long peaks into smaller peaks — split_long_peaks","text":"","code":"split_long_peaks(   marginal_track,   peaks,   target_size = 500,   max_peak_size = 1000,   very_long = 5000,   min_peak_size = NULL )"},{"path":"/reference/split_long_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split long peaks into smaller peaks — split_long_peaks","text":"marginal_track Name 'misha' track marginal coverage. can create using import_atac_marginal. peaks intervals set peaks split. target_size target size peaks. max_peak_size Peaks size splitted smaller peaks. very_long Peaks size splitted arbitrarily smaller peaks fitting best offset. min_peak_size Peaks size discarded.","code":""},{"path":"/reference/split_long_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split long peaks into smaller peaks — split_long_peaks","text":"","code":"if (FALSE) { split_peaks <- split_long_peaks(\"pbmc_atac.marginal\", peaks = peaks, target_size = 500, max_peak_size = 1e3, very_long = 5e3, min_peak_size = 20) }"},{"path":"/reference/subset_peak_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset McATAC by certain clusters — subset_peak_clusters","title":"Subset McATAC by certain clusters — subset_peak_clusters","text":"Subset McATAC certain clusters","code":""},{"path":"/reference/subset_peak_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset McATAC by certain clusters — subset_peak_clusters","text":"","code":"subset_peak_clusters(   atac_mc,   cluster_membership,   clusters_to_keep,   reverse = TRUE )"},{"path":"/reference/subset_peak_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset McATAC by certain clusters — subset_peak_clusters","text":"atac_mc McATAC object cluster_membership cluster peak member clusters_to_keep vector clusters keep (exclude, reverse == TRUE) reverse (optional) - logical/flag whether keep (default - TRUE) remove clusters clusters_to_keep","code":""},{"path":"/reference/subset_peak_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset McATAC by certain clusters — subset_peak_clusters","text":"atac_mc object clusters (peaks) interest (saved \"ignore_...\" slots)","code":""},{"path":"/reference/subset_peak_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset McATAC by certain clusters — subset_peak_clusters","text":"","code":"if (FALSE) { peak_cl_km <- gen_atac_peak_clust(atac_mc, k = 15) atac_mc_subset <- subset_peak_clusters(atac_mc, cluster_membership = peak_cl_km, clusters_to_keep = c(4, 5, 8)) }"},{"path":"/reference/subset_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset peaks of an McATAC object — subset_peaks","title":"Subset peaks of an McATAC object — subset_peaks","text":"Subset peaks McATAC object","code":""},{"path":"/reference/subset_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset peaks of an McATAC object — subset_peaks","text":"","code":"subset_peaks(atac_mc, peak_set)"},{"path":"/reference/subset_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset peaks of an McATAC object — subset_peaks","text":"atac_mc McATAC object peak_set subset peaks atac_mc@peaks keep","code":""},{"path":"/reference/subset_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset peaks of an McATAC object — subset_peaks","text":"atac_mc object peaks interest (saved \"ignore_...\" slots)","code":""},{"path":"/reference/subset_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset peaks of an McATAC object — subset_peaks","text":"","code":"if (FALSE) { ## Use \"default clustering\" - the existing annotations mc_clusters <- gen_atac_mc_clust(my_atac_mc, use_prior_annot = T)  ## Identify peaks of interest, namely peaks neighboring a set of feature genes, and subset by them nei_peaks_feat_genes <- gintervals.neighbors(my_atac_mc@peaks, tss[tss$name %in% feature_genes, ], maxdist = 5e+5) peaks_of_interest <- nei_peaks_feat_genes[, c(\"chrom\", \"start\", \"end\")] mc_clusters <- subset_peaks(my_atac_mc, peaks_of_interest) }"},{"path":"/reference/write_cluster_misha_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"generates track metacell cluster","code":""},{"path":"/reference/write_cluster_misha_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"","code":"write_cluster_misha_track(   cl,   atac_mc_mat_clust,   track_prefix,   description = NULL,   override = FALSE )"},{"path":"/reference/write_cluster_misha_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"cl ATAC metacell cluster atac_mc_mat_clust matrix ATAC signal averaged across metacells cluster track_prefix prefix track name description (optional) description track (can glue-formatted expression) override (optional) whether override existing track; warning: may slow runtime substantially (due reloading misha db)","code":""},{"path":"/reference/write_cluster_misha_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"trknm - name generated track misha database","code":""}]
