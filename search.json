[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/mcATAC.html","id":"download-dataset","dir":"Articles","previous_headings":"","what":"Download dataset","title":"mcATAC","text":"Download following dataset 10x: PBMC healthy donor - granulocytes removed cell sorting (10k) (Filtered feature barcode matrix MEX (DIR)) extract contents directory called pbmc_data.","code":"if (!dir.exists(\"pbmc_data\")){   download_pbmc_example_data() }"},{"path":"/articles/mcATAC.html","id":"import-atac-dataset","dir":"Articles","previous_headings":"","what":"Import ATAC dataset","title":"mcATAC","text":"","code":"atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") #> • Importing matrix #> ℹ Imported a matrix of 11909 cells and 144978 features #> • Importing features #> ℹ 108377 ATAC peaks #> ! removed 33 peaks from the following chromosome(s) which are missing from hg38: KI270727.1, GL000194.1, GL000205.2, GL000195.1, GL000219.1, KI270734.1, KI270721.1, KI270726.1, KI270713.1 #> ✔ successfully imported to an ScATAC object with 11909 cells and 108377 ATAC peaks atac_sc #> An ScATAC object with 11909 cells 108344 ATAC peaks from hg38. #> Slots include: #> • `@mat`: a numeric matrix where rows are peaks and columns are cells. Can be a #> sparse matrix. #> • `@peaks`: a misha intervals set with the peak definitions. #> • `@genome`: genome assembly of the peaks"},{"path":"/articles/mcATAC.html","id":"project-rna-metacells","dir":"Articles","previous_headings":"","what":"Project RNA metacells","title":"mcATAC","text":"using metacell1 object:","code":"data(cell_to_metacell_pbmc_example) head(cell_to_metacell_pbmc_example) #> # A tibble: 6 × 2 #>   cell_id            metacell #>   <chr>                 <int> #> 1 AAACAGCCAATCCCTT-1       44 #> 2 AAACAGCCAATGCGCT-1       22 #> 3 AAACAGCCACCAACCG-1        7 #> 4 AAACAGCCAGGATAAC-1       24 #> 5 AAACAGCCAGTTTACG-1       32 #> 6 AAACATGCAAGGTCCT-1       30 atac_mc <- project_atac_on_mc(atac_sc, cell_to_metacell_pbmc_example) #> ℹ 3198 cells (out of 11909) do not have a metacell and have been removed. #> ✔ Created a new McATAC object with 97 metacells and 108344 ATAC peaks. atac_mc <- project_atac_on_mc_from_metacell1(atac_sc, \"pbmc_data/scdb\", \"rna\")"},{"path":"/articles/mcATAC.html","id":"export-to-an-h5ad-file","dir":"Articles","previous_headings":"","what":"Export to an h5ad file","title":"mcATAC","text":"","code":"export_to_h5ad(atac_mc, \"pbmc_data/atac_mc.h5ad\", compression = \"gzip\") #> • Creating an AnnData object #> • Writing to file #> ✔ Successfully exported to pbmc_data/atac_mc.h5ad # Load using: atac_mc <- import_from_h5ad(\"pbmc_data/atac_mc.h5ad\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Yonatan Shapira. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Shapira Y (2022). mcATAC: Metacell analysis ATAC data. R package version 0.0.0.9000, https://github.com/tanaylab/mcATAC.","code":"@Manual{,   title = {mcATAC: Metacell analysis for ATAC data},   author = {Aviezer Lifshitz and Yonatan Shapira},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/tanaylab/mcATAC}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metacell analysis for ATAC data","text":"can install development version mcATAC like :","code":"remotes::install_github(\"tanaylab/mcATAC\")"},{"path":[]},{"path":"/reference/ATAC-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ATAC objects — ATAC-class","title":"ATAC objects — ATAC-class","text":"ATAC shallow object holding ATAC data cells/metacells. Minimally include count matrix peaks cells/metacells, PeakIntervals hold coordinates peaks id genome assembly peaks. ScATAC McATAC extend ATAC object adding metadata additional slots.","code":""},{"path":"/reference/ATAC-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ATAC objects — ATAC-class","text":"mat numeric matrix rows peaks columns cells/metacells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations McATAC, 'cell_id' per-cell annotatoins ScATAC. constructor can also include name delimited file contains annotations.","code":""},{"path":"/reference/ATAC.html","id":null,"dir":"Reference","previous_headings":"","what":"McATAC — McATAC-class","title":"McATAC — McATAC-class","text":"ATAC object data metacells ATAC object data cells","code":""},{"path":"/reference/PeakIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a PeakIntervals object from misha intervals — PeakIntervals","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"PeakIntervals object simply misha intervals set can , optionally, field called 'peak_name' holds name peaks. Note informative rownames make explicit column due fact package might change occasionally (e.g. creating h5ad files)","code":""},{"path":"/reference/PeakIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"","code":"PeakIntervals(intervals, genome = NULL)"},{"path":"/reference/PeakIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"intervals misha intervals (data frame following columns: 'chrom', 'start' 'end') genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\".","code":""},{"path":"/reference/PeakIntervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a PeakIntervals object from misha intervals — PeakIntervals","text":"PeakIntervals object","code":""},{"path":"/reference/annotate_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate an intervals set — annotate_intervals","title":"Annotate an intervals set — annotate_intervals","text":"ATAC peaks classified either 'promoter', 'intronic', 'exonic', 'ig_proximal' (intergenic-proximal), 'ig_distal' (intergenic-distal) 'desert'. Promoter peaks less min_proximal away TSS. Intronic peaks within gene bodies, exon. Exonic peaks overlap exons. Intergenic-proximal peaks less max_proximal away TSS, within gene body Intergenic-distal peaks min_distal away TSS, less max-distal TSS, within gene body. Desert peaks least max_distal known TSS (defined tss interval set).","code":""},{"path":"/reference/annotate_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate an intervals set — annotate_intervals","text":"","code":"annotate_intervals(   intervals,   genome,   min_proximal = 1000,   max_proximal = 20000,   min_distal = 20000,   max_distal = 1000000,   exonic_peak_dist = 0 )"},{"path":"/reference/annotate_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate an intervals set — annotate_intervals","text":"intervals intervals set annotate genome genome/genomic database use (e.g. 'mm10', 'hg19') min_proximal minimum distance TSS, peak considered promoter peak, beyond () proximal enhancer. max_proximal minimum distance TSS, peak considered proximal enhancer peak, beyond () . min_distal minimum distance TSS, peak considered distal enhancer. Usually equal max_proximal, unless good reason max_distal maximum distance TSS, peak considered distal enhancer, 'desert' peak. exonic_peak_dist parameter allows proximity (without overlap) peaks exons still classifies exonic peaks, active transcription usually confers accessibility vicinity exons, might confound possible assignment regulatory activity exon.","code":""},{"path":"/reference/annotate_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate an intervals set — annotate_intervals","text":"intervals - input intervals set added field called peak_annot","code":""},{"path":"/reference/annotate_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate an intervals set — annotate_intervals","text":"","code":"if (FALSE) { my_intervals <- annotate_intervals(my_intervals, \"mm10\", min_proximal = 1e+03, max_proximal = 2e+04, max_distal = 1e+06, exonic_peak_dist = 5e+2) table(my_intervals$peak_annot) }"},{"path":"/reference/annotate_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate ATAC peaks — annotate_peaks","title":"Annotate ATAC peaks — annotate_peaks","text":"Annotate ATAC peaks","code":""},{"path":"/reference/annotate_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate ATAC peaks — annotate_peaks","text":"","code":"annotate_peaks(atac)"},{"path":"/reference/annotate_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate ATAC peaks — annotate_peaks","text":"atac McATAC ScATAC object","code":""},{"path":"/reference/annotate_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate ATAC peaks — annotate_peaks","text":"original atac object, peaks annotated using annotate_intervals","code":""},{"path":"/reference/annotate_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate ATAC peaks — annotate_peaks","text":"","code":"if (FALSE) { pbmc_atac_mc <- annotate_peaks(pbmc_atac_mc) }"},{"path":"/reference/download_pbmc_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example data from 10x — download_pbmc_example_data","title":"Download example data from 10x — download_pbmc_example_data","text":"Download following dataset 10x site: PBMC healthy donor - granulocytes removed cell sorting (10k) Link: https://support.10xgenomics.com/single-cell-multiome-atac-gex/datasets/1.0.0/pbmc_granulocyte_sorted_10k File: Filtered feature barcode matrix MEX (DIR)","code":""},{"path":"/reference/download_pbmc_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example data from 10x — download_pbmc_example_data","text":"","code":"download_pbmc_example_data(dir = \"pbmc_data\")"},{"path":"/reference/download_pbmc_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download example data from 10x — download_pbmc_example_data","text":"dir directory download data ","code":""},{"path":"/reference/download_pbmc_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download example data from 10x — download_pbmc_example_data","text":"","code":"if (FALSE) { download_pbmc_example_data() }"},{"path":"/reference/export_atac_clust_misha.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"generate track metacell cluster, form track_prefix.name, names given clust_names","code":""},{"path":"/reference/export_atac_clust_misha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"","code":"export_atac_clust_misha(   mc_atac,   track_prefix,   description = NULL,   clust_vec = NULL,   normalization = \"none\",   parallel = FALSE,   num_cores = NULL )"},{"path":"/reference/export_atac_clust_misha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"track_prefix prefix generated misha tracks. description (optional) description tracks (can glue-formatted expression) clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) parallel (optional) run function parallel processing num_cores (required parallel == TRUE) number cores use parallel processing mc_atac_mat metacell ATAC matrix (like mc_atac@mat)","code":""},{"path":"/reference/export_atac_clust_misha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a misha track for each atac metacell cluster — export_atac_clust_misha","text":"track_names names generated misha tracks","code":""},{"path":"/reference/export_atac_clust_ucsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"Generate ucsc genome browser file metacell cluster","code":""},{"path":"/reference/export_atac_clust_ucsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"","code":"export_atac_clust_ucsc(   mc_atac,   track_prefix,   output_dir = getwd(),   clust_vec = NULL,   normalization = \"none\" )"},{"path":"/reference/export_atac_clust_ucsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ucsc genome browser file for each metacell cluster — export_atac_clust_ucsc","text":"mc_atac McATAC object track_prefix prefix generated misha tracks. output_dir (optional) name directory write files clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) normalization (optional) normalization method, either 'none', 'lfcom' (log2 fold-change median), 'zs' (Z-scores)","code":""},{"path":"/reference/export_to_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"Write McATAC ScATAC object h5ad file","code":""},{"path":"/reference/export_to_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"","code":"export_to_h5ad(object, out_file, ...)"},{"path":"/reference/export_to_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"object McATAC ScATAC object out_file name output file ... Arguments passed anndata::write_h5ad anndata AnnData() object filename Filename data file. Defaults backing file. compression See h5py filter pipeline. Options \"gzip\", \"lzf\" NULL. compression_opts See h5py filter pipeline. as_dense Sparse AnnData object write dense. Currently supports \"X\" \"raw/X\".","code":""},{"path":"/reference/export_to_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"None.","code":""},{"path":"/reference/export_to_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a McATAC or ScATAC object to an h5ad file — export_to_h5ad","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") export_to_h5ad(atac_sc, \"pbmc_data/atac_sc.h5ad\") }"},{"path":"/reference/gen_atac_mc_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"Cluster metacells based atac profiles using k-means algorithm","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"","code":"gen_atac_mc_clust(   atac_mc,   use_prior_annot = TRUE,   k = NULL,   peak_set = NULL,   annot = \"cell_type\",   ... )"},{"path":"/reference/gen_atac_mc_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"atac_mc McATAC object use_prior_annot (optional) TRUE - use metacell annotation generate metacell clusters. Clusters generated based categorical field annot metadata slot McATAC object. k (optional, use_prior_annot == F) number clusters generate peak_set subset peaks atac_mc@peaks cluster annot name field use use_prior_annot == T. ... Arguments passed tglkmeans::TGL_kmeans df data frame. row single observation column dimension. first column can contain id observation (id_column TRUE). metric distance metric kmeans++ seeding. can 'euclid', 'pearson' 'spearman' max_iter maximal number iterations min_delta minimal change assignments (fraction observations) continue iterating verbose display algorithm messages keep_log keep algorithm messages 'log' field id_column df's first column contains observation id reorder_func function reorder clusters. operates center orders result. e.g. reorder_func = mean calculate mean center reorder clusters accordingly. reorder_func = hclust centers ordered hclust euclidian distance correlation matrix, .e. hclust(dist(cor(t(centers)))) NULL, reordering done. hclust_intra_clusters run hierarchical clustering within cluster return ordering observations. seed seed c++ random number generator parallel cluster every cluster parallely (hclust_intra_clusters true)","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"named numeric vector specifying cluster metacell","code":""},{"path":"/reference/gen_atac_mc_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster metacells based on atac profiles using the k-means algorithm — gen_atac_mc_clust","text":"","code":"if (FALSE) { ## Use \"default clustering\" - the existing annotations mc_clusters <- gen_atac_mc_clust(my_atac_mc, use_prior_annot = T)  ## Identify peaks of interest, namely peaks neighboring a set of feature genes, and use only them for clustering nei_peaks_feat_genes <- gintervals.neighbors(my_atac_mc@peaks, tss[tss$name %in% feature_genes, ], maxdist = 5e+5) peaks_of_interest <- nei_peaks_feat_genes[, c(\"chrom\", \"start\", \"end\")] mc_clusters <- gen_atac_mc_clust(my_atac_mc, k = 16, peak_set = peaks_of_interest, use_prior_annot = F) }"},{"path":"/reference/gen_atac_peak_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"Cluster atac peaks based atac distributions","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"","code":"gen_atac_peak_clust(atac_mc, k, peak_set = NULL, ...)"},{"path":"/reference/gen_atac_peak_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"atac_mc McATAC object k number clusters peak_set (optional) subset peaks atac_mc@peaks cluster ... Arguments passed tglkmeans::TGL_kmeans df data frame. row single observation column dimension. first column can contain id observation (id_column TRUE). metric distance metric kmeans++ seeding. can 'euclid', 'pearson' 'spearman' max_iter maximal number iterations min_delta minimal change assignments (fraction observations) continue iterating verbose display algorithm messages keep_log keep algorithm messages 'log' field id_column df's first column contains observation id reorder_func function reorder clusters. operates center orders result. e.g. reorder_func = mean calculate mean center reorder clusters accordingly. reorder_func = hclust centers ordered hclust euclidian distance correlation matrix, .e. hclust(dist(cor(t(centers)))) NULL, reordering done. hclust_intra_clusters run hierarchical clustering within cluster return ordering observations. seed seed c++ random number generator parallel cluster every cluster parallely (hclust_intra_clusters true)","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"atac_mc added cluster_k_k column atac_mc@peaks specifying cluster enhancer","code":""},{"path":"/reference/gen_atac_peak_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster atac peaks based on atac distributions — gen_atac_peak_clust","text":"","code":"if (FALSE) { my_atac_mc <- gen_atac_peak_clust(my_atac_mc, ) }"},{"path":"/reference/gen_peak_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Select peaks features by minimal coverage and threshold max-min fold — gen_peak_features","title":"Select peaks features by minimal coverage and threshold max-min fold — gen_peak_features","text":"Select peaks features minimal coverage threshold max-min fold","code":""},{"path":"/reference/gen_peak_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select peaks features by minimal coverage and threshold max-min fold — gen_peak_features","text":"","code":"gen_peak_features(   atac,   min_fold,   min_abs,   only_promoters = FALSE,   upstream = 500,   downstream = 50 )"},{"path":"/reference/gen_peak_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select peaks features by minimal coverage and threshold max-min fold — gen_peak_features","text":"atac McATAC ScATAC object min_fold minimal max-min fold change min_abs minimal total coverage per peak only_promoters TRUE - summarise features get promoters upstream bp upstream TSS downstream bp downstread tss","code":""},{"path":"/reference/import_from_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScATAC object from 10x directory — import_from_10x","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"Create ScATAC object 10x directory","code":""},{"path":"/reference/import_from_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"","code":"import_from_10x(   dir,   genome,   metadata = NULL,   matrix_fn = file.path(dir, \"matrix.mtx\"),   cells_fn = file.path(dir, \"barcodes.tsv\"),   features_fn = file.path(dir, \"features.tsv\") )"},{"path":"/reference/import_from_10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"dir 10x directory. following files: 'matrix.mtx', 'barcodes.tsv' 'features.tsv'. See 'Cell Ranger Arc' details: https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/overview/welcome genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations. matrix_fn dir missing, filename matrix import (\"matrix.mtx\" \"matrix.mtx.gz\") cells_fn dir missing, filename cells import (\"barcodes.tsv\" \"barcodes.tsv.gz\") features_fn dir missing, filename features import (\"features.tsv\" \"features.tsv.gz\")","code":""},{"path":"/reference/import_from_10x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"ScATAC object","code":""},{"path":"/reference/import_from_10x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScATAC object from 10x directory — import_from_10x","text":"","code":"if (FALSE) { atac <- import_from_10x(\"./pbmc_data\", genome = \"hg38\") atac }"},{"path":"/reference/import_from_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"Create ScATAC,McATAC object h5ad file","code":""},{"path":"/reference/import_from_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"","code":"import_from_h5ad(file, class = NULL, genome = NULL)"},{"path":"/reference/import_from_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"file name h5ad file ATAC data class file storing ScATAC McATAC. NULL - class determined 'class' field 'uns' part h5ad file, exists otherwise class McATAC. genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\". NULL - assembly determined 'genome' field 'uns' part h5ad file.","code":""},{"path":"/reference/import_from_h5ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"ScATAC/McATAC object","code":""},{"path":"/reference/import_from_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ScATAC,McATAC object from an h5ad file — import_from_h5ad","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") export_to_h5ad(atac_sc, \"pbmc_data/atac_sc.h5ad\") atac_sc_loaded <- import_from_h5ad(\"pbmc_data/atac_sc.h5ad\") }"},{"path":"/reference/initialize-McATAC-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new McATAC object — initialize,McATAC-method","title":"Construct a new McATAC object — initialize,McATAC-method","text":"McATAC shallow object holding ATAC data metacells. Minimally include count matrix peaks metacells, PeakIntervals hold coordinates peaks.","code":""},{"path":"/reference/initialize-McATAC-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new McATAC object — initialize,McATAC-method","text":"","code":"# S4 method for McATAC initialize(.Object, mat, peaks, genome, metadata = NULL)"},{"path":"/reference/initialize-McATAC-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new McATAC object — initialize,McATAC-method","text":"mat numeric matrix rows peaks columns metacells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'metacell' additional metacell annotations, name delimited file contains annotations.","code":""},{"path":"/reference/initialize-ScATAC-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new McATAC object — initialize,ScATAC-method","title":"Construct a new McATAC object — initialize,ScATAC-method","text":"ScATAC shallow object holding ATAC data cells. Minimally include count matrix peaks cells, PeakIntervals hold coordinates peaks.","code":""},{"path":"/reference/initialize-ScATAC-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new McATAC object — initialize,ScATAC-method","text":"","code":"# S4 method for ScATAC initialize(.Object, mat, peaks, genome, metadata = NULL)"},{"path":"/reference/initialize-ScATAC-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new McATAC object — initialize,ScATAC-method","text":"mat numeric matrix rows peaks columns cells. Can sparse matrix. peaks misha intervals set. Can contain field named 'peak_name' unique name per peak. names intervals unique (peak appear ). genome genome assembly peaks. e.g. \"hg38\", \"hg19\", \"mm9\", \"mm10\" metadata data frame column called 'cell_id' additional per-cell annotations, name delimited file contains annotations.","code":""},{"path":"/reference/mcATAC-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcATAC: Metacell analysis for ATAC data — mcATAC-package","title":"mcATAC: Metacell analysis for ATAC data — mcATAC-package","text":"Metacell analysis ATAC data","code":""},{"path":[]},{"path":"/reference/mcATAC-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcATAC: Metacell analysis for ATAC data — mcATAC-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Yonatan Shapira yonatan.shapira@weizmann.ac.il","code":""},{"path":"/reference/peak_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the names of PeakIntervals — peak_names","title":"Return the names of PeakIntervals — peak_names","text":"Return names PeakIntervals","code":""},{"path":"/reference/peak_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the names of PeakIntervals — peak_names","text":"","code":"peak_names(peaks)"},{"path":"/reference/peak_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the names of PeakIntervals — peak_names","text":"peaks PeakIntervals object misha intervals","code":""},{"path":"/reference/peak_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the names of PeakIntervals — peak_names","text":"field called 'peak_name' exists peaks, coordinates seperated underscore.","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"Plot correlation matrix ATAC metacells","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"","code":"plot_atac_atac_cor(mc_atac, sp_f = TRUE)"},{"path":"/reference/plot_atac_atac_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"mc_atac McATAC object sp_f whether use Spearman correlation (default) Pearson","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"p pheatmap ATAC metacell correlations","code":""},{"path":"/reference/plot_atac_atac_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a correlation matrix of ATAC metacells — plot_atac_atac_cor","text":"","code":"if (FALSE) { p1 <- plot_atac_atac_cor(my_atac_mc) p2 <- plot_atac_atac_cor(my_atac_mc, sp_f = F) }"},{"path":"/reference/plot_atac_peak_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"Plot normalized accessibility peaks metacells, ordered clustering","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"","code":"plot_atac_peak_map(mc_atac, mc_atac_clust, peak_clust)"},{"path":"/reference/plot_atac_peak_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"mc_atac McATAC object mc_atac_clust output gen_atac_mc_clust peak_clust output gen_atac_peak_clust","code":""},{"path":"/reference/plot_atac_peak_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot normalized accessibility of peaks over metacells, ordered by clustering — plot_atac_peak_map","text":"","code":"if (FALSE) {  }"},{"path":"/reference/plot_atac_rna.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"Plot scatter gene expression vs atac profile","code":""},{"path":"/reference/plot_atac_rna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"","code":"plot_atac_rna(   mc_atac,   mc_rna,   gene,   peak = NULL,   max_dist_to_promoter_peak = 500,   eps_q = 0.05 )"},{"path":"/reference/plot_atac_rna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"mc_atac McATAC object mc_rna metacell1 'mc' object metacells metacell UMI matrix gene name gene plot peak name peak plot. NULL - promoter gene shown max_dist_to_promoter_peak far gene's TSS search promoter-proximal peak eps_q quantile mean expression distribution add regularization calculating log expression. Promoter ATAC signal observed empirically often linearly correlated log gene expression.","code":""},{"path":"/reference/plot_atac_rna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"ggplot object scatter plot","code":""},{"path":"/reference/plot_atac_rna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a scatter of gene expression vs an atac profile — plot_atac_rna","text":"","code":"if (FALSE) { p1 <- plot_atac_rna(mc_atac = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\")  ## Plot gene vs some peak of interest; here - expression of CD4 vs. promoter ATAC signal of CD8 tss <- gintervals.load(\"intervs.global.tss\") cd8_tss <- tss[which(tss$geneSymbol == \"CD8\")[[1]], ] peaks_near_cd8_tss <- misha::gintervals.neighbors(pbmc_atac_mc@peaks, cd8_tss, mindist = -2e+3, maxdist = 2e+3) nearest_peak <- peaks_near_cd8_tss[which.min(peaks_near_cd8_tss$dist), ] p2 <- plot_atac_rna(mc_atac = pbmc_atac_mc, mc_rna = pbmc_rna_mc, gene = \"CD4\", peak = nearest_peak[, \"peak_name\"]) }"},{"path":"/reference/plot_atac_rna_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"use peak gene annotations match RNA metacells ATAC metacells plot cross-correlation matrix.","code":""},{"path":"/reference/plot_atac_rna_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"","code":"plot_atac_rna_cor(mc_atac, rna_mat)"},{"path":"/reference/plot_atac_rna_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a cross-correlation matrix between RNA metacells and ATAC metacell scores — plot_atac_rna_cor","text":"mc_atac McATAC object rna_mat RNA metacell count matrix, metacells columns genes rows gene_field name field mc_atac@peaks contains gene names. NULL - peaks transformed promoter peaks gene names taken promoter gene names.","code":""},{"path":"/reference/prepare_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare peak clusters for export (backend function) — prepare_clusters","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"Prepare peak clusters export (backend function)","code":""},{"path":"/reference/prepare_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"","code":"prepare_clusters(   mc_atac,   clust_vec = NULL,   normalization = \"none\",   eps_q = 0.05 )"},{"path":"/reference/prepare_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"mc_atac McATAC object clust_vec (optional) vector length #metacells representing annotation/clustering (can output gen_atac_mc_clust) normalization (optional) normalization method, either 'none', 'lfcom' (log2 fold-change median), 'zs' (Z-scores) eps_q normalization == 'lfcom', use quantile eps_q (default = 0.05) regularizing log expression","code":""},{"path":"/reference/prepare_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare peak clusters for export (backend function) — prepare_clusters","text":"list : atac_mc_mat_clust: ATAC signal per peak averaged clusters clusts: names clusters col_key: mapping cluster names colors","code":""},{"path":"/reference/project_atac_on_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"Given cell metacell association, summarise atac counts generate McATAC object. project_atac_on_mc_from_metacell1 projects given metacell1 'mc' object, project_atac_on_mc_from_h5ad uses output 'metacells' python package (metacell2).","code":""},{"path":"/reference/project_atac_on_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"","code":"project_atac_on_mc(   atac,   cell_to_metacell = NULL,   metadata = NULL,   min_int_frac = 0.5 )  project_atac_on_mc_from_metacell1(atac, scdb, mc_id, metadata = NULL)  project_atac_on_mc_from_h5ad(atac, h5ad_file, metadata = NULL)"},{"path":"/reference/project_atac_on_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"atac ScATAC object cell_to_metacell data frame column named \"cell_id\" cell id another column named \"metacell\" metacell cell part . metadata per-metacell metadata. data frame column called 'metacell' additional metacell annotations. min_int_frac (optional) minimal expected fraction intersection barcodes (cell names) ScATAC scdb metacell1 scdb path mc_id id metacell object within scdb h5ad_file name h5ad file output 'metacells' python package.","code":""},{"path":"/reference/project_atac_on_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"McATAC object","code":""},{"path":"/reference/project_atac_on_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given metacells (usually from RNA data), project ATAC counts to get a McATAC object — project_atac_on_mc","text":"","code":"if (FALSE) { atac_sc <- import_from_10x(\"pbmc_data\", genome = \"hg38\") atac_mc <- project_atac_on_mc_from_metacell1(atac_sc, \"pbmc_data/scdb\", \"rna\") }"},{"path":"/reference/subset_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset peaks of an McATAC object — subset_peaks","title":"Subset peaks of an McATAC object — subset_peaks","text":"Subset peaks McATAC object","code":""},{"path":"/reference/subset_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset peaks of an McATAC object — subset_peaks","text":"","code":"subset_peaks(atac_mc, peak_set)"},{"path":"/reference/subset_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset peaks of an McATAC object — subset_peaks","text":"atac_mc McATAC object peak_set subset peaks atac_mc@peaks keep","code":""},{"path":"/reference/subset_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset peaks of an McATAC object — subset_peaks","text":"","code":"if (FALSE) { ## Use \"default clustering\" - the existing annotations mc_clusters <- gen_atac_mc_clust(my_atac_mc, use_prior_annot = T)  ## Identify peaks of interest, namely peaks neighboring a set of feature genes, and subset by them nei_peaks_feat_genes <- gintervals.neighbors(my_atac_mc@peaks, tss[tss$name %in% feature_genes, ], maxdist = 5e+5) peaks_of_interest <- nei_peaks_feat_genes[, c(\"chrom\", \"start\", \"end\")] mc_clusters <- subset_peaks(my_atac_mc, peaks_of_interest) }"},{"path":"/reference/write_cluster_misha_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"generates track metacell cluster","code":""},{"path":"/reference/write_cluster_misha_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"","code":"write_cluster_misha_track(   cl,   atac_mc_mat_clust,   track_prefix,   description = NULL,   override = FALSE )"},{"path":"/reference/write_cluster_misha_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"cl ATAC metacell cluster atac_mc_mat_clust matrix ATAC signal averaged across metacells cluster track_prefix prefix track name description (optional) description track (can glue-formatted expression) override (optional) whether override existing track; warning: may slow runtime substantially (due reloading misha db)","code":""},{"path":"/reference/write_cluster_misha_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a misha track for a metacell cluster (backend function) — write_cluster_misha_track","text":"trknm - name generated track misha database","code":""}]
